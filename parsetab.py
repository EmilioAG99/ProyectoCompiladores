
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABIDECLARA ABIF ABIJOR ABIMAIN ABIN ABIRRAY ABISTRUCT ABIWORLD ABOUT AGREGA AND ASIG BOOL C CHAR CHAR_VALOR COMP CORA CORC DECREMENTO DIV ELSE FALSE FLOAT FLOAT_VALOR GT GTE ID INCREMENTO INT LLAVEA LLAVEC LT LTE MULT NE NOT NUMERO OR P PARENTA PARENTC PC RESTA RETURN STRING STRING_VALOR TRUE VOID start : variablesGlobales declaracionEstructuras declaracionFuncion declaraMain variablesGlobales : ABIWORLD declaracionVariable PC variablesGlobalesvariablesGlobales : emptydeclaracionVariable : tipoDatos ID ASIG tipoValores \n                           | declaracionArreglo declaracionVariable : declaracionVariable C declaracionVariabledeclaracionVariable : emptytipoDatos : INT\n                 | CHAR\n                 | STRING\n                 | BOOL\n                 | FLOAT\n                 | VOID\n                 tipoValores : NUMERO\n                   | FLOAT_VALOR\n                   | CHAR_VALOR\n                   | STRING_VALOR\n                   | TRUE\n                   | FALSE declaracionArreglo : ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC\n                           | ABIRRAY tipoDatos ID  declaracionEstructuras : ABISTRUCT ID LLAVEA declaracionVariable LLAVEC PC declaracionEstructuras declaracionEstructuras : emptydeclaracionFuncion : tipoDatos ID PARENTA declaracionParametros PARENTC LLAVEA listaInst return LLAVEC declaracionFunciondeclaracionFuncion : emptydeclaracionParametros : tipoDatos IDdeclaracionParametros : declaracionParametros C declaracionParametrosdeclaracionParametros : emptydeclaraMain : ABIMAIN LLAVEA listaInst LLAVECdeclaracionCiclo : ABIJOR PARENTA inicializacion PC cond PC cambio PARENTC LLAVEA listaInst LLAVEC  declaracionCiclodeclaracionCiclo : empty inicializacion : INT ID ASIG NUMERO\n                      | ID ASIG NUMEROcond : ID operadores ID\n            | ID operadores NUMERO  operadores : LT\n                   | LTE\n                   | GTE\n                   | GTcambio :  ID ASIG ID AGREGA ID\n              |  ID ASIG ID RESTA ID \n              |  ID ASIG ID AGREGA NUMERO\n              |  ID ASIG ID RESTA NUMERO \n              |  ID INCREMENTO\n              |  ID DECREMENTOdeclaracionIf : ABIF  PARENTA condicion PARENTC LLAVEA  listaInst LLAVEC declaracionElse declaracionIf\n                     | ABIF  PARENTA condicion PARENTC LLAVEA  listaInst LLAVEC declaracionIf\n                    declaracionIf : empty\n                    declaracionElse : ELSE LLAVEA listaInst LLAVEC condicion : ID  operadoresRel ID operadoresLogicos condicion\n                 | ID  operadoresRel ID\n                 | ID  \n                 | tipoValores\n                 | ID  operadoresRel tipoValores operadoresLogicos condicion\n                 | ID  operadoresRel tipoValores  \n                 | NOT ID  operadoresRel ID operadoresLogicos condicion\n                 | NOT ID  operadoresRel ID\n                 | NOT ID  operadoresRel tipoValores operadoresLogicos condicion\n                 | NOT ID  operadoresRel tipoValores \n                 | ID  operadoresRel NOT ID operadoresLogicos condicion\n                 | ID  operadoresRel NOT ID\n                 | ID  operadoresRel NOT tipoValores operadoresLogicos condicion\n                 | ID  operadoresRel NOT tipoValores\n                 | NOT PARENTA condicion PARENTC operadoresLogicos : AND\n                         | ORoperadoresRel : LT\n                     | LTE\n                     | GT\n                     | GTE\n                     | NE\n                     | COMPentradaDatos : ABIN PARENTA ID PARENTC PC entradaDatosentradaDatos : empty salidaDatos : ABOUT PARENTA STRING_VALOR PARENTC salidaDatos PC\n                    | ABOUT PARENTA listaSalida PARENTC  salidaDatos PC\n                    | ABOUT PARENTA STRING_VALOR C listaSalida PARENTC PC salidaDatos salidaDatos : emptylistaSalida : ID C listaSalida\n                   | ID operacionesBasicas : ID ASIG ID operadoresBasicos ID PC operacionesBasicas\n                           | ID ASIG tipoValores operadoresBasicos ID PC operacionesBasicas\n                           | ID ASIG tipoValores operadoresBasicos tipoValores PC operacionesBasicas\n                           | ID ASIG ID operadoresBasicos tipoValores PC operacionesBasicas\n                           | ID ASIG tipoValores PC operacionesBasicas\n                           | ID ASIG ID P ID PC operacionesBasicas\n                           | ID ASIG ID PC operacionesBasicas\n                           | ID P ID PC operacionesBasicas\n                           | ID ASIG ID CORA NUMERO CORC PC operacionesBasicas\n                           | ID CORA NUMERO CORC ASIG ID CORA NUMERO CORC PC operacionesBasicas\n                           | ID CORA NUMERO CORC ASIG tipoValores PC operacionesBasicas\n                           | ID PARENTA listaValores PARENTC  PC operacionesBasicas\n                           | ID ASIG ID PARENTA listaValores PARENTC  PC operacionesBasicas operacionesBasicas : emptylistaValores : tipoValores\n                    | ID CORA NUMERO CORC\n                    | ID\n                    | listaValores C listaValoreslistaValores : emptyoperadoresBasicos : AGREGA\n                         | RESTA\n                         | MULT\n                         | DIVdeclaraStruct : ABIDECLARA ID ID PC declaraStructdeclaraStruct : emptylistaInstrucciones :  entradaDatos salidaDatos declaraStruct declaracionVariable operacionesBasicas declaracionIf declaracionCiclo listaInst : listaInstrucciones \n                 | listaInstrucciones listaInst listaInst : emptyreturn : RETURN tipoValores PC\n              | RETURN ID PC\n              | RETURN PCempty :'
    
_lr_action_items = {'ABIWORLD':([0,23,],[3,3,]),'ABISTRUCT':([0,2,4,23,31,65,],[-113,6,-3,-113,-2,6,]),'INT':([0,2,3,4,5,7,10,11,18,23,24,30,31,32,34,35,36,38,39,40,41,42,43,44,47,48,49,58,60,64,65,67,69,72,74,75,76,83,85,91,94,96,101,106,107,108,112,114,124,125,127,131,137,146,147,152,168,174,175,178,180,184,190,191,192,195,196,200,215,216,217,218,219,220,221,223,231,238,239,241,246,247,258,259,260,261,264,268,269,274,],[-113,-113,12,-3,12,-23,-5,-7,12,-113,12,12,-2,-6,-21,-113,12,-4,-14,-15,-16,-17,-18,-19,-113,-74,-113,-113,-78,12,-113,12,-105,-113,-22,-20,-113,-113,-94,-113,-113,-48,-113,-73,-74,12,-106,-31,-104,-75,-76,154,-113,-113,-113,-113,-87,-85,-88,-113,-77,-113,-113,-113,-113,-113,-113,-92,-81,-84,-86,-113,-113,-82,-83,-113,-113,-89,-93,-91,-113,-47,-46,-113,-113,-113,-90,-49,-113,-30,]),'CHAR':([0,2,3,4,5,7,10,11,18,23,24,30,31,32,34,35,36,38,39,40,41,42,43,44,47,48,49,58,60,64,65,67,69,72,74,75,76,83,85,91,94,96,101,106,107,108,112,114,124,125,127,137,146,147,152,168,174,175,178,180,184,190,191,192,195,196,200,215,216,217,218,219,220,221,223,231,238,239,241,246,247,258,259,260,261,264,268,269,274,],[-113,-113,13,-3,13,-23,-5,-7,13,-113,13,13,-2,-6,-21,-113,13,-4,-14,-15,-16,-17,-18,-19,-113,-74,-113,-113,-78,13,-113,13,-105,-113,-22,-20,-113,-113,-94,-113,-113,-48,-113,-73,-74,13,-106,-31,-104,-75,-76,-113,-113,-113,-113,-87,-85,-88,-113,-77,-113,-113,-113,-113,-113,-113,-92,-81,-84,-86,-113,-113,-82,-83,-113,-113,-89,-93,-91,-113,-47,-46,-113,-113,-113,-90,-49,-113,-30,]),'STRING':([0,2,3,4,5,7,10,11,18,23,24,30,31,32,34,35,36,38,39,40,41,42,43,44,47,48,49,58,60,64,65,67,69,72,74,75,76,83,85,91,94,96,101,106,107,108,112,114,124,125,127,137,146,147,152,168,174,175,178,180,184,190,191,192,195,196,200,215,216,217,218,219,220,221,223,231,238,239,241,246,247,258,259,260,261,264,268,269,274,],[-113,-113,14,-3,14,-23,-5,-7,14,-113,14,14,-2,-6,-21,-113,14,-4,-14,-15,-16,-17,-18,-19,-113,-74,-113,-113,-78,14,-113,14,-105,-113,-22,-20,-113,-113,-94,-113,-113,-48,-113,-73,-74,14,-106,-31,-104,-75,-76,-113,-113,-113,-113,-87,-85,-88,-113,-77,-113,-113,-113,-113,-113,-113,-92,-81,-84,-86,-113,-113,-82,-83,-113,-113,-89,-93,-91,-113,-47,-46,-113,-113,-113,-90,-49,-113,-30,]),'BOOL':([0,2,3,4,5,7,10,11,18,23,24,30,31,32,34,35,36,38,39,40,41,42,43,44,47,48,49,58,60,64,65,67,69,72,74,75,76,83,85,91,94,96,101,106,107,108,112,114,124,125,127,137,146,147,152,168,174,175,178,180,184,190,191,192,195,196,200,215,216,217,218,219,220,221,223,231,238,239,241,246,247,258,259,260,261,264,268,269,274,],[-113,-113,15,-3,15,-23,-5,-7,15,-113,15,15,-2,-6,-21,-113,15,-4,-14,-15,-16,-17,-18,-19,-113,-74,-113,-113,-78,15,-113,15,-105,-113,-22,-20,-113,-113,-94,-113,-113,-48,-113,-73,-74,15,-106,-31,-104,-75,-76,-113,-113,-113,-113,-87,-85,-88,-113,-77,-113,-113,-113,-113,-113,-113,-92,-81,-84,-86,-113,-113,-82,-83,-113,-113,-89,-93,-91,-113,-47,-46,-113,-113,-113,-90,-49,-113,-30,]),'FLOAT':([0,2,3,4,5,7,10,11,18,23,24,30,31,32,34,35,36,38,39,40,41,42,43,44,47,48,49,58,60,64,65,67,69,72,74,75,76,83,85,91,94,96,101,106,107,108,112,114,124,125,127,137,146,147,152,168,174,175,178,180,184,190,191,192,195,196,200,215,216,217,218,219,220,221,223,231,238,239,241,246,247,258,259,260,261,264,268,269,274,],[-113,-113,16,-3,16,-23,-5,-7,16,-113,16,16,-2,-6,-21,-113,16,-4,-14,-15,-16,-17,-18,-19,-113,-74,-113,-113,-78,16,-113,16,-105,-113,-22,-20,-113,-113,-94,-113,-113,-48,-113,-73,-74,16,-106,-31,-104,-75,-76,-113,-113,-113,-113,-87,-85,-88,-113,-77,-113,-113,-113,-113,-113,-113,-92,-81,-84,-86,-113,-113,-82,-83,-113,-113,-89,-93,-91,-113,-47,-46,-113,-113,-113,-90,-49,-113,-30,]),'VOID':([0,2,3,4,5,7,10,11,18,23,24,30,31,32,34,35,36,38,39,40,41,42,43,44,47,48,49,58,60,64,65,67,69,72,74,75,76,83,85,91,94,96,101,106,107,108,112,114,124,125,127,137,146,147,152,168,174,175,178,180,184,190,191,192,195,196,200,215,216,217,218,219,220,221,223,231,238,239,241,246,247,258,259,260,261,264,268,269,274,],[-113,-113,17,-3,17,-23,-5,-7,17,-113,17,17,-2,-6,-21,-113,17,-4,-14,-15,-16,-17,-18,-19,-113,-74,-113,-113,-78,17,-113,17,-105,-113,-22,-20,-113,-113,-94,-113,-113,-48,-113,-73,-74,17,-106,-31,-104,-75,-76,-113,-113,-113,-113,-87,-85,-88,-113,-77,-113,-113,-113,-113,-113,-113,-92,-81,-84,-86,-113,-113,-82,-83,-113,-113,-89,-93,-91,-113,-47,-46,-113,-113,-113,-90,-49,-113,-30,]),'ABIMAIN':([0,2,4,5,7,19,21,23,31,65,74,108,128,],[-113,-113,-3,-113,-23,28,-25,-113,-2,-113,-22,-113,-24,]),'$end':([1,27,56,],[0,-1,-29,]),'ABIRRAY':([3,10,11,24,30,32,34,35,38,39,40,41,42,43,44,47,48,49,58,60,67,69,72,75,76,83,85,91,94,96,101,106,107,112,114,124,125,127,137,146,147,152,168,174,175,178,180,184,190,191,192,195,196,200,215,216,217,218,219,220,221,223,231,238,239,241,246,247,258,259,260,261,264,268,269,274,],[18,-5,-7,18,18,-6,-21,-113,-4,-14,-15,-16,-17,-18,-19,-113,-74,-113,-113,-78,18,-105,-113,-20,-113,-113,-94,-113,-113,-48,-113,-73,-74,-106,-31,-104,-75,-76,-113,-113,-113,-113,-87,-85,-88,-113,-77,-113,-113,-113,-113,-113,-113,-92,-81,-84,-86,-113,-113,-82,-83,-113,-113,-89,-93,-91,-113,-47,-46,-113,-113,-113,-90,-49,-113,-30,]),'PC':([3,8,10,11,24,32,34,38,39,40,41,42,43,44,54,60,75,81,86,87,89,93,102,104,109,111,116,117,118,125,126,127,150,152,153,166,167,169,172,173,180,193,194,198,201,204,230,244,245,253,],[-113,23,-5,-7,-113,-6,-21,-4,-14,-15,-16,-17,-18,-19,65,-78,-20,91,101,-113,-113,110,125,127,129,130,137,146,147,-75,152,-76,178,-113,181,190,191,192,195,196,-77,218,219,223,224,-33,-32,-34,-35,260,]),'C':([3,8,10,11,24,30,32,34,35,36,37,38,39,40,41,42,43,44,47,48,49,52,53,58,60,62,64,67,69,72,73,75,76,78,80,83,85,91,94,96,100,101,106,107,112,114,120,121,122,123,124,125,127,137,140,146,147,151,152,168,171,174,175,178,179,180,184,190,191,192,195,196,199,200,215,216,217,218,219,220,221,223,231,238,239,241,246,247,258,259,260,261,264,268,269,274,],[-113,24,-5,-7,-113,-113,24,-21,-113,-113,24,-4,-14,-15,-16,-17,-18,-19,-113,-74,-113,64,-28,-113,-78,-26,-113,-113,-105,-113,64,-20,24,88,90,-113,-94,-113,-113,-48,-113,-113,-73,-74,-106,-31,-97,151,-95,-99,-104,-75,-76,-113,-113,-113,-113,-113,-113,-87,151,-85,-88,-113,151,-77,-113,-113,-113,-113,-113,-113,-96,-92,-81,-84,-86,-113,-113,-82,-83,-113,-113,-89,-93,-91,-113,-47,-46,-113,-113,-113,-90,-49,-113,-30,]),'ID':([6,9,10,11,12,13,14,15,16,17,20,24,26,32,34,35,38,39,40,41,42,43,44,47,48,49,51,58,60,61,67,68,69,70,72,75,76,77,83,85,88,90,91,93,94,96,97,98,100,101,106,107,112,114,115,124,125,127,131,135,136,137,138,140,141,142,143,144,145,146,147,151,152,154,157,158,159,160,161,162,163,165,168,174,175,176,178,180,181,184,187,188,190,191,192,195,196,200,206,207,208,209,215,216,217,218,219,220,221,223,224,225,226,227,228,229,231,234,235,236,237,238,239,241,246,247,255,258,259,260,261,264,266,267,268,269,274,],[22,25,-5,-7,-8,-9,-10,-11,-12,-13,29,-113,34,-6,-21,-113,-4,-14,-15,-16,-17,-18,-19,-113,-74,-113,62,-113,-78,71,-113,77,-105,80,-113,-20,84,86,-113,-94,80,80,-113,111,-113,-48,116,118,120,-113,-73,-74,-106,-31,133,-104,-75,-76,155,164,166,84,169,120,-100,-101,-102,-103,172,84,84,120,-113,182,185,-67,-68,-69,-70,-71,-72,133,-87,-85,-88,197,84,-77,202,-113,210,212,84,84,84,84,84,-92,133,-65,-66,133,-81,-84,-86,84,84,-82,-83,84,243,244,-36,-37,-38,-39,-113,133,133,133,133,-89,-93,-91,-113,-47,262,-46,-113,84,-113,-90,270,272,-49,-113,-30,]),'LLAVEC':([10,11,24,30,32,34,35,37,38,39,40,41,42,43,44,46,47,48,49,57,58,60,67,69,75,76,83,85,91,92,94,96,101,106,107,110,112,114,124,125,127,129,130,137,146,147,152,168,174,175,178,180,184,190,191,192,195,196,200,205,215,216,217,218,219,220,221,223,231,238,239,241,246,247,258,259,260,261,263,264,265,268,269,274,],[-5,-7,-113,-113,-6,-21,-113,54,-4,-14,-15,-16,-17,-18,-19,56,-107,-74,-113,-108,-113,-78,-113,-105,-20,-113,-113,-94,-113,108,-113,-48,-113,-73,-74,-112,-106,-31,-104,-75,-76,-110,-111,-113,-113,-113,-113,-87,-85,-88,-113,-77,-113,-113,-113,-113,-113,-113,-92,231,-81,-84,-86,-113,-113,-82,-83,-113,-113,-89,-93,-91,-113,-47,-46,-113,-113,-113,268,-90,269,-49,-113,-30,]),'ABIF':([10,11,24,32,34,35,38,39,40,41,42,43,44,47,48,49,58,60,67,69,72,75,76,83,85,91,94,96,101,106,107,112,114,124,125,127,137,146,147,152,168,174,175,178,180,184,190,191,192,195,196,200,215,216,217,218,219,220,221,223,231,238,239,241,246,247,258,259,260,261,264,268,269,274,],[-5,-7,-113,-6,-21,-113,-4,-14,-15,-16,-17,-18,-19,-113,-74,-113,-113,-78,-113,-105,-113,-20,-113,95,-94,-113,-113,-48,-113,-73,-74,-106,-31,-104,-75,-76,-113,-113,-113,-113,-87,-85,-88,-113,-77,-113,-113,-113,-113,-113,-113,-92,-81,-84,-86,-113,-113,-82,-83,-113,95,-89,-93,-91,95,-47,-46,-113,-113,-113,-90,-49,-113,-30,]),'ABIJOR':([10,11,24,32,34,35,38,39,40,41,42,43,44,47,48,49,58,60,67,69,72,75,76,83,85,91,94,96,101,106,107,112,114,124,125,127,137,146,147,152,168,174,175,178,180,184,190,191,192,195,196,200,215,216,217,218,219,220,221,223,231,238,239,241,246,247,258,259,260,261,264,268,269,274,],[-5,-7,-113,-6,-21,-113,-4,-14,-15,-16,-17,-18,-19,-113,-74,-113,-113,-78,-113,-105,-113,-20,-113,-113,-94,-113,113,-48,-113,-73,-74,-106,-31,-104,-75,-76,-113,-113,-113,-113,-87,-85,-88,-113,-77,-113,-113,-113,-113,-113,-113,-92,-81,-84,-86,-113,-113,-82,-83,-113,-113,-89,-93,-91,-113,-47,-46,-113,-113,-113,-90,-49,113,-30,]),'ABIN':([10,11,24,32,34,35,38,39,40,41,42,43,44,47,48,49,58,60,67,69,72,75,76,83,85,91,94,96,101,106,107,112,114,124,125,127,137,146,147,152,168,174,175,178,180,184,190,191,192,195,196,200,215,216,217,218,219,220,221,223,231,238,239,241,246,247,258,259,260,261,264,268,269,274,],[-5,-7,-113,-6,-21,50,-4,-14,-15,-16,-17,-18,-19,50,-74,-113,-113,-78,-113,-105,50,-20,-113,-113,-94,50,-113,-48,-113,-73,-74,-106,-31,-104,-75,-76,-113,-113,-113,-113,-87,-85,-88,-113,-77,50,-113,-113,-113,-113,-113,-92,-81,-84,-86,-113,-113,-82,-83,-113,-113,-89,-93,-91,-113,-47,-46,50,-113,50,-90,-49,-113,-30,]),'ABOUT':([10,11,24,32,34,35,38,39,40,41,42,43,44,47,48,49,58,60,67,69,72,75,76,83,85,87,89,91,94,96,101,106,107,112,114,124,125,127,137,146,147,152,168,174,175,178,180,184,190,191,192,195,196,200,215,216,217,218,219,220,221,223,231,238,239,241,246,247,258,259,260,261,264,268,269,274,],[-5,-7,-113,-6,-21,-113,-4,-14,-15,-16,-17,-18,-19,-113,-74,59,-113,-78,-113,-105,-113,-20,-113,-113,-94,59,59,-113,-113,-48,-113,-73,-74,-106,-31,-104,-75,-76,-113,-113,-113,59,-87,-85,-88,-113,-77,-113,-113,-113,-113,-113,-113,-92,-81,-84,-86,-113,-113,-82,-83,-113,-113,-89,-93,-91,-113,-47,-46,-113,-113,-113,-90,-49,-113,-30,]),'ABIDECLARA':([10,11,24,32,34,35,38,39,40,41,42,43,44,47,48,49,58,60,67,69,72,75,76,83,85,91,94,96,101,106,107,112,114,124,125,127,137,146,147,152,168,174,175,178,180,184,190,191,192,195,196,200,215,216,217,218,219,220,221,223,231,238,239,241,246,247,258,259,260,261,264,268,269,274,],[-5,-7,-113,-6,-21,-113,-4,-14,-15,-16,-17,-18,-19,-113,-74,-113,68,-78,-113,-105,-113,-20,-113,-113,-94,-113,-113,-48,68,-73,-74,-106,-31,-104,-75,-76,-113,-113,-113,-113,-87,-85,-88,-113,-77,-113,-113,-113,-113,-113,-113,-92,-81,-84,-86,-113,-113,-82,-83,-113,-113,-89,-93,-91,-113,-47,-46,-113,-113,-113,-90,-49,-113,-30,]),'RETURN':([10,11,24,32,34,38,39,40,41,42,43,44,47,48,49,57,58,60,67,69,72,75,76,82,83,85,91,94,96,101,106,107,112,114,124,125,127,137,146,147,152,168,174,175,178,180,190,191,192,195,196,200,215,216,217,218,219,220,221,223,231,238,239,241,246,247,258,260,264,268,269,274,],[-5,-7,-113,-6,-21,-4,-14,-15,-16,-17,-18,-19,-107,-74,-113,-108,-113,-78,-113,-105,-113,-20,-113,93,-113,-94,-113,-113,-48,-113,-73,-74,-106,-31,-104,-75,-76,-113,-113,-113,-113,-87,-85,-88,-113,-77,-113,-113,-113,-113,-113,-92,-81,-84,-86,-113,-113,-82,-83,-113,-113,-89,-93,-91,-113,-47,-46,-113,-90,-49,-113,-30,]),'LLAVEA':([22,28,63,156,248,254,],[30,35,72,184,259,261,]),'ASIG':([25,34,84,148,155,182,243,],[33,45,97,176,183,203,255,]),'PARENTA':([29,50,59,84,95,113,116,135,],[36,61,70,100,115,131,140,165,]),'NUMERO':([33,55,93,97,99,100,115,136,139,140,141,142,143,144,145,149,151,157,158,159,160,161,162,163,165,176,183,187,188,203,206,207,208,209,222,225,226,227,228,229,234,235,236,237,266,267,],[39,66,39,39,119,39,39,39,170,39,-100,-101,-102,-103,39,177,39,39,-67,-68,-69,-70,-71,-72,39,39,204,39,39,230,39,-65,-66,39,240,245,-36,-37,-38,-39,39,39,39,39,271,273,]),'FLOAT_VALOR':([33,93,97,100,115,136,140,141,142,143,144,145,151,157,158,159,160,161,162,163,165,176,187,188,206,207,208,209,234,235,236,237,],[40,40,40,40,40,40,40,-100,-101,-102,-103,40,40,40,-67,-68,-69,-70,-71,-72,40,40,40,40,40,-65,-66,40,40,40,40,40,]),'CHAR_VALOR':([33,93,97,100,115,136,140,141,142,143,144,145,151,157,158,159,160,161,162,163,165,176,187,188,206,207,208,209,234,235,236,237,],[41,41,41,41,41,41,41,-100,-101,-102,-103,41,41,41,-67,-68,-69,-70,-71,-72,41,41,41,41,41,-65,-66,41,41,41,41,41,]),'STRING_VALOR':([33,70,93,97,100,115,136,140,141,142,143,144,145,151,157,158,159,160,161,162,163,165,176,187,188,206,207,208,209,234,235,236,237,],[42,78,42,42,42,42,42,42,-100,-101,-102,-103,42,42,42,-67,-68,-69,-70,-71,-72,42,42,42,42,42,-65,-66,42,42,42,42,42,]),'TRUE':([33,93,97,100,115,136,140,141,142,143,144,145,151,157,158,159,160,161,162,163,165,176,187,188,206,207,208,209,234,235,236,237,],[43,43,43,43,43,43,43,-100,-101,-102,-103,43,43,43,-67,-68,-69,-70,-71,-72,43,43,43,43,43,-65,-66,43,43,43,43,43,]),'FALSE':([33,93,97,100,115,136,140,141,142,143,144,145,151,157,158,159,160,161,162,163,165,176,187,188,206,207,208,209,234,235,236,237,],[44,44,44,44,44,44,44,-100,-101,-102,-103,44,44,44,-67,-68,-69,-70,-71,-72,44,44,44,44,44,-65,-66,44,44,44,44,44,]),'PARENTC':([36,39,40,41,42,43,44,52,53,62,64,71,73,78,79,80,100,103,105,120,121,122,123,132,133,134,140,151,171,179,185,186,189,199,210,211,212,213,214,232,233,242,249,250,251,252,256,257,270,271,272,273,],[-113,-14,-15,-16,-17,-18,-19,63,-28,-26,-113,81,-27,87,89,-80,-113,126,-79,-97,150,-95,-99,156,-52,-53,-113,-113,194,-98,-51,-55,214,-96,-61,-63,-57,-59,-64,-50,-54,254,-60,-62,-56,-58,-44,-45,-40,-42,-41,-43,]),'AGREGA':([39,40,41,42,43,44,116,117,262,],[-14,-15,-16,-17,-18,-19,141,141,266,]),'RESTA':([39,40,41,42,43,44,116,117,262,],[-14,-15,-16,-17,-18,-19,142,142,267,]),'MULT':([39,40,41,42,43,44,116,117,],[-14,-15,-16,-17,-18,-19,143,143,]),'DIV':([39,40,41,42,43,44,116,117,],[-14,-15,-16,-17,-18,-19,144,144,]),'AND':([39,40,41,42,43,44,185,186,210,211,212,213,],[-14,-15,-16,-17,-18,-19,207,207,207,207,207,207,]),'OR':([39,40,41,42,43,44,185,186,210,211,212,213,],[-14,-15,-16,-17,-18,-19,208,208,208,208,208,208,]),'CORA':([45,84,116,120,197,],[55,99,139,149,222,]),'CORC':([66,119,170,177,240,],[75,148,193,199,253,]),'P':([84,116,],[98,138,]),'NOT':([115,157,158,159,160,161,162,163,165,206,207,208,209,234,235,236,237,],[135,187,-67,-68,-69,-70,-71,-72,135,135,-65,-66,135,135,135,135,135,]),'LT':([133,164,202,],[158,158,226,]),'LTE':([133,164,202,],[159,159,227,]),'GT':([133,164,202,],[160,160,229,]),'GTE':([133,164,202,],[161,161,228,]),'NE':([133,164,],[162,162,]),'COMP':([133,164,],[163,163,]),'ELSE':([231,],[248,]),'INCREMENTO':([243,],[256,]),'DECREMENTO':([243,],[257,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'variablesGlobales':([0,23,],[2,31,]),'empty':([0,2,3,5,23,24,30,35,36,47,49,58,64,65,67,72,76,83,87,89,91,94,100,101,108,137,140,146,147,151,152,178,184,190,191,192,195,196,218,219,223,231,246,259,260,261,269,],[4,7,11,21,4,11,11,48,53,48,60,69,53,7,11,48,85,96,60,60,107,114,123,69,21,85,123,85,85,123,60,85,48,85,85,85,85,85,85,85,85,96,96,48,85,48,114,]),'declaracionEstructuras':([2,65,],[5,74,]),'declaracionVariable':([3,24,30,67,],[8,32,37,76,]),'tipoDatos':([3,5,18,24,30,36,64,67,108,],[9,20,26,9,9,51,51,9,20,]),'declaracionArreglo':([3,24,30,67,],[10,10,10,10,]),'declaracionFuncion':([5,108,],[19,128,]),'declaraMain':([19,],[27,]),'tipoValores':([33,93,97,100,115,136,140,145,151,157,165,176,187,188,206,209,234,235,236,237,],[38,109,117,122,134,167,122,173,122,186,134,198,211,213,134,134,134,134,134,134,]),'listaInst':([35,47,72,184,259,261,],[46,57,82,205,263,265,]),'listaInstrucciones':([35,47,72,184,259,261,],[47,47,47,47,47,47,]),'entradaDatos':([35,47,72,91,184,259,261,],[49,49,49,106,49,49,49,]),'declaracionParametros':([36,64,],[52,73,]),'salidaDatos':([49,87,89,152,],[58,102,104,180,]),'declaraStruct':([58,101,],[67,124,]),'listaSalida':([70,88,90,],[79,103,105,]),'operacionesBasicas':([76,137,146,147,178,190,191,192,195,196,218,219,223,260,],[83,168,174,175,200,215,216,217,220,221,238,239,241,264,]),'return':([82,],[92,]),'declaracionIf':([83,231,246,],[94,247,258,]),'declaracionCiclo':([94,269,],[112,274,]),'listaValores':([100,140,151,],[121,171,179,]),'condicion':([115,165,206,209,234,235,236,237,],[132,189,232,233,249,250,251,252,]),'operadoresBasicos':([116,117,],[136,145,]),'inicializacion':([131,],[153,]),'operadoresRel':([133,164,],[157,188,]),'cond':([181,],[201,]),'operadoresLogicos':([185,186,210,211,212,213,],[206,209,234,235,236,237,]),'operadores':([202,],[225,]),'cambio':([224,],[242,]),'declaracionElse':([231,],[246,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> variablesGlobales declaracionEstructuras declaracionFuncion declaraMain','start',4,'p_programa','sintactico.py',10),
  ('variablesGlobales -> ABIWORLD declaracionVariable PC variablesGlobales','variablesGlobales',4,'p_variablesGlobales','sintactico.py',13),
  ('variablesGlobales -> empty','variablesGlobales',1,'p_variablesGlobales2','sintactico.py',16),
  ('declaracionVariable -> tipoDatos ID ASIG tipoValores','declaracionVariable',4,'p_declaracionVariable','sintactico.py',18),
  ('declaracionVariable -> declaracionArreglo','declaracionVariable',1,'p_declaracionVariable','sintactico.py',19),
  ('declaracionVariable -> declaracionVariable C declaracionVariable','declaracionVariable',3,'p_declaracionVariable1','sintactico.py',22),
  ('declaracionVariable -> empty','declaracionVariable',1,'p_declaracionVariable2','sintactico.py',25),
  ('tipoDatos -> INT','tipoDatos',1,'p_tipoDatos','sintactico.py',27),
  ('tipoDatos -> CHAR','tipoDatos',1,'p_tipoDatos','sintactico.py',28),
  ('tipoDatos -> STRING','tipoDatos',1,'p_tipoDatos','sintactico.py',29),
  ('tipoDatos -> BOOL','tipoDatos',1,'p_tipoDatos','sintactico.py',30),
  ('tipoDatos -> FLOAT','tipoDatos',1,'p_tipoDatos','sintactico.py',31),
  ('tipoDatos -> VOID','tipoDatos',1,'p_tipoDatos','sintactico.py',32),
  ('tipoValores -> NUMERO','tipoValores',1,'p_tipoValores','sintactico.py',37),
  ('tipoValores -> FLOAT_VALOR','tipoValores',1,'p_tipoValores','sintactico.py',38),
  ('tipoValores -> CHAR_VALOR','tipoValores',1,'p_tipoValores','sintactico.py',39),
  ('tipoValores -> STRING_VALOR','tipoValores',1,'p_tipoValores','sintactico.py',40),
  ('tipoValores -> TRUE','tipoValores',1,'p_tipoValores','sintactico.py',41),
  ('tipoValores -> FALSE','tipoValores',1,'p_tipoValores','sintactico.py',42),
  ('declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC','declaracionArreglo',7,'p_declaracionArreglo','sintactico.py',44),
  ('declaracionArreglo -> ABIRRAY tipoDatos ID','declaracionArreglo',3,'p_declaracionArreglo','sintactico.py',45),
  ('declaracionEstructuras -> ABISTRUCT ID LLAVEA declaracionVariable LLAVEC PC declaracionEstructuras','declaracionEstructuras',7,'p_declaracionEstructuras','sintactico.py',48),
  ('declaracionEstructuras -> empty','declaracionEstructuras',1,'p_declaracionEstructuras1','sintactico.py',51),
  ('declaracionFuncion -> tipoDatos ID PARENTA declaracionParametros PARENTC LLAVEA listaInst return LLAVEC declaracionFuncion','declaracionFuncion',10,'p_declaracionFuncion','sintactico.py',53),
  ('declaracionFuncion -> empty','declaracionFuncion',1,'p_declaracionFuncion1','sintactico.py',56),
  ('declaracionParametros -> tipoDatos ID','declaracionParametros',2,'p_declaracionParametros','sintactico.py',58),
  ('declaracionParametros -> declaracionParametros C declaracionParametros','declaracionParametros',3,'p_declaracionParametros1','sintactico.py',61),
  ('declaracionParametros -> empty','declaracionParametros',1,'p_declaracionParametros2','sintactico.py',64),
  ('declaraMain -> ABIMAIN LLAVEA listaInst LLAVEC','declaraMain',4,'p_declaraMain','sintactico.py',66),
  ('declaracionCiclo -> ABIJOR PARENTA inicializacion PC cond PC cambio PARENTC LLAVEA listaInst LLAVEC declaracionCiclo','declaracionCiclo',12,'p_declaracionCiclo','sintactico.py',69),
  ('declaracionCiclo -> empty','declaracionCiclo',1,'p_declaracionCiclo1','sintactico.py',72),
  ('inicializacion -> INT ID ASIG NUMERO','inicializacion',4,'p_inicalizacion','sintactico.py',74),
  ('inicializacion -> ID ASIG NUMERO','inicializacion',3,'p_inicalizacion','sintactico.py',75),
  ('cond -> ID operadores ID','cond',3,'p_cond','sintactico.py',77),
  ('cond -> ID operadores NUMERO','cond',3,'p_cond','sintactico.py',78),
  ('operadores -> LT','operadores',1,'p_operadores','sintactico.py',80),
  ('operadores -> LTE','operadores',1,'p_operadores','sintactico.py',81),
  ('operadores -> GTE','operadores',1,'p_operadores','sintactico.py',82),
  ('operadores -> GT','operadores',1,'p_operadores','sintactico.py',83),
  ('cambio -> ID ASIG ID AGREGA ID','cambio',5,'p_cambio','sintactico.py',85),
  ('cambio -> ID ASIG ID RESTA ID','cambio',5,'p_cambio','sintactico.py',86),
  ('cambio -> ID ASIG ID AGREGA NUMERO','cambio',5,'p_cambio','sintactico.py',87),
  ('cambio -> ID ASIG ID RESTA NUMERO','cambio',5,'p_cambio','sintactico.py',88),
  ('cambio -> ID INCREMENTO','cambio',2,'p_cambio','sintactico.py',89),
  ('cambio -> ID DECREMENTO','cambio',2,'p_cambio','sintactico.py',90),
  ('declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionElse declaracionIf','declaracionIf',9,'p_declaracionIf','sintactico.py',92),
  ('declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionIf','declaracionIf',8,'p_declaracionIf','sintactico.py',93),
  ('declaracionIf -> empty','declaracionIf',1,'p_declaracionIf1','sintactico.py',97),
  ('declaracionElse -> ELSE LLAVEA listaInst LLAVEC','declaracionElse',4,'p_declaracionElse','sintactico.py',100),
  ('condicion -> ID operadoresRel ID operadoresLogicos condicion','condicion',5,'p_condicion','sintactico.py',103),
  ('condicion -> ID operadoresRel ID','condicion',3,'p_condicion','sintactico.py',104),
  ('condicion -> ID','condicion',1,'p_condicion','sintactico.py',105),
  ('condicion -> tipoValores','condicion',1,'p_condicion','sintactico.py',106),
  ('condicion -> ID operadoresRel tipoValores operadoresLogicos condicion','condicion',5,'p_condicion','sintactico.py',107),
  ('condicion -> ID operadoresRel tipoValores','condicion',3,'p_condicion','sintactico.py',108),
  ('condicion -> NOT ID operadoresRel ID operadoresLogicos condicion','condicion',6,'p_condicion','sintactico.py',109),
  ('condicion -> NOT ID operadoresRel ID','condicion',4,'p_condicion','sintactico.py',110),
  ('condicion -> NOT ID operadoresRel tipoValores operadoresLogicos condicion','condicion',6,'p_condicion','sintactico.py',111),
  ('condicion -> NOT ID operadoresRel tipoValores','condicion',4,'p_condicion','sintactico.py',112),
  ('condicion -> ID operadoresRel NOT ID operadoresLogicos condicion','condicion',6,'p_condicion','sintactico.py',113),
  ('condicion -> ID operadoresRel NOT ID','condicion',4,'p_condicion','sintactico.py',114),
  ('condicion -> ID operadoresRel NOT tipoValores operadoresLogicos condicion','condicion',6,'p_condicion','sintactico.py',115),
  ('condicion -> ID operadoresRel NOT tipoValores','condicion',4,'p_condicion','sintactico.py',116),
  ('condicion -> NOT PARENTA condicion PARENTC','condicion',4,'p_condicion','sintactico.py',117),
  ('operadoresLogicos -> AND','operadoresLogicos',1,'p_operadoresLogicos','sintactico.py',119),
  ('operadoresLogicos -> OR','operadoresLogicos',1,'p_operadoresLogicos','sintactico.py',120),
  ('operadoresRel -> LT','operadoresRel',1,'p_operadoresRel','sintactico.py',122),
  ('operadoresRel -> LTE','operadoresRel',1,'p_operadoresRel','sintactico.py',123),
  ('operadoresRel -> GT','operadoresRel',1,'p_operadoresRel','sintactico.py',124),
  ('operadoresRel -> GTE','operadoresRel',1,'p_operadoresRel','sintactico.py',125),
  ('operadoresRel -> NE','operadoresRel',1,'p_operadoresRel','sintactico.py',126),
  ('operadoresRel -> COMP','operadoresRel',1,'p_operadoresRel','sintactico.py',127),
  ('entradaDatos -> ABIN PARENTA ID PARENTC PC entradaDatos','entradaDatos',6,'p_entradaDatos','sintactico.py',129),
  ('entradaDatos -> empty','entradaDatos',1,'p_entradaDatos1','sintactico.py',131),
  ('salidaDatos -> ABOUT PARENTA STRING_VALOR PARENTC salidaDatos PC','salidaDatos',6,'p_salidaDatos','sintactico.py',133),
  ('salidaDatos -> ABOUT PARENTA listaSalida PARENTC salidaDatos PC','salidaDatos',6,'p_salidaDatos','sintactico.py',134),
  ('salidaDatos -> ABOUT PARENTA STRING_VALOR C listaSalida PARENTC PC salidaDatos','salidaDatos',8,'p_salidaDatos','sintactico.py',135),
  ('salidaDatos -> empty','salidaDatos',1,'p_salidaDatos1','sintactico.py',137),
  ('listaSalida -> ID C listaSalida','listaSalida',3,'p_listaSalida','sintactico.py',139),
  ('listaSalida -> ID','listaSalida',1,'p_listaSalida','sintactico.py',140),
  ('operacionesBasicas -> ID ASIG ID operadoresBasicos ID PC operacionesBasicas','operacionesBasicas',7,'p_operacionesBasicas','sintactico.py',142),
  ('operacionesBasicas -> ID ASIG tipoValores operadoresBasicos ID PC operacionesBasicas','operacionesBasicas',7,'p_operacionesBasicas','sintactico.py',143),
  ('operacionesBasicas -> ID ASIG tipoValores operadoresBasicos tipoValores PC operacionesBasicas','operacionesBasicas',7,'p_operacionesBasicas','sintactico.py',144),
  ('operacionesBasicas -> ID ASIG ID operadoresBasicos tipoValores PC operacionesBasicas','operacionesBasicas',7,'p_operacionesBasicas','sintactico.py',145),
  ('operacionesBasicas -> ID ASIG tipoValores PC operacionesBasicas','operacionesBasicas',5,'p_operacionesBasicas','sintactico.py',146),
  ('operacionesBasicas -> ID ASIG ID P ID PC operacionesBasicas','operacionesBasicas',7,'p_operacionesBasicas','sintactico.py',147),
  ('operacionesBasicas -> ID ASIG ID PC operacionesBasicas','operacionesBasicas',5,'p_operacionesBasicas','sintactico.py',148),
  ('operacionesBasicas -> ID P ID PC operacionesBasicas','operacionesBasicas',5,'p_operacionesBasicas','sintactico.py',149),
  ('operacionesBasicas -> ID ASIG ID CORA NUMERO CORC PC operacionesBasicas','operacionesBasicas',8,'p_operacionesBasicas','sintactico.py',150),
  ('operacionesBasicas -> ID CORA NUMERO CORC ASIG ID CORA NUMERO CORC PC operacionesBasicas','operacionesBasicas',11,'p_operacionesBasicas','sintactico.py',151),
  ('operacionesBasicas -> ID CORA NUMERO CORC ASIG tipoValores PC operacionesBasicas','operacionesBasicas',8,'p_operacionesBasicas','sintactico.py',152),
  ('operacionesBasicas -> ID PARENTA listaValores PARENTC PC operacionesBasicas','operacionesBasicas',6,'p_operacionesBasicas','sintactico.py',153),
  ('operacionesBasicas -> ID ASIG ID PARENTA listaValores PARENTC PC operacionesBasicas','operacionesBasicas',8,'p_operacionesBasicas','sintactico.py',154),
  ('operacionesBasicas -> empty','operacionesBasicas',1,'p_operacionesBasicas1','sintactico.py',156),
  ('listaValores -> tipoValores','listaValores',1,'p_listaValores','sintactico.py',158),
  ('listaValores -> ID CORA NUMERO CORC','listaValores',4,'p_listaValores','sintactico.py',159),
  ('listaValores -> ID','listaValores',1,'p_listaValores','sintactico.py',160),
  ('listaValores -> listaValores C listaValores','listaValores',3,'p_listaValores','sintactico.py',161),
  ('listaValores -> empty','listaValores',1,'p_listaValores1','sintactico.py',163),
  ('operadoresBasicos -> AGREGA','operadoresBasicos',1,'p_operadoresBasicos','sintactico.py',165),
  ('operadoresBasicos -> RESTA','operadoresBasicos',1,'p_operadoresBasicos','sintactico.py',166),
  ('operadoresBasicos -> MULT','operadoresBasicos',1,'p_operadoresBasicos','sintactico.py',167),
  ('operadoresBasicos -> DIV','operadoresBasicos',1,'p_operadoresBasicos','sintactico.py',168),
  ('declaraStruct -> ABIDECLARA ID ID PC declaraStruct','declaraStruct',5,'p_declaraStruct','sintactico.py',170),
  ('declaraStruct -> empty','declaraStruct',1,'p_declaraStruct1','sintactico.py',172),
  ('listaInstrucciones -> entradaDatos salidaDatos declaraStruct declaracionVariable operacionesBasicas declaracionIf declaracionCiclo','listaInstrucciones',7,'p_listaInstrucciones','sintactico.py',174),
  ('listaInst -> listaInstrucciones','listaInst',1,'p_listaInst','sintactico.py',176),
  ('listaInst -> listaInstrucciones listaInst','listaInst',2,'p_listaInst','sintactico.py',177),
  ('listaInst -> empty','listaInst',1,'p_listaInst1','sintactico.py',179),
  ('return -> RETURN tipoValores PC','return',3,'p_return','sintactico.py',181),
  ('return -> RETURN ID PC','return',3,'p_return','sintactico.py',182),
  ('return -> RETURN PC','return',2,'p_return','sintactico.py',183),
  ('empty -> <empty>','empty',0,'p_empty','sintactico.py',185),
]
