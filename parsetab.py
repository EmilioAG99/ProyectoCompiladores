
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABIDECLARA ABIF ABIJOR ABIMAIN ABIN ABIRRAY ABISTRUCT ABIWORLD ABOUT AGREGA AND ASIG BOOL C CHAR CHAR_VALOR COMP CORA CORC DECREMENTO DIV ELSE FALSE FLOAT FLOAT_VALOR GT GTE ID INCREMENTO INT LLAVEA LLAVEC LT LTE MULT NE NOT NUMERO OR P PARENTA PARENTC PC RESTA RETURN STRING STRING_VALOR TRUE VOID start : variablesGlobales declaracionEstructuras declaracionFuncion declaraMain variablesGlobales : ABIWORLD declaracionVariable PC variablesGlobalesvariablesGlobales : emptydeclaracionVariable : tipoDatos ID ASIG tipoValores \n                           | declaracionArreglo declaracionVariable : declaracionVariable C declaracionVariabledeclaracionVariable : emptytipoDatos : INT\n                 | CHAR\n                 | STRING\n                 | BOOL\n                 | FLOAT\n                 | VOID\n                 tipoValores : NUMERO\n                   | FLOAT_VALOR\n                   | CHAR_VALOR\n                   | STRING_VALOR\n                   | TRUE\n                   | FALSE declaracionArreglo : ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC\n                           | ABIRRAY tipoDatos ID  declaracionEstructuras : ABISTRUCT ID LLAVEA declaracionVariable LLAVEC PC declaracionEstructuras declaracionEstructuras : emptydeclaracionFuncion : tipoDatos ID PARENTA declaracionParametros PARENTC LLAVEA listaInst return LLAVEC declaracionFunciondeclaracionFuncion : emptydeclaracionParametros : tipoDatos IDdeclaracionParametros : declaracionParametros C declaracionParametrosdeclaracionParametros : emptydeclaraMain : ABIMAIN LLAVEA listaInst LLAVECdeclaracionCiclo : ABIJOR PARENTA inicializacion PC cond PC cambio PARENTC LLAVEA listaInst LLAVEC  declaracionCiclodeclaracionCiclo : empty inicializacion : INT ID ASIG NUMERO\n                      | ID ASIG NUMEROcond : ID operadores ID\n            | ID operadores NUMERO  operadores : LT\n                   | LTE\n                   | GTE\n                   | GTcambio :  ID ASIG ID AGREGA ID\n              |  ID ASIG ID RESTA ID \n              |  ID ASIG ID AGREGA NUMERO\n              |  ID ASIG ID RESTA NUMERO \n              |  ID INCREMENTO\n              |  ID DECREMENTOdeclaracionIf : ABIF  PARENTA condicion PARENTC LLAVEA  listaInst LLAVEC declaracionElse declaracionIf\n                     | ABIF  PARENTA condicion PARENTC LLAVEA  listaInst LLAVEC declaracionIf\n                    declaracionIf : empty\n                    declaracionElse : ELSE LLAVEA listaInst LLAVEC condicion : ID  operadoresRel ID operadoresLogicos condicion\n                 | ID  operadoresRel ID\n                 | ID  \n                 | tipoValores\n                 | ID  operadoresRel tipoValores operadoresLogicos condicion\n                 | ID  operadoresRel tipoValores  \n                 | NOT ID  operadoresRel ID operadoresLogicos condicion\n                 | NOT ID  operadoresRel ID\n                 | NOT ID  operadoresRel tipoValores operadoresLogicos condicion\n                 | NOT ID  operadoresRel tipoValores \n                 | ID  operadoresRel NOT ID operadoresLogicos condicion\n                 | ID  operadoresRel NOT ID\n                 | ID  operadoresRel NOT tipoValores operadoresLogicos condicion\n                 | ID  operadoresRel NOT tipoValores\n                 | NOT PARENTA condicion PARENTC operadoresLogicos : AND\n                         | ORoperadoresRel : LT\n                     | LTE\n                     | GT\n                     | GTE\n                     | NE\n                     | COMPentradaDatos : ABIN PARENTA ID PARENTC PC entradaDatosentradaDatos : empty salidaDatos : ABOUT PARENTA STRING_VALOR PARENTC salidaDatos PC\n                    | ABOUT PARENTA listaSalida PARENTC  salidaDatos PC\n                    | ABOUT PARENTA STRING_VALOR C listaSalida PARENTC PC salidaDatos salidaDatos : emptylistaSalida : ID C listaSalida\n                   | ID operacionesBasicas : ID ASIG ID operadoresBasicos ID PC operacionesBasicas\n                           | ID ASIG tipoValores operadoresBasicos ID PC operacionesBasicas\n                           | ID ASIG tipoValores operadoresBasicos tipoValores PC operacionesBasicas\n                           | ID ASIG ID operadoresBasicos tipoValores PC operacionesBasicas\n                           | ID ASIG tipoValores PC operacionesBasicas\n                           | ID ASIG ID P ID PC operacionesBasicas\n                           | ID ASIG ID PC operacionesBasicas\n                           | ID P ID PC operacionesBasicas\n                           | ID ASIG ID CORA NUMERO CORC PC operacionesBasicas\n                           | ID CORA NUMERO CORC ASIG ID CORA NUMERO CORC PC operacionesBasicas\n                           | ID CORA NUMERO CORC ASIG tipoValores PC operacionesBasicas\n                           | ID PARENTA listaValores PARENTC  PC operacionesBasicas\n                           | ID ASIG ID PARENTA listaValores PARENTC  PC operacionesBasicas operacionesBasicas : emptylistaValores : tipoValores\n                    | ID\n                    | listaValores C listaValoreslistaValores : emptyoperadoresBasicos : AGREGA\n                         | RESTA\n                         | MULT\n                         | DIVdeclaraStruct : ABIDECLARA ID ID PC declaraStructdeclaraStruct : emptylistaInstrucciones :  entradaDatos salidaDatos declaraStruct declaracionVariable operacionesBasicas declaracionIf declaracionCiclo listaInst : listaInstrucciones \n                 | listaInstrucciones listaInst listaInst : emptyreturn : RETURN ID PC\n              | RETURN PCempty :'
    
_lr_action_items = {'ABIWORLD':([0,23,],[3,3,]),'ABISTRUCT':([0,2,4,23,31,65,],[-111,6,-3,-111,-2,6,]),'INT':([0,2,3,4,5,7,10,11,18,23,24,30,31,32,34,35,36,38,39,40,41,42,43,44,47,48,49,58,60,64,65,67,69,72,74,75,76,83,85,91,94,96,101,106,107,108,111,113,123,124,126,129,135,144,145,149,165,171,172,174,176,180,186,187,188,191,192,195,210,211,212,213,214,215,216,218,226,233,234,236,241,242,253,254,255,256,259,263,264,269,],[-111,-111,12,-3,12,-23,-5,-7,12,-111,12,12,-2,-6,-21,-111,12,-4,-14,-15,-16,-17,-18,-19,-111,-74,-111,-111,-78,12,-111,12,-104,-111,-22,-20,-111,-111,-94,-111,-111,-48,-111,-73,-74,12,-105,-31,-103,-75,-76,151,-111,-111,-111,-111,-87,-85,-88,-111,-77,-111,-111,-111,-111,-111,-111,-92,-81,-84,-86,-111,-111,-82,-83,-111,-111,-89,-93,-91,-111,-47,-46,-111,-111,-111,-90,-49,-111,-30,]),'CHAR':([0,2,3,4,5,7,10,11,18,23,24,30,31,32,34,35,36,38,39,40,41,42,43,44,47,48,49,58,60,64,65,67,69,72,74,75,76,83,85,91,94,96,101,106,107,108,111,113,123,124,126,135,144,145,149,165,171,172,174,176,180,186,187,188,191,192,195,210,211,212,213,214,215,216,218,226,233,234,236,241,242,253,254,255,256,259,263,264,269,],[-111,-111,13,-3,13,-23,-5,-7,13,-111,13,13,-2,-6,-21,-111,13,-4,-14,-15,-16,-17,-18,-19,-111,-74,-111,-111,-78,13,-111,13,-104,-111,-22,-20,-111,-111,-94,-111,-111,-48,-111,-73,-74,13,-105,-31,-103,-75,-76,-111,-111,-111,-111,-87,-85,-88,-111,-77,-111,-111,-111,-111,-111,-111,-92,-81,-84,-86,-111,-111,-82,-83,-111,-111,-89,-93,-91,-111,-47,-46,-111,-111,-111,-90,-49,-111,-30,]),'STRING':([0,2,3,4,5,7,10,11,18,23,24,30,31,32,34,35,36,38,39,40,41,42,43,44,47,48,49,58,60,64,65,67,69,72,74,75,76,83,85,91,94,96,101,106,107,108,111,113,123,124,126,135,144,145,149,165,171,172,174,176,180,186,187,188,191,192,195,210,211,212,213,214,215,216,218,226,233,234,236,241,242,253,254,255,256,259,263,264,269,],[-111,-111,14,-3,14,-23,-5,-7,14,-111,14,14,-2,-6,-21,-111,14,-4,-14,-15,-16,-17,-18,-19,-111,-74,-111,-111,-78,14,-111,14,-104,-111,-22,-20,-111,-111,-94,-111,-111,-48,-111,-73,-74,14,-105,-31,-103,-75,-76,-111,-111,-111,-111,-87,-85,-88,-111,-77,-111,-111,-111,-111,-111,-111,-92,-81,-84,-86,-111,-111,-82,-83,-111,-111,-89,-93,-91,-111,-47,-46,-111,-111,-111,-90,-49,-111,-30,]),'BOOL':([0,2,3,4,5,7,10,11,18,23,24,30,31,32,34,35,36,38,39,40,41,42,43,44,47,48,49,58,60,64,65,67,69,72,74,75,76,83,85,91,94,96,101,106,107,108,111,113,123,124,126,135,144,145,149,165,171,172,174,176,180,186,187,188,191,192,195,210,211,212,213,214,215,216,218,226,233,234,236,241,242,253,254,255,256,259,263,264,269,],[-111,-111,15,-3,15,-23,-5,-7,15,-111,15,15,-2,-6,-21,-111,15,-4,-14,-15,-16,-17,-18,-19,-111,-74,-111,-111,-78,15,-111,15,-104,-111,-22,-20,-111,-111,-94,-111,-111,-48,-111,-73,-74,15,-105,-31,-103,-75,-76,-111,-111,-111,-111,-87,-85,-88,-111,-77,-111,-111,-111,-111,-111,-111,-92,-81,-84,-86,-111,-111,-82,-83,-111,-111,-89,-93,-91,-111,-47,-46,-111,-111,-111,-90,-49,-111,-30,]),'FLOAT':([0,2,3,4,5,7,10,11,18,23,24,30,31,32,34,35,36,38,39,40,41,42,43,44,47,48,49,58,60,64,65,67,69,72,74,75,76,83,85,91,94,96,101,106,107,108,111,113,123,124,126,135,144,145,149,165,171,172,174,176,180,186,187,188,191,192,195,210,211,212,213,214,215,216,218,226,233,234,236,241,242,253,254,255,256,259,263,264,269,],[-111,-111,16,-3,16,-23,-5,-7,16,-111,16,16,-2,-6,-21,-111,16,-4,-14,-15,-16,-17,-18,-19,-111,-74,-111,-111,-78,16,-111,16,-104,-111,-22,-20,-111,-111,-94,-111,-111,-48,-111,-73,-74,16,-105,-31,-103,-75,-76,-111,-111,-111,-111,-87,-85,-88,-111,-77,-111,-111,-111,-111,-111,-111,-92,-81,-84,-86,-111,-111,-82,-83,-111,-111,-89,-93,-91,-111,-47,-46,-111,-111,-111,-90,-49,-111,-30,]),'VOID':([0,2,3,4,5,7,10,11,18,23,24,30,31,32,34,35,36,38,39,40,41,42,43,44,47,48,49,58,60,64,65,67,69,72,74,75,76,83,85,91,94,96,101,106,107,108,111,113,123,124,126,135,144,145,149,165,171,172,174,176,180,186,187,188,191,192,195,210,211,212,213,214,215,216,218,226,233,234,236,241,242,253,254,255,256,259,263,264,269,],[-111,-111,17,-3,17,-23,-5,-7,17,-111,17,17,-2,-6,-21,-111,17,-4,-14,-15,-16,-17,-18,-19,-111,-74,-111,-111,-78,17,-111,17,-104,-111,-22,-20,-111,-111,-94,-111,-111,-48,-111,-73,-74,17,-105,-31,-103,-75,-76,-111,-111,-111,-111,-87,-85,-88,-111,-77,-111,-111,-111,-111,-111,-111,-92,-81,-84,-86,-111,-111,-82,-83,-111,-111,-89,-93,-91,-111,-47,-46,-111,-111,-111,-90,-49,-111,-30,]),'ABIMAIN':([0,2,4,5,7,19,21,23,31,65,74,108,127,],[-111,-111,-3,-111,-23,28,-25,-111,-2,-111,-22,-111,-24,]),'$end':([1,27,56,],[0,-1,-29,]),'ABIRRAY':([3,10,11,24,30,32,34,35,38,39,40,41,42,43,44,47,48,49,58,60,67,69,72,75,76,83,85,91,94,96,101,106,107,111,113,123,124,126,135,144,145,149,165,171,172,174,176,180,186,187,188,191,192,195,210,211,212,213,214,215,216,218,226,233,234,236,241,242,253,254,255,256,259,263,264,269,],[18,-5,-7,18,18,-6,-21,-111,-4,-14,-15,-16,-17,-18,-19,-111,-74,-111,-111,-78,18,-104,-111,-20,-111,-111,-94,-111,-111,-48,-111,-73,-74,-105,-31,-103,-75,-76,-111,-111,-111,-111,-87,-85,-88,-111,-77,-111,-111,-111,-111,-111,-111,-92,-81,-84,-86,-111,-111,-82,-83,-111,-111,-89,-93,-91,-111,-47,-46,-111,-111,-111,-90,-49,-111,-30,]),'PC':([3,8,10,11,24,32,34,38,39,40,41,42,43,44,54,60,75,81,86,87,89,93,102,104,109,115,116,117,124,125,126,147,149,150,163,164,166,169,170,176,189,190,194,196,199,225,239,240,248,],[-111,23,-5,-7,-111,-6,-21,-4,-14,-15,-16,-17,-18,-19,65,-78,-20,91,101,-111,-111,110,124,126,128,135,144,145,-75,149,-76,174,-111,177,186,187,188,191,192,-77,213,214,218,219,-33,-32,-34,-35,255,]),'C':([3,8,10,11,24,30,32,34,35,36,37,38,39,40,41,42,43,44,47,48,49,52,53,58,60,62,64,67,69,72,73,75,76,78,80,83,85,91,94,96,100,101,106,107,111,113,119,120,121,122,123,124,126,135,138,144,145,148,149,165,168,171,172,174,175,176,180,186,187,188,191,192,195,210,211,212,213,214,215,216,218,226,233,234,236,241,242,253,254,255,256,259,263,264,269,],[-111,24,-5,-7,-111,-111,24,-21,-111,-111,24,-4,-14,-15,-16,-17,-18,-19,-111,-74,-111,64,-28,-111,-78,-26,-111,-111,-104,-111,64,-20,24,88,90,-111,-94,-111,-111,-48,-111,-111,-73,-74,-105,-31,-96,148,-95,-98,-103,-75,-76,-111,-111,-111,-111,-111,-111,-87,148,-85,-88,-111,148,-77,-111,-111,-111,-111,-111,-111,-92,-81,-84,-86,-111,-111,-82,-83,-111,-111,-89,-93,-91,-111,-47,-46,-111,-111,-111,-90,-49,-111,-30,]),'ID':([6,9,10,11,12,13,14,15,16,17,20,24,26,32,34,35,38,39,40,41,42,43,44,47,48,49,51,58,60,61,67,68,69,70,72,75,76,77,83,85,88,90,91,93,94,96,97,98,100,101,106,107,111,113,114,123,124,126,129,133,134,135,136,138,139,140,141,142,143,144,145,148,149,151,154,155,156,157,158,159,160,162,165,171,172,173,174,176,177,180,183,184,186,187,188,191,192,195,201,202,203,204,210,211,212,213,214,215,216,218,219,220,221,222,223,224,226,229,230,231,232,233,234,236,241,242,250,253,254,255,256,259,261,262,263,264,269,],[22,25,-5,-7,-8,-9,-10,-11,-12,-13,29,-111,34,-6,-21,-111,-4,-14,-15,-16,-17,-18,-19,-111,-74,-111,62,-111,-78,71,-111,77,-104,80,-111,-20,84,86,-111,-94,80,80,-111,109,-111,-48,115,117,119,-111,-73,-74,-105,-31,131,-103,-75,-76,152,161,163,84,166,119,-99,-100,-101,-102,169,84,84,119,-111,178,181,-67,-68,-69,-70,-71,-72,131,-87,-85,-88,193,84,-77,197,-111,205,207,84,84,84,84,84,-92,131,-65,-66,131,-81,-84,-86,84,84,-82,-83,84,238,239,-36,-37,-38,-39,-111,131,131,131,131,-89,-93,-91,-111,-47,257,-46,-111,84,-111,-90,265,267,-49,-111,-30,]),'LLAVEC':([10,11,24,30,32,34,35,37,38,39,40,41,42,43,44,46,47,48,49,57,58,60,67,69,75,76,83,85,91,92,94,96,101,106,107,110,111,113,123,124,126,128,135,144,145,149,165,171,172,174,176,180,186,187,188,191,192,195,200,210,211,212,213,214,215,216,218,226,233,234,236,241,242,253,254,255,256,258,259,260,263,264,269,],[-5,-7,-111,-111,-6,-21,-111,54,-4,-14,-15,-16,-17,-18,-19,56,-106,-74,-111,-107,-111,-78,-111,-104,-20,-111,-111,-94,-111,108,-111,-48,-111,-73,-74,-110,-105,-31,-103,-75,-76,-109,-111,-111,-111,-111,-87,-85,-88,-111,-77,-111,-111,-111,-111,-111,-111,-92,226,-81,-84,-86,-111,-111,-82,-83,-111,-111,-89,-93,-91,-111,-47,-46,-111,-111,-111,263,-90,264,-49,-111,-30,]),'ABIF':([10,11,24,32,34,35,38,39,40,41,42,43,44,47,48,49,58,60,67,69,72,75,76,83,85,91,94,96,101,106,107,111,113,123,124,126,135,144,145,149,165,171,172,174,176,180,186,187,188,191,192,195,210,211,212,213,214,215,216,218,226,233,234,236,241,242,253,254,255,256,259,263,264,269,],[-5,-7,-111,-6,-21,-111,-4,-14,-15,-16,-17,-18,-19,-111,-74,-111,-111,-78,-111,-104,-111,-20,-111,95,-94,-111,-111,-48,-111,-73,-74,-105,-31,-103,-75,-76,-111,-111,-111,-111,-87,-85,-88,-111,-77,-111,-111,-111,-111,-111,-111,-92,-81,-84,-86,-111,-111,-82,-83,-111,95,-89,-93,-91,95,-47,-46,-111,-111,-111,-90,-49,-111,-30,]),'ABIJOR':([10,11,24,32,34,35,38,39,40,41,42,43,44,47,48,49,58,60,67,69,72,75,76,83,85,91,94,96,101,106,107,111,113,123,124,126,135,144,145,149,165,171,172,174,176,180,186,187,188,191,192,195,210,211,212,213,214,215,216,218,226,233,234,236,241,242,253,254,255,256,259,263,264,269,],[-5,-7,-111,-6,-21,-111,-4,-14,-15,-16,-17,-18,-19,-111,-74,-111,-111,-78,-111,-104,-111,-20,-111,-111,-94,-111,112,-48,-111,-73,-74,-105,-31,-103,-75,-76,-111,-111,-111,-111,-87,-85,-88,-111,-77,-111,-111,-111,-111,-111,-111,-92,-81,-84,-86,-111,-111,-82,-83,-111,-111,-89,-93,-91,-111,-47,-46,-111,-111,-111,-90,-49,112,-30,]),'ABIN':([10,11,24,32,34,35,38,39,40,41,42,43,44,47,48,49,58,60,67,69,72,75,76,83,85,91,94,96,101,106,107,111,113,123,124,126,135,144,145,149,165,171,172,174,176,180,186,187,188,191,192,195,210,211,212,213,214,215,216,218,226,233,234,236,241,242,253,254,255,256,259,263,264,269,],[-5,-7,-111,-6,-21,50,-4,-14,-15,-16,-17,-18,-19,50,-74,-111,-111,-78,-111,-104,50,-20,-111,-111,-94,50,-111,-48,-111,-73,-74,-105,-31,-103,-75,-76,-111,-111,-111,-111,-87,-85,-88,-111,-77,50,-111,-111,-111,-111,-111,-92,-81,-84,-86,-111,-111,-82,-83,-111,-111,-89,-93,-91,-111,-47,-46,50,-111,50,-90,-49,-111,-30,]),'ABOUT':([10,11,24,32,34,35,38,39,40,41,42,43,44,47,48,49,58,60,67,69,72,75,76,83,85,87,89,91,94,96,101,106,107,111,113,123,124,126,135,144,145,149,165,171,172,174,176,180,186,187,188,191,192,195,210,211,212,213,214,215,216,218,226,233,234,236,241,242,253,254,255,256,259,263,264,269,],[-5,-7,-111,-6,-21,-111,-4,-14,-15,-16,-17,-18,-19,-111,-74,59,-111,-78,-111,-104,-111,-20,-111,-111,-94,59,59,-111,-111,-48,-111,-73,-74,-105,-31,-103,-75,-76,-111,-111,-111,59,-87,-85,-88,-111,-77,-111,-111,-111,-111,-111,-111,-92,-81,-84,-86,-111,-111,-82,-83,-111,-111,-89,-93,-91,-111,-47,-46,-111,-111,-111,-90,-49,-111,-30,]),'ABIDECLARA':([10,11,24,32,34,35,38,39,40,41,42,43,44,47,48,49,58,60,67,69,72,75,76,83,85,91,94,96,101,106,107,111,113,123,124,126,135,144,145,149,165,171,172,174,176,180,186,187,188,191,192,195,210,211,212,213,214,215,216,218,226,233,234,236,241,242,253,254,255,256,259,263,264,269,],[-5,-7,-111,-6,-21,-111,-4,-14,-15,-16,-17,-18,-19,-111,-74,-111,68,-78,-111,-104,-111,-20,-111,-111,-94,-111,-111,-48,68,-73,-74,-105,-31,-103,-75,-76,-111,-111,-111,-111,-87,-85,-88,-111,-77,-111,-111,-111,-111,-111,-111,-92,-81,-84,-86,-111,-111,-82,-83,-111,-111,-89,-93,-91,-111,-47,-46,-111,-111,-111,-90,-49,-111,-30,]),'RETURN':([10,11,24,32,34,38,39,40,41,42,43,44,47,48,49,57,58,60,67,69,72,75,76,82,83,85,91,94,96,101,106,107,111,113,123,124,126,135,144,145,149,165,171,172,174,176,186,187,188,191,192,195,210,211,212,213,214,215,216,218,226,233,234,236,241,242,253,255,259,263,264,269,],[-5,-7,-111,-6,-21,-4,-14,-15,-16,-17,-18,-19,-106,-74,-111,-107,-111,-78,-111,-104,-111,-20,-111,93,-111,-94,-111,-111,-48,-111,-73,-74,-105,-31,-103,-75,-76,-111,-111,-111,-111,-87,-85,-88,-111,-77,-111,-111,-111,-111,-111,-92,-81,-84,-86,-111,-111,-82,-83,-111,-111,-89,-93,-91,-111,-47,-46,-111,-90,-49,-111,-30,]),'LLAVEA':([22,28,63,153,243,249,],[30,35,72,180,254,256,]),'ASIG':([25,34,84,146,152,178,238,],[33,45,97,173,179,198,250,]),'PARENTA':([29,50,59,84,95,112,115,133,],[36,61,70,100,114,129,138,162,]),'NUMERO':([33,55,97,99,100,114,134,137,138,139,140,141,142,143,148,154,155,156,157,158,159,160,162,173,179,183,184,198,201,202,203,204,217,220,221,222,223,224,229,230,231,232,261,262,],[39,66,39,118,39,39,39,167,39,-99,-100,-101,-102,39,39,39,-67,-68,-69,-70,-71,-72,39,39,199,39,39,225,39,-65,-66,39,235,240,-36,-37,-38,-39,39,39,39,39,266,268,]),'FLOAT_VALOR':([33,97,100,114,134,138,139,140,141,142,143,148,154,155,156,157,158,159,160,162,173,183,184,201,202,203,204,229,230,231,232,],[40,40,40,40,40,40,-99,-100,-101,-102,40,40,40,-67,-68,-69,-70,-71,-72,40,40,40,40,40,-65,-66,40,40,40,40,40,]),'CHAR_VALOR':([33,97,100,114,134,138,139,140,141,142,143,148,154,155,156,157,158,159,160,162,173,183,184,201,202,203,204,229,230,231,232,],[41,41,41,41,41,41,-99,-100,-101,-102,41,41,41,-67,-68,-69,-70,-71,-72,41,41,41,41,41,-65,-66,41,41,41,41,41,]),'STRING_VALOR':([33,70,97,100,114,134,138,139,140,141,142,143,148,154,155,156,157,158,159,160,162,173,183,184,201,202,203,204,229,230,231,232,],[42,78,42,42,42,42,42,-99,-100,-101,-102,42,42,42,-67,-68,-69,-70,-71,-72,42,42,42,42,42,-65,-66,42,42,42,42,42,]),'TRUE':([33,97,100,114,134,138,139,140,141,142,143,148,154,155,156,157,158,159,160,162,173,183,184,201,202,203,204,229,230,231,232,],[43,43,43,43,43,43,-99,-100,-101,-102,43,43,43,-67,-68,-69,-70,-71,-72,43,43,43,43,43,-65,-66,43,43,43,43,43,]),'FALSE':([33,97,100,114,134,138,139,140,141,142,143,148,154,155,156,157,158,159,160,162,173,183,184,201,202,203,204,229,230,231,232,],[44,44,44,44,44,44,-99,-100,-101,-102,44,44,44,-67,-68,-69,-70,-71,-72,44,44,44,44,44,-65,-66,44,44,44,44,44,]),'PARENTC':([36,39,40,41,42,43,44,52,53,62,64,71,73,78,79,80,100,103,105,119,120,121,122,130,131,132,138,148,168,175,181,182,185,205,206,207,208,209,227,228,237,244,245,246,247,251,252,265,266,267,268,],[-111,-14,-15,-16,-17,-18,-19,63,-28,-26,-111,81,-27,87,89,-80,-111,125,-79,-96,147,-95,-98,153,-52,-53,-111,-111,190,-97,-51,-55,209,-61,-63,-57,-59,-64,-50,-54,249,-60,-62,-56,-58,-44,-45,-40,-42,-41,-43,]),'AGREGA':([39,40,41,42,43,44,115,116,257,],[-14,-15,-16,-17,-18,-19,139,139,261,]),'RESTA':([39,40,41,42,43,44,115,116,257,],[-14,-15,-16,-17,-18,-19,140,140,262,]),'MULT':([39,40,41,42,43,44,115,116,],[-14,-15,-16,-17,-18,-19,141,141,]),'DIV':([39,40,41,42,43,44,115,116,],[-14,-15,-16,-17,-18,-19,142,142,]),'AND':([39,40,41,42,43,44,181,182,205,206,207,208,],[-14,-15,-16,-17,-18,-19,202,202,202,202,202,202,]),'OR':([39,40,41,42,43,44,181,182,205,206,207,208,],[-14,-15,-16,-17,-18,-19,203,203,203,203,203,203,]),'CORA':([45,84,115,193,],[55,99,137,217,]),'CORC':([66,118,167,235,],[75,146,189,248,]),'P':([84,115,],[98,136,]),'NOT':([114,154,155,156,157,158,159,160,162,201,202,203,204,229,230,231,232,],[133,183,-67,-68,-69,-70,-71,-72,133,133,-65,-66,133,133,133,133,133,]),'LT':([131,161,197,],[155,155,221,]),'LTE':([131,161,197,],[156,156,222,]),'GT':([131,161,197,],[157,157,224,]),'GTE':([131,161,197,],[158,158,223,]),'NE':([131,161,],[159,159,]),'COMP':([131,161,],[160,160,]),'ELSE':([226,],[243,]),'INCREMENTO':([238,],[251,]),'DECREMENTO':([238,],[252,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'variablesGlobales':([0,23,],[2,31,]),'empty':([0,2,3,5,23,24,30,35,36,47,49,58,64,65,67,72,76,83,87,89,91,94,100,101,108,135,138,144,145,148,149,174,180,186,187,188,191,192,213,214,218,226,241,254,255,256,264,],[4,7,11,21,4,11,11,48,53,48,60,69,53,7,11,48,85,96,60,60,107,113,122,69,21,85,122,85,85,122,60,85,48,85,85,85,85,85,85,85,85,96,96,48,85,48,113,]),'declaracionEstructuras':([2,65,],[5,74,]),'declaracionVariable':([3,24,30,67,],[8,32,37,76,]),'tipoDatos':([3,5,18,24,30,36,64,67,108,],[9,20,26,9,9,51,51,9,20,]),'declaracionArreglo':([3,24,30,67,],[10,10,10,10,]),'declaracionFuncion':([5,108,],[19,127,]),'declaraMain':([19,],[27,]),'tipoValores':([33,97,100,114,134,138,143,148,154,162,173,183,184,201,204,229,230,231,232,],[38,116,121,132,164,121,170,121,182,132,194,206,208,132,132,132,132,132,132,]),'listaInst':([35,47,72,180,254,256,],[46,57,82,200,258,260,]),'listaInstrucciones':([35,47,72,180,254,256,],[47,47,47,47,47,47,]),'entradaDatos':([35,47,72,91,180,254,256,],[49,49,49,106,49,49,49,]),'declaracionParametros':([36,64,],[52,73,]),'salidaDatos':([49,87,89,149,],[58,102,104,176,]),'declaraStruct':([58,101,],[67,123,]),'listaSalida':([70,88,90,],[79,103,105,]),'operacionesBasicas':([76,135,144,145,174,186,187,188,191,192,213,214,218,255,],[83,165,171,172,195,210,211,212,215,216,233,234,236,259,]),'return':([82,],[92,]),'declaracionIf':([83,226,241,],[94,242,253,]),'declaracionCiclo':([94,264,],[111,269,]),'listaValores':([100,138,148,],[120,168,175,]),'condicion':([114,162,201,204,229,230,231,232,],[130,185,227,228,244,245,246,247,]),'operadoresBasicos':([115,116,],[134,143,]),'inicializacion':([129,],[150,]),'operadoresRel':([131,161,],[154,184,]),'cond':([177,],[196,]),'operadoresLogicos':([181,182,205,206,207,208,],[201,204,229,230,231,232,]),'operadores':([197,],[220,]),'cambio':([219,],[237,]),'declaracionElse':([226,],[241,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> variablesGlobales declaracionEstructuras declaracionFuncion declaraMain','start',4,'p_programa','sintactico.py',17),
  ('variablesGlobales -> ABIWORLD declaracionVariable PC variablesGlobales','variablesGlobales',4,'p_variablesGlobales','sintactico.py',20),
  ('variablesGlobales -> empty','variablesGlobales',1,'p_variablesGlobales2','sintactico.py',23),
  ('declaracionVariable -> tipoDatos ID ASIG tipoValores','declaracionVariable',4,'p_declaracionVariable','sintactico.py',25),
  ('declaracionVariable -> declaracionArreglo','declaracionVariable',1,'p_declaracionVariable','sintactico.py',26),
  ('declaracionVariable -> declaracionVariable C declaracionVariable','declaracionVariable',3,'p_declaracionVariable1','sintactico.py',29),
  ('declaracionVariable -> empty','declaracionVariable',1,'p_declaracionVariable2','sintactico.py',32),
  ('tipoDatos -> INT','tipoDatos',1,'p_tipoDatos','sintactico.py',34),
  ('tipoDatos -> CHAR','tipoDatos',1,'p_tipoDatos','sintactico.py',35),
  ('tipoDatos -> STRING','tipoDatos',1,'p_tipoDatos','sintactico.py',36),
  ('tipoDatos -> BOOL','tipoDatos',1,'p_tipoDatos','sintactico.py',37),
  ('tipoDatos -> FLOAT','tipoDatos',1,'p_tipoDatos','sintactico.py',38),
  ('tipoDatos -> VOID','tipoDatos',1,'p_tipoDatos','sintactico.py',39),
  ('tipoValores -> NUMERO','tipoValores',1,'p_tipoValores','sintactico.py',44),
  ('tipoValores -> FLOAT_VALOR','tipoValores',1,'p_tipoValores','sintactico.py',45),
  ('tipoValores -> CHAR_VALOR','tipoValores',1,'p_tipoValores','sintactico.py',46),
  ('tipoValores -> STRING_VALOR','tipoValores',1,'p_tipoValores','sintactico.py',47),
  ('tipoValores -> TRUE','tipoValores',1,'p_tipoValores','sintactico.py',48),
  ('tipoValores -> FALSE','tipoValores',1,'p_tipoValores','sintactico.py',49),
  ('declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC','declaracionArreglo',7,'p_declaracionArreglo','sintactico.py',56),
  ('declaracionArreglo -> ABIRRAY tipoDatos ID','declaracionArreglo',3,'p_declaracionArreglo','sintactico.py',57),
  ('declaracionEstructuras -> ABISTRUCT ID LLAVEA declaracionVariable LLAVEC PC declaracionEstructuras','declaracionEstructuras',7,'p_declaracionEstructuras','sintactico.py',60),
  ('declaracionEstructuras -> empty','declaracionEstructuras',1,'p_declaracionEstructuras1','sintactico.py',63),
  ('declaracionFuncion -> tipoDatos ID PARENTA declaracionParametros PARENTC LLAVEA listaInst return LLAVEC declaracionFuncion','declaracionFuncion',10,'p_declaracionFuncion','sintactico.py',65),
  ('declaracionFuncion -> empty','declaracionFuncion',1,'p_declaracionFuncion1','sintactico.py',70),
  ('declaracionParametros -> tipoDatos ID','declaracionParametros',2,'p_declaracionParametros','sintactico.py',72),
  ('declaracionParametros -> declaracionParametros C declaracionParametros','declaracionParametros',3,'p_declaracionParametros1','sintactico.py',75),
  ('declaracionParametros -> empty','declaracionParametros',1,'p_declaracionParametros2','sintactico.py',78),
  ('declaraMain -> ABIMAIN LLAVEA listaInst LLAVEC','declaraMain',4,'p_declaraMain','sintactico.py',80),
  ('declaracionCiclo -> ABIJOR PARENTA inicializacion PC cond PC cambio PARENTC LLAVEA listaInst LLAVEC declaracionCiclo','declaracionCiclo',12,'p_declaracionCiclo','sintactico.py',83),
  ('declaracionCiclo -> empty','declaracionCiclo',1,'p_declaracionCiclo1','sintactico.py',86),
  ('inicializacion -> INT ID ASIG NUMERO','inicializacion',4,'p_inicalizacion','sintactico.py',88),
  ('inicializacion -> ID ASIG NUMERO','inicializacion',3,'p_inicalizacion','sintactico.py',89),
  ('cond -> ID operadores ID','cond',3,'p_cond','sintactico.py',91),
  ('cond -> ID operadores NUMERO','cond',3,'p_cond','sintactico.py',92),
  ('operadores -> LT','operadores',1,'p_operadores','sintactico.py',94),
  ('operadores -> LTE','operadores',1,'p_operadores','sintactico.py',95),
  ('operadores -> GTE','operadores',1,'p_operadores','sintactico.py',96),
  ('operadores -> GT','operadores',1,'p_operadores','sintactico.py',97),
  ('cambio -> ID ASIG ID AGREGA ID','cambio',5,'p_cambio','sintactico.py',99),
  ('cambio -> ID ASIG ID RESTA ID','cambio',5,'p_cambio','sintactico.py',100),
  ('cambio -> ID ASIG ID AGREGA NUMERO','cambio',5,'p_cambio','sintactico.py',101),
  ('cambio -> ID ASIG ID RESTA NUMERO','cambio',5,'p_cambio','sintactico.py',102),
  ('cambio -> ID INCREMENTO','cambio',2,'p_cambio','sintactico.py',103),
  ('cambio -> ID DECREMENTO','cambio',2,'p_cambio','sintactico.py',104),
  ('declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionElse declaracionIf','declaracionIf',9,'p_declaracionIf','sintactico.py',106),
  ('declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionIf','declaracionIf',8,'p_declaracionIf','sintactico.py',107),
  ('declaracionIf -> empty','declaracionIf',1,'p_declaracionIf1','sintactico.py',111),
  ('declaracionElse -> ELSE LLAVEA listaInst LLAVEC','declaracionElse',4,'p_declaracionElse','sintactico.py',114),
  ('condicion -> ID operadoresRel ID operadoresLogicos condicion','condicion',5,'p_condicion','sintactico.py',117),
  ('condicion -> ID operadoresRel ID','condicion',3,'p_condicion','sintactico.py',118),
  ('condicion -> ID','condicion',1,'p_condicion','sintactico.py',119),
  ('condicion -> tipoValores','condicion',1,'p_condicion','sintactico.py',120),
  ('condicion -> ID operadoresRel tipoValores operadoresLogicos condicion','condicion',5,'p_condicion','sintactico.py',121),
  ('condicion -> ID operadoresRel tipoValores','condicion',3,'p_condicion','sintactico.py',122),
  ('condicion -> NOT ID operadoresRel ID operadoresLogicos condicion','condicion',6,'p_condicion','sintactico.py',123),
  ('condicion -> NOT ID operadoresRel ID','condicion',4,'p_condicion','sintactico.py',124),
  ('condicion -> NOT ID operadoresRel tipoValores operadoresLogicos condicion','condicion',6,'p_condicion','sintactico.py',125),
  ('condicion -> NOT ID operadoresRel tipoValores','condicion',4,'p_condicion','sintactico.py',126),
  ('condicion -> ID operadoresRel NOT ID operadoresLogicos condicion','condicion',6,'p_condicion','sintactico.py',127),
  ('condicion -> ID operadoresRel NOT ID','condicion',4,'p_condicion','sintactico.py',128),
  ('condicion -> ID operadoresRel NOT tipoValores operadoresLogicos condicion','condicion',6,'p_condicion','sintactico.py',129),
  ('condicion -> ID operadoresRel NOT tipoValores','condicion',4,'p_condicion','sintactico.py',130),
  ('condicion -> NOT PARENTA condicion PARENTC','condicion',4,'p_condicion','sintactico.py',131),
  ('operadoresLogicos -> AND','operadoresLogicos',1,'p_operadoresLogicos','sintactico.py',133),
  ('operadoresLogicos -> OR','operadoresLogicos',1,'p_operadoresLogicos','sintactico.py',134),
  ('operadoresRel -> LT','operadoresRel',1,'p_operadoresRel','sintactico.py',136),
  ('operadoresRel -> LTE','operadoresRel',1,'p_operadoresRel','sintactico.py',137),
  ('operadoresRel -> GT','operadoresRel',1,'p_operadoresRel','sintactico.py',138),
  ('operadoresRel -> GTE','operadoresRel',1,'p_operadoresRel','sintactico.py',139),
  ('operadoresRel -> NE','operadoresRel',1,'p_operadoresRel','sintactico.py',140),
  ('operadoresRel -> COMP','operadoresRel',1,'p_operadoresRel','sintactico.py',141),
  ('entradaDatos -> ABIN PARENTA ID PARENTC PC entradaDatos','entradaDatos',6,'p_entradaDatos','sintactico.py',143),
  ('entradaDatos -> empty','entradaDatos',1,'p_entradaDatos1','sintactico.py',145),
  ('salidaDatos -> ABOUT PARENTA STRING_VALOR PARENTC salidaDatos PC','salidaDatos',6,'p_salidaDatos','sintactico.py',147),
  ('salidaDatos -> ABOUT PARENTA listaSalida PARENTC salidaDatos PC','salidaDatos',6,'p_salidaDatos','sintactico.py',148),
  ('salidaDatos -> ABOUT PARENTA STRING_VALOR C listaSalida PARENTC PC salidaDatos','salidaDatos',8,'p_salidaDatos','sintactico.py',149),
  ('salidaDatos -> empty','salidaDatos',1,'p_salidaDatos1','sintactico.py',151),
  ('listaSalida -> ID C listaSalida','listaSalida',3,'p_listaSalida','sintactico.py',153),
  ('listaSalida -> ID','listaSalida',1,'p_listaSalida','sintactico.py',154),
  ('operacionesBasicas -> ID ASIG ID operadoresBasicos ID PC operacionesBasicas','operacionesBasicas',7,'p_operacionesBasicas','sintactico.py',157),
  ('operacionesBasicas -> ID ASIG tipoValores operadoresBasicos ID PC operacionesBasicas','operacionesBasicas',7,'p_operacionesBasicas','sintactico.py',158),
  ('operacionesBasicas -> ID ASIG tipoValores operadoresBasicos tipoValores PC operacionesBasicas','operacionesBasicas',7,'p_operacionesBasicas','sintactico.py',159),
  ('operacionesBasicas -> ID ASIG ID operadoresBasicos tipoValores PC operacionesBasicas','operacionesBasicas',7,'p_operacionesBasicas','sintactico.py',160),
  ('operacionesBasicas -> ID ASIG tipoValores PC operacionesBasicas','operacionesBasicas',5,'p_operacionesBasicas','sintactico.py',161),
  ('operacionesBasicas -> ID ASIG ID P ID PC operacionesBasicas','operacionesBasicas',7,'p_operacionesBasicas','sintactico.py',162),
  ('operacionesBasicas -> ID ASIG ID PC operacionesBasicas','operacionesBasicas',5,'p_operacionesBasicas','sintactico.py',163),
  ('operacionesBasicas -> ID P ID PC operacionesBasicas','operacionesBasicas',5,'p_operacionesBasicas','sintactico.py',164),
  ('operacionesBasicas -> ID ASIG ID CORA NUMERO CORC PC operacionesBasicas','operacionesBasicas',8,'p_operacionesBasicas','sintactico.py',165),
  ('operacionesBasicas -> ID CORA NUMERO CORC ASIG ID CORA NUMERO CORC PC operacionesBasicas','operacionesBasicas',11,'p_operacionesBasicas','sintactico.py',166),
  ('operacionesBasicas -> ID CORA NUMERO CORC ASIG tipoValores PC operacionesBasicas','operacionesBasicas',8,'p_operacionesBasicas','sintactico.py',167),
  ('operacionesBasicas -> ID PARENTA listaValores PARENTC PC operacionesBasicas','operacionesBasicas',6,'p_operacionesBasicas','sintactico.py',168),
  ('operacionesBasicas -> ID ASIG ID PARENTA listaValores PARENTC PC operacionesBasicas','operacionesBasicas',8,'p_operacionesBasicas','sintactico.py',169),
  ('operacionesBasicas -> empty','operacionesBasicas',1,'p_operacionesBasicas1','sintactico.py',184),
  ('listaValores -> tipoValores','listaValores',1,'p_listaValores','sintactico.py',186),
  ('listaValores -> ID','listaValores',1,'p_listaValores','sintactico.py',187),
  ('listaValores -> listaValores C listaValores','listaValores',3,'p_listaValores','sintactico.py',188),
  ('listaValores -> empty','listaValores',1,'p_listaValores1','sintactico.py',190),
  ('operadoresBasicos -> AGREGA','operadoresBasicos',1,'p_operadoresBasicos','sintactico.py',192),
  ('operadoresBasicos -> RESTA','operadoresBasicos',1,'p_operadoresBasicos','sintactico.py',193),
  ('operadoresBasicos -> MULT','operadoresBasicos',1,'p_operadoresBasicos','sintactico.py',194),
  ('operadoresBasicos -> DIV','operadoresBasicos',1,'p_operadoresBasicos','sintactico.py',195),
  ('declaraStruct -> ABIDECLARA ID ID PC declaraStruct','declaraStruct',5,'p_declaraStruct','sintactico.py',197),
  ('declaraStruct -> empty','declaraStruct',1,'p_declaraStruct1','sintactico.py',199),
  ('listaInstrucciones -> entradaDatos salidaDatos declaraStruct declaracionVariable operacionesBasicas declaracionIf declaracionCiclo','listaInstrucciones',7,'p_listaInstrucciones','sintactico.py',201),
  ('listaInst -> listaInstrucciones','listaInst',1,'p_listaInst','sintactico.py',203),
  ('listaInst -> listaInstrucciones listaInst','listaInst',2,'p_listaInst','sintactico.py',204),
  ('listaInst -> empty','listaInst',1,'p_listaInst1','sintactico.py',206),
  ('return -> RETURN ID PC','return',3,'p_return','sintactico.py',208),
  ('return -> RETURN PC','return',2,'p_return','sintactico.py',209),
  ('empty -> <empty>','empty',0,'p_empty','sintactico.py',212),
]
