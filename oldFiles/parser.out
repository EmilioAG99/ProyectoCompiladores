Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> variablesGlobales declaracionEstructuras declaracionFuncion declaraMain
Rule 2     variablesGlobales -> ABIWORLD declaracionVariable PC variablesGlobales
Rule 3     variablesGlobales -> empty
Rule 4     declaracionVariable -> tipoDatos ID ASIG tipoValores
Rule 5     declaracionVariable -> declaracionArreglo
Rule 6     declaracionVariable -> declaracionVariable C declaracionVariable
Rule 7     declaracionVariable -> empty
Rule 8     tipoDatos -> INT
Rule 9     tipoDatos -> CHAR
Rule 10    tipoDatos -> STRING
Rule 11    tipoDatos -> BOOL
Rule 12    tipoDatos -> FLOAT
Rule 13    tipoDatos -> VOID
Rule 14    tipoValores -> NUMERO
Rule 15    tipoValores -> FLOAT_VALOR
Rule 16    tipoValores -> CHAR_VALOR
Rule 17    tipoValores -> STRING_VALOR
Rule 18    tipoValores -> TRUE
Rule 19    tipoValores -> FALSE
Rule 20    declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC
Rule 21    declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC CORA NUMERO CORC
Rule 22    declaracionArreglo -> ABIRRAY tipoDatos ID
Rule 23    declaracionEstructuras -> ABISTRUCT ID LLAVEA declaracionVariable LLAVEC PC declaracionEstructuras
Rule 24    declaracionEstructuras -> empty
Rule 25    declaracionFuncion -> tipoDatos ID PARENTA declaracionParametros PARENTC LLAVEA listaInst return LLAVEC declaracionFuncion
Rule 26    declaracionFuncion -> empty
Rule 27    declaracionParametros -> tipoDatos ID
Rule 28    declaracionParametros -> declaracionParametros C declaracionParametros
Rule 29    declaracionParametros -> empty
Rule 30    declaraMain -> ABIMAIN LLAVEA listaInst LLAVEC
Rule 31    declaracionCiclo -> ABIJOR PARENTA inicializacion PC cond PC cambio PARENTC LLAVEA listaInst LLAVEC declaracionCiclo
Rule 32    declaracionCiclo -> empty
Rule 33    inicializacion -> INT ID ASIG NUMERO
Rule 34    inicializacion -> ID ASIG NUMERO
Rule 35    cond -> ID operadores ID
Rule 36    cond -> ID operadores NUMERO
Rule 37    operadores -> LT
Rule 38    operadores -> LTE
Rule 39    operadores -> GTE
Rule 40    operadores -> GT
Rule 41    cambio -> ID ASIG ID AGREGA ID
Rule 42    cambio -> ID ASIG ID RESTA ID
Rule 43    cambio -> ID ASIG ID AGREGA NUMERO
Rule 44    cambio -> ID ASIG ID RESTA NUMERO
Rule 45    cambio -> ID INCREMENTO
Rule 46    cambio -> ID DECREMENTO
Rule 47    declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionElse declaracionIf
Rule 48    declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionIf
Rule 49    declaracionIf -> empty
Rule 50    declaracionElse -> ELSE LLAVEA listaInst LLAVEC
Rule 51    condicion -> ID operadoresRel ID operadoresLogicos condicion
Rule 52    condicion -> ID operadoresRel ID
Rule 53    condicion -> ID
Rule 54    condicion -> tipoValores
Rule 55    condicion -> ID operadoresRel tipoValores operadoresLogicos condicion
Rule 56    condicion -> ID operadoresRel tipoValores
Rule 57    condicion -> NOT ID operadoresRel ID operadoresLogicos condicion
Rule 58    condicion -> NOT ID operadoresRel ID
Rule 59    condicion -> NOT ID operadoresRel tipoValores operadoresLogicos condicion
Rule 60    condicion -> NOT ID operadoresRel tipoValores
Rule 61    condicion -> ID operadoresRel NOT ID operadoresLogicos condicion
Rule 62    condicion -> ID operadoresRel NOT ID
Rule 63    condicion -> ID operadoresRel NOT tipoValores operadoresLogicos condicion
Rule 64    condicion -> ID operadoresRel NOT tipoValores
Rule 65    condicion -> NOT PARENTA condicion PARENTC
Rule 66    operadoresLogicos -> AND
Rule 67    operadoresLogicos -> OR
Rule 68    operadoresRel -> LT
Rule 69    operadoresRel -> LTE
Rule 70    operadoresRel -> GT
Rule 71    operadoresRel -> GTE
Rule 72    operadoresRel -> NE
Rule 73    operadoresRel -> COMP
Rule 74    entradaDatos -> ABIN PARENTA ID PARENTC PC entradaDatos
Rule 75    entradaDatos -> empty
Rule 76    salidaDatos -> ABOUT PARENTA STRING_VALOR PARENTC salidaDatos PC
Rule 77    salidaDatos -> ABOUT PARENTA listaSalida PARENTC salidaDatos PC
Rule 78    salidaDatos -> ABOUT PARENTA STRING_VALOR C listaSalida PARENTC PC salidaDatos
Rule 79    salidaDatos -> empty
Rule 80    listaSalida -> ID C listaSalida
Rule 81    listaSalida -> ID
Rule 82    operacionesBasicas -> ID ASIG ID operadoresBasicos ID PC operacionesBasicas
Rule 83    operacionesBasicas -> ID ASIG tipoValores operadoresBasicos ID PC operacionesBasicas
Rule 84    operacionesBasicas -> ID ASIG tipoValores operadoresBasicos tipoValores PC operacionesBasicas
Rule 85    operacionesBasicas -> ID ASIG ID operadoresBasicos tipoValores PC operacionesBasicas
Rule 86    operacionesBasicas -> ID ASIG tipoValores PC operacionesBasicas
Rule 87    operacionesBasicas -> ID ASIG ID P ID PC operacionesBasicas
Rule 88    operacionesBasicas -> ID ASIG ID PC operacionesBasicas
Rule 89    operacionesBasicas -> ID P ID PC operacionesBasicas
Rule 90    operacionesBasicas -> ID ASIG ID CORA NUMERO CORC PC operacionesBasicas
Rule 91    operacionesBasicas -> ID CORA NUMERO CORC ASIG ID CORA NUMERO CORC PC operacionesBasicas
Rule 92    operacionesBasicas -> ID CORA NUMERO CORC ASIG tipoValores PC operacionesBasicas
Rule 93    operacionesBasicas -> ID PARENTA listaValores PARENTC PC operacionesBasicas
Rule 94    operacionesBasicas -> ID ASIG ID PARENTA listaValores PARENTC PC operacionesBasicas
Rule 95    operacionesBasicas -> empty
Rule 96    listaValores -> tipoValores
Rule 97    listaValores -> ID
Rule 98    listaValores -> listaValores C listaValores
Rule 99    listaValores -> empty
Rule 100   operadoresBasicos -> AGREGA
Rule 101   operadoresBasicos -> RESTA
Rule 102   operadoresBasicos -> MULT
Rule 103   operadoresBasicos -> DIV
Rule 104   declaraStruct -> ABIDECLARA ID ID PC declaraStruct
Rule 105   declaraStruct -> empty
Rule 106   listaInstrucciones -> entradaDatos salidaDatos declaraStruct declaracionVariable operacionesBasicas declaracionIf declaracionCiclo
Rule 107   listaInst -> listaInstrucciones
Rule 108   listaInst -> listaInstrucciones listaInst
Rule 109   listaInst -> empty
Rule 110   return -> RETURN ID PC
Rule 111   return -> RETURN PC
Rule 112   empty -> <empty>

Terminals, with rules where they appear

ABIDECLARA           : 104
ABIF                 : 47 48
ABIJOR               : 31
ABIMAIN              : 30
ABIN                 : 74
ABIRRAY              : 20 21 22
ABISTRUCT            : 23
ABIWORLD             : 2
ABOUT                : 76 77 78
AGREGA               : 41 43 100
AND                  : 66
ASIG                 : 4 20 21 33 34 41 42 43 44 82 83 84 85 86 87 88 90 91 92 94
BOOL                 : 11
C                    : 6 28 78 80 98
CHAR                 : 9
CHAR_VALOR           : 16
COMP                 : 73
CORA                 : 20 21 21 90 91 91 92
CORC                 : 20 21 21 90 91 91 92
DECREMENTO           : 46
DIV                  : 103
ELSE                 : 50
FALSE                : 19
FLOAT                : 12
FLOAT_VALOR          : 15
GT                   : 40 70
GTE                  : 39 71
ID                   : 4 20 21 22 23 25 27 33 34 35 35 36 41 41 41 42 42 42 43 43 44 44 45 46 51 51 52 52 53 55 56 57 57 58 58 59 60 61 61 62 62 63 64 74 80 81 82 82 82 83 83 84 85 85 86 87 87 87 88 88 89 89 90 90 91 91 92 93 94 94 97 104 104 110
INCREMENTO           : 45
INT                  : 8 33
LLAVEA               : 23 25 30 31 47 48 50
LLAVEC               : 23 25 30 31 47 48 50
LT                   : 37 68
LTE                  : 38 69
MULT                 : 102
NE                   : 72
NOT                  : 57 58 59 60 61 62 63 64 65
NUMERO               : 14 20 21 21 33 34 36 43 44 90 91 91 92
OR                   : 67
P                    : 87 89
PARENTA              : 25 31 47 48 65 74 76 77 78 93 94
PARENTC              : 25 31 47 48 65 74 76 77 78 93 94
PC                   : 2 23 31 31 74 76 77 78 82 83 84 85 86 87 88 89 90 91 92 93 94 104 110 111
RESTA                : 42 44 101
RETURN               : 110 111
STRING               : 10
STRING_VALOR         : 17 76 78
TRUE                 : 18
VOID                 : 13
error                : 

Nonterminals, with rules where they appear

cambio               : 31
cond                 : 31
condicion            : 47 48 51 55 57 59 61 63 65
declaraMain          : 1
declaraStruct        : 104 106
declaracionArreglo   : 5
declaracionCiclo     : 31 106
declaracionElse      : 47
declaracionEstructuras : 1 23
declaracionFuncion   : 1 25
declaracionIf        : 47 48 106
declaracionParametros : 25 28 28
declaracionVariable  : 2 6 6 23 106
empty                : 3 7 24 26 29 32 49 75 79 95 99 105 109
entradaDatos         : 74 106
inicializacion       : 31
listaInst            : 25 30 31 47 48 50 108
listaInstrucciones   : 107 108
listaSalida          : 77 78 80
listaValores         : 93 94 98 98
operacionesBasicas   : 82 83 84 85 86 87 88 89 90 91 92 93 94 106
operadores           : 35 36
operadoresBasicos    : 82 83 84 85
operadoresLogicos    : 51 55 57 59 61 63
operadoresRel        : 51 52 55 56 57 58 59 60 61 62 63 64
return               : 25
salidaDatos          : 76 77 78 106
start                : 0
tipoDatos            : 4 20 21 22 25 27
tipoValores          : 4 54 55 56 59 60 63 64 83 84 84 85 86 92 96
variablesGlobales    : 1 2

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . variablesGlobales declaracionEstructuras declaracionFuncion declaraMain
    (2) variablesGlobales -> . ABIWORLD declaracionVariable PC variablesGlobales
    (3) variablesGlobales -> . empty
    (112) empty -> .

    ABIWORLD        shift and go to state 3
    ABISTRUCT       reduce using rule 112 (empty -> .)
    INT             reduce using rule 112 (empty -> .)
    CHAR            reduce using rule 112 (empty -> .)
    STRING          reduce using rule 112 (empty -> .)
    BOOL            reduce using rule 112 (empty -> .)
    FLOAT           reduce using rule 112 (empty -> .)
    VOID            reduce using rule 112 (empty -> .)
    ABIMAIN         reduce using rule 112 (empty -> .)

    start                          shift and go to state 1
    variablesGlobales              shift and go to state 2
    empty                          shift and go to state 4

state 1

    (0) S' -> start .



state 2

    (1) start -> variablesGlobales . declaracionEstructuras declaracionFuncion declaraMain
    (23) declaracionEstructuras -> . ABISTRUCT ID LLAVEA declaracionVariable LLAVEC PC declaracionEstructuras
    (24) declaracionEstructuras -> . empty
    (112) empty -> .

    ABISTRUCT       shift and go to state 6
    INT             reduce using rule 112 (empty -> .)
    CHAR            reduce using rule 112 (empty -> .)
    STRING          reduce using rule 112 (empty -> .)
    BOOL            reduce using rule 112 (empty -> .)
    FLOAT           reduce using rule 112 (empty -> .)
    VOID            reduce using rule 112 (empty -> .)
    ABIMAIN         reduce using rule 112 (empty -> .)

    declaracionEstructuras         shift and go to state 5
    empty                          shift and go to state 7

state 3

    (2) variablesGlobales -> ABIWORLD . declaracionVariable PC variablesGlobales
    (4) declaracionVariable -> . tipoDatos ID ASIG tipoValores
    (5) declaracionVariable -> . declaracionArreglo
    (6) declaracionVariable -> . declaracionVariable C declaracionVariable
    (7) declaracionVariable -> . empty
    (8) tipoDatos -> . INT
    (9) tipoDatos -> . CHAR
    (10) tipoDatos -> . STRING
    (11) tipoDatos -> . BOOL
    (12) tipoDatos -> . FLOAT
    (13) tipoDatos -> . VOID
    (20) declaracionArreglo -> . ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC
    (21) declaracionArreglo -> . ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC CORA NUMERO CORC
    (22) declaracionArreglo -> . ABIRRAY tipoDatos ID
    (112) empty -> .

    INT             shift and go to state 12
    CHAR            shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15
    FLOAT           shift and go to state 16
    VOID            shift and go to state 17
    ABIRRAY         shift and go to state 18
    PC              reduce using rule 112 (empty -> .)
    C               reduce using rule 112 (empty -> .)

    declaracionVariable            shift and go to state 8
    tipoDatos                      shift and go to state 9
    declaracionArreglo             shift and go to state 10
    empty                          shift and go to state 11

state 4

    (3) variablesGlobales -> empty .

    ABISTRUCT       reduce using rule 3 (variablesGlobales -> empty .)
    INT             reduce using rule 3 (variablesGlobales -> empty .)
    CHAR            reduce using rule 3 (variablesGlobales -> empty .)
    STRING          reduce using rule 3 (variablesGlobales -> empty .)
    BOOL            reduce using rule 3 (variablesGlobales -> empty .)
    FLOAT           reduce using rule 3 (variablesGlobales -> empty .)
    VOID            reduce using rule 3 (variablesGlobales -> empty .)
    ABIMAIN         reduce using rule 3 (variablesGlobales -> empty .)


state 5

    (1) start -> variablesGlobales declaracionEstructuras . declaracionFuncion declaraMain
    (25) declaracionFuncion -> . tipoDatos ID PARENTA declaracionParametros PARENTC LLAVEA listaInst return LLAVEC declaracionFuncion
    (26) declaracionFuncion -> . empty
    (8) tipoDatos -> . INT
    (9) tipoDatos -> . CHAR
    (10) tipoDatos -> . STRING
    (11) tipoDatos -> . BOOL
    (12) tipoDatos -> . FLOAT
    (13) tipoDatos -> . VOID
    (112) empty -> .

    INT             shift and go to state 12
    CHAR            shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15
    FLOAT           shift and go to state 16
    VOID            shift and go to state 17
    ABIMAIN         reduce using rule 112 (empty -> .)

    declaracionFuncion             shift and go to state 19
    tipoDatos                      shift and go to state 20
    empty                          shift and go to state 21

state 6

    (23) declaracionEstructuras -> ABISTRUCT . ID LLAVEA declaracionVariable LLAVEC PC declaracionEstructuras

    ID              shift and go to state 22


state 7

    (24) declaracionEstructuras -> empty .

    INT             reduce using rule 24 (declaracionEstructuras -> empty .)
    CHAR            reduce using rule 24 (declaracionEstructuras -> empty .)
    STRING          reduce using rule 24 (declaracionEstructuras -> empty .)
    BOOL            reduce using rule 24 (declaracionEstructuras -> empty .)
    FLOAT           reduce using rule 24 (declaracionEstructuras -> empty .)
    VOID            reduce using rule 24 (declaracionEstructuras -> empty .)
    ABIMAIN         reduce using rule 24 (declaracionEstructuras -> empty .)


state 8

    (2) variablesGlobales -> ABIWORLD declaracionVariable . PC variablesGlobales
    (6) declaracionVariable -> declaracionVariable . C declaracionVariable

    PC              shift and go to state 23
    C               shift and go to state 24


state 9

    (4) declaracionVariable -> tipoDatos . ID ASIG tipoValores

    ID              shift and go to state 25


state 10

    (5) declaracionVariable -> declaracionArreglo .

    PC              reduce using rule 5 (declaracionVariable -> declaracionArreglo .)
    C               reduce using rule 5 (declaracionVariable -> declaracionArreglo .)
    LLAVEC          reduce using rule 5 (declaracionVariable -> declaracionArreglo .)
    ID              reduce using rule 5 (declaracionVariable -> declaracionArreglo .)
    ABIF            reduce using rule 5 (declaracionVariable -> declaracionArreglo .)
    ABIJOR          reduce using rule 5 (declaracionVariable -> declaracionArreglo .)
    ABIN            reduce using rule 5 (declaracionVariable -> declaracionArreglo .)
    ABOUT           reduce using rule 5 (declaracionVariable -> declaracionArreglo .)
    ABIDECLARA      reduce using rule 5 (declaracionVariable -> declaracionArreglo .)
    INT             reduce using rule 5 (declaracionVariable -> declaracionArreglo .)
    CHAR            reduce using rule 5 (declaracionVariable -> declaracionArreglo .)
    STRING          reduce using rule 5 (declaracionVariable -> declaracionArreglo .)
    BOOL            reduce using rule 5 (declaracionVariable -> declaracionArreglo .)
    FLOAT           reduce using rule 5 (declaracionVariable -> declaracionArreglo .)
    VOID            reduce using rule 5 (declaracionVariable -> declaracionArreglo .)
    ABIRRAY         reduce using rule 5 (declaracionVariable -> declaracionArreglo .)
    RETURN          reduce using rule 5 (declaracionVariable -> declaracionArreglo .)


state 11

    (7) declaracionVariable -> empty .

    PC              reduce using rule 7 (declaracionVariable -> empty .)
    C               reduce using rule 7 (declaracionVariable -> empty .)
    LLAVEC          reduce using rule 7 (declaracionVariable -> empty .)
    ID              reduce using rule 7 (declaracionVariable -> empty .)
    ABIF            reduce using rule 7 (declaracionVariable -> empty .)
    ABIJOR          reduce using rule 7 (declaracionVariable -> empty .)
    ABIN            reduce using rule 7 (declaracionVariable -> empty .)
    ABOUT           reduce using rule 7 (declaracionVariable -> empty .)
    ABIDECLARA      reduce using rule 7 (declaracionVariable -> empty .)
    INT             reduce using rule 7 (declaracionVariable -> empty .)
    CHAR            reduce using rule 7 (declaracionVariable -> empty .)
    STRING          reduce using rule 7 (declaracionVariable -> empty .)
    BOOL            reduce using rule 7 (declaracionVariable -> empty .)
    FLOAT           reduce using rule 7 (declaracionVariable -> empty .)
    VOID            reduce using rule 7 (declaracionVariable -> empty .)
    ABIRRAY         reduce using rule 7 (declaracionVariable -> empty .)
    RETURN          reduce using rule 7 (declaracionVariable -> empty .)


state 12

    (8) tipoDatos -> INT .

    ID              reduce using rule 8 (tipoDatos -> INT .)


state 13

    (9) tipoDatos -> CHAR .

    ID              reduce using rule 9 (tipoDatos -> CHAR .)


state 14

    (10) tipoDatos -> STRING .

    ID              reduce using rule 10 (tipoDatos -> STRING .)


state 15

    (11) tipoDatos -> BOOL .

    ID              reduce using rule 11 (tipoDatos -> BOOL .)


state 16

    (12) tipoDatos -> FLOAT .

    ID              reduce using rule 12 (tipoDatos -> FLOAT .)


state 17

    (13) tipoDatos -> VOID .

    ID              reduce using rule 13 (tipoDatos -> VOID .)


state 18

    (20) declaracionArreglo -> ABIRRAY . tipoDatos ID ASIG CORA NUMERO CORC
    (21) declaracionArreglo -> ABIRRAY . tipoDatos ID ASIG CORA NUMERO CORC CORA NUMERO CORC
    (22) declaracionArreglo -> ABIRRAY . tipoDatos ID
    (8) tipoDatos -> . INT
    (9) tipoDatos -> . CHAR
    (10) tipoDatos -> . STRING
    (11) tipoDatos -> . BOOL
    (12) tipoDatos -> . FLOAT
    (13) tipoDatos -> . VOID

    INT             shift and go to state 12
    CHAR            shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15
    FLOAT           shift and go to state 16
    VOID            shift and go to state 17

    tipoDatos                      shift and go to state 26

state 19

    (1) start -> variablesGlobales declaracionEstructuras declaracionFuncion . declaraMain
    (30) declaraMain -> . ABIMAIN LLAVEA listaInst LLAVEC

    ABIMAIN         shift and go to state 28

    declaraMain                    shift and go to state 27

state 20

    (25) declaracionFuncion -> tipoDatos . ID PARENTA declaracionParametros PARENTC LLAVEA listaInst return LLAVEC declaracionFuncion

    ID              shift and go to state 29


state 21

    (26) declaracionFuncion -> empty .

    ABIMAIN         reduce using rule 26 (declaracionFuncion -> empty .)


state 22

    (23) declaracionEstructuras -> ABISTRUCT ID . LLAVEA declaracionVariable LLAVEC PC declaracionEstructuras

    LLAVEA          shift and go to state 30


state 23

    (2) variablesGlobales -> ABIWORLD declaracionVariable PC . variablesGlobales
    (2) variablesGlobales -> . ABIWORLD declaracionVariable PC variablesGlobales
    (3) variablesGlobales -> . empty
    (112) empty -> .

    ABIWORLD        shift and go to state 3
    ABISTRUCT       reduce using rule 112 (empty -> .)
    INT             reduce using rule 112 (empty -> .)
    CHAR            reduce using rule 112 (empty -> .)
    STRING          reduce using rule 112 (empty -> .)
    BOOL            reduce using rule 112 (empty -> .)
    FLOAT           reduce using rule 112 (empty -> .)
    VOID            reduce using rule 112 (empty -> .)
    ABIMAIN         reduce using rule 112 (empty -> .)

    variablesGlobales              shift and go to state 31
    empty                          shift and go to state 4

state 24

    (6) declaracionVariable -> declaracionVariable C . declaracionVariable
    (4) declaracionVariable -> . tipoDatos ID ASIG tipoValores
    (5) declaracionVariable -> . declaracionArreglo
    (6) declaracionVariable -> . declaracionVariable C declaracionVariable
    (7) declaracionVariable -> . empty
    (8) tipoDatos -> . INT
    (9) tipoDatos -> . CHAR
    (10) tipoDatos -> . STRING
    (11) tipoDatos -> . BOOL
    (12) tipoDatos -> . FLOAT
    (13) tipoDatos -> . VOID
    (20) declaracionArreglo -> . ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC
    (21) declaracionArreglo -> . ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC CORA NUMERO CORC
    (22) declaracionArreglo -> . ABIRRAY tipoDatos ID
    (112) empty -> .

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for ABIRRAY resolved as shift
    INT             shift and go to state 12
    CHAR            shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15
    FLOAT           shift and go to state 16
    VOID            shift and go to state 17
    ABIRRAY         shift and go to state 18
    C               reduce using rule 112 (empty -> .)
    PC              reduce using rule 112 (empty -> .)
    LLAVEC          reduce using rule 112 (empty -> .)
    ID              reduce using rule 112 (empty -> .)
    ABIF            reduce using rule 112 (empty -> .)
    ABIJOR          reduce using rule 112 (empty -> .)
    ABIN            reduce using rule 112 (empty -> .)
    ABOUT           reduce using rule 112 (empty -> .)
    ABIDECLARA      reduce using rule 112 (empty -> .)
    RETURN          reduce using rule 112 (empty -> .)

  ! INT             [ reduce using rule 112 (empty -> .) ]
  ! CHAR            [ reduce using rule 112 (empty -> .) ]
  ! STRING          [ reduce using rule 112 (empty -> .) ]
  ! BOOL            [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]
  ! VOID            [ reduce using rule 112 (empty -> .) ]
  ! ABIRRAY         [ reduce using rule 112 (empty -> .) ]

    declaracionVariable            shift and go to state 32
    tipoDatos                      shift and go to state 9
    declaracionArreglo             shift and go to state 10
    empty                          shift and go to state 11

state 25

    (4) declaracionVariable -> tipoDatos ID . ASIG tipoValores

    ASIG            shift and go to state 33


state 26

    (20) declaracionArreglo -> ABIRRAY tipoDatos . ID ASIG CORA NUMERO CORC
    (21) declaracionArreglo -> ABIRRAY tipoDatos . ID ASIG CORA NUMERO CORC CORA NUMERO CORC
    (22) declaracionArreglo -> ABIRRAY tipoDatos . ID

    ID              shift and go to state 34


state 27

    (1) start -> variablesGlobales declaracionEstructuras declaracionFuncion declaraMain .

    $end            reduce using rule 1 (start -> variablesGlobales declaracionEstructuras declaracionFuncion declaraMain .)


state 28

    (30) declaraMain -> ABIMAIN . LLAVEA listaInst LLAVEC

    LLAVEA          shift and go to state 35


state 29

    (25) declaracionFuncion -> tipoDatos ID . PARENTA declaracionParametros PARENTC LLAVEA listaInst return LLAVEC declaracionFuncion

    PARENTA         shift and go to state 36


state 30

    (23) declaracionEstructuras -> ABISTRUCT ID LLAVEA . declaracionVariable LLAVEC PC declaracionEstructuras
    (4) declaracionVariable -> . tipoDatos ID ASIG tipoValores
    (5) declaracionVariable -> . declaracionArreglo
    (6) declaracionVariable -> . declaracionVariable C declaracionVariable
    (7) declaracionVariable -> . empty
    (8) tipoDatos -> . INT
    (9) tipoDatos -> . CHAR
    (10) tipoDatos -> . STRING
    (11) tipoDatos -> . BOOL
    (12) tipoDatos -> . FLOAT
    (13) tipoDatos -> . VOID
    (20) declaracionArreglo -> . ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC
    (21) declaracionArreglo -> . ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC CORA NUMERO CORC
    (22) declaracionArreglo -> . ABIRRAY tipoDatos ID
    (112) empty -> .

    INT             shift and go to state 12
    CHAR            shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15
    FLOAT           shift and go to state 16
    VOID            shift and go to state 17
    ABIRRAY         shift and go to state 18
    LLAVEC          reduce using rule 112 (empty -> .)
    C               reduce using rule 112 (empty -> .)

    declaracionVariable            shift and go to state 37
    tipoDatos                      shift and go to state 9
    declaracionArreglo             shift and go to state 10
    empty                          shift and go to state 11

state 31

    (2) variablesGlobales -> ABIWORLD declaracionVariable PC variablesGlobales .

    ABISTRUCT       reduce using rule 2 (variablesGlobales -> ABIWORLD declaracionVariable PC variablesGlobales .)
    INT             reduce using rule 2 (variablesGlobales -> ABIWORLD declaracionVariable PC variablesGlobales .)
    CHAR            reduce using rule 2 (variablesGlobales -> ABIWORLD declaracionVariable PC variablesGlobales .)
    STRING          reduce using rule 2 (variablesGlobales -> ABIWORLD declaracionVariable PC variablesGlobales .)
    BOOL            reduce using rule 2 (variablesGlobales -> ABIWORLD declaracionVariable PC variablesGlobales .)
    FLOAT           reduce using rule 2 (variablesGlobales -> ABIWORLD declaracionVariable PC variablesGlobales .)
    VOID            reduce using rule 2 (variablesGlobales -> ABIWORLD declaracionVariable PC variablesGlobales .)
    ABIMAIN         reduce using rule 2 (variablesGlobales -> ABIWORLD declaracionVariable PC variablesGlobales .)


state 32

    (6) declaracionVariable -> declaracionVariable C declaracionVariable .
    (6) declaracionVariable -> declaracionVariable . C declaracionVariable

  ! shift/reduce conflict for C resolved as shift
    PC              reduce using rule 6 (declaracionVariable -> declaracionVariable C declaracionVariable .)
    LLAVEC          reduce using rule 6 (declaracionVariable -> declaracionVariable C declaracionVariable .)
    ID              reduce using rule 6 (declaracionVariable -> declaracionVariable C declaracionVariable .)
    ABIF            reduce using rule 6 (declaracionVariable -> declaracionVariable C declaracionVariable .)
    ABIJOR          reduce using rule 6 (declaracionVariable -> declaracionVariable C declaracionVariable .)
    ABIN            reduce using rule 6 (declaracionVariable -> declaracionVariable C declaracionVariable .)
    ABOUT           reduce using rule 6 (declaracionVariable -> declaracionVariable C declaracionVariable .)
    ABIDECLARA      reduce using rule 6 (declaracionVariable -> declaracionVariable C declaracionVariable .)
    INT             reduce using rule 6 (declaracionVariable -> declaracionVariable C declaracionVariable .)
    CHAR            reduce using rule 6 (declaracionVariable -> declaracionVariable C declaracionVariable .)
    STRING          reduce using rule 6 (declaracionVariable -> declaracionVariable C declaracionVariable .)
    BOOL            reduce using rule 6 (declaracionVariable -> declaracionVariable C declaracionVariable .)
    FLOAT           reduce using rule 6 (declaracionVariable -> declaracionVariable C declaracionVariable .)
    VOID            reduce using rule 6 (declaracionVariable -> declaracionVariable C declaracionVariable .)
    ABIRRAY         reduce using rule 6 (declaracionVariable -> declaracionVariable C declaracionVariable .)
    RETURN          reduce using rule 6 (declaracionVariable -> declaracionVariable C declaracionVariable .)
    C               shift and go to state 24

  ! C               [ reduce using rule 6 (declaracionVariable -> declaracionVariable C declaracionVariable .) ]


state 33

    (4) declaracionVariable -> tipoDatos ID ASIG . tipoValores
    (14) tipoValores -> . NUMERO
    (15) tipoValores -> . FLOAT_VALOR
    (16) tipoValores -> . CHAR_VALOR
    (17) tipoValores -> . STRING_VALOR
    (18) tipoValores -> . TRUE
    (19) tipoValores -> . FALSE

    NUMERO          shift and go to state 39
    FLOAT_VALOR     shift and go to state 40
    CHAR_VALOR      shift and go to state 41
    STRING_VALOR    shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

    tipoValores                    shift and go to state 38

state 34

    (20) declaracionArreglo -> ABIRRAY tipoDatos ID . ASIG CORA NUMERO CORC
    (21) declaracionArreglo -> ABIRRAY tipoDatos ID . ASIG CORA NUMERO CORC CORA NUMERO CORC
    (22) declaracionArreglo -> ABIRRAY tipoDatos ID .

    ASIG            shift and go to state 45
    PC              reduce using rule 22 (declaracionArreglo -> ABIRRAY tipoDatos ID .)
    C               reduce using rule 22 (declaracionArreglo -> ABIRRAY tipoDatos ID .)
    LLAVEC          reduce using rule 22 (declaracionArreglo -> ABIRRAY tipoDatos ID .)
    ID              reduce using rule 22 (declaracionArreglo -> ABIRRAY tipoDatos ID .)
    ABIF            reduce using rule 22 (declaracionArreglo -> ABIRRAY tipoDatos ID .)
    ABIJOR          reduce using rule 22 (declaracionArreglo -> ABIRRAY tipoDatos ID .)
    ABIN            reduce using rule 22 (declaracionArreglo -> ABIRRAY tipoDatos ID .)
    ABOUT           reduce using rule 22 (declaracionArreglo -> ABIRRAY tipoDatos ID .)
    ABIDECLARA      reduce using rule 22 (declaracionArreglo -> ABIRRAY tipoDatos ID .)
    INT             reduce using rule 22 (declaracionArreglo -> ABIRRAY tipoDatos ID .)
    CHAR            reduce using rule 22 (declaracionArreglo -> ABIRRAY tipoDatos ID .)
    STRING          reduce using rule 22 (declaracionArreglo -> ABIRRAY tipoDatos ID .)
    BOOL            reduce using rule 22 (declaracionArreglo -> ABIRRAY tipoDatos ID .)
    FLOAT           reduce using rule 22 (declaracionArreglo -> ABIRRAY tipoDatos ID .)
    VOID            reduce using rule 22 (declaracionArreglo -> ABIRRAY tipoDatos ID .)
    ABIRRAY         reduce using rule 22 (declaracionArreglo -> ABIRRAY tipoDatos ID .)
    RETURN          reduce using rule 22 (declaracionArreglo -> ABIRRAY tipoDatos ID .)


state 35

    (30) declaraMain -> ABIMAIN LLAVEA . listaInst LLAVEC
    (107) listaInst -> . listaInstrucciones
    (108) listaInst -> . listaInstrucciones listaInst
    (109) listaInst -> . empty
    (106) listaInstrucciones -> . entradaDatos salidaDatos declaraStruct declaracionVariable operacionesBasicas declaracionIf declaracionCiclo
    (112) empty -> .
    (74) entradaDatos -> . ABIN PARENTA ID PARENTC PC entradaDatos
    (75) entradaDatos -> . empty

  ! shift/reduce conflict for ABIN resolved as shift
    LLAVEC          reduce using rule 112 (empty -> .)
    ABOUT           reduce using rule 112 (empty -> .)
    ABIDECLARA      reduce using rule 112 (empty -> .)
    INT             reduce using rule 112 (empty -> .)
    CHAR            reduce using rule 112 (empty -> .)
    STRING          reduce using rule 112 (empty -> .)
    BOOL            reduce using rule 112 (empty -> .)
    FLOAT           reduce using rule 112 (empty -> .)
    VOID            reduce using rule 112 (empty -> .)
    ABIRRAY         reduce using rule 112 (empty -> .)
    C               reduce using rule 112 (empty -> .)
    ID              reduce using rule 112 (empty -> .)
    ABIF            reduce using rule 112 (empty -> .)
    ABIJOR          reduce using rule 112 (empty -> .)
    ABIN            shift and go to state 50

  ! ABIN            [ reduce using rule 112 (empty -> .) ]

    listaInst                      shift and go to state 46
    listaInstrucciones             shift and go to state 47
    empty                          shift and go to state 48
    entradaDatos                   shift and go to state 49

state 36

    (25) declaracionFuncion -> tipoDatos ID PARENTA . declaracionParametros PARENTC LLAVEA listaInst return LLAVEC declaracionFuncion
    (27) declaracionParametros -> . tipoDatos ID
    (28) declaracionParametros -> . declaracionParametros C declaracionParametros
    (29) declaracionParametros -> . empty
    (8) tipoDatos -> . INT
    (9) tipoDatos -> . CHAR
    (10) tipoDatos -> . STRING
    (11) tipoDatos -> . BOOL
    (12) tipoDatos -> . FLOAT
    (13) tipoDatos -> . VOID
    (112) empty -> .

    INT             shift and go to state 12
    CHAR            shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15
    FLOAT           shift and go to state 16
    VOID            shift and go to state 17
    PARENTC         reduce using rule 112 (empty -> .)
    C               reduce using rule 112 (empty -> .)

    tipoDatos                      shift and go to state 51
    declaracionParametros          shift and go to state 52
    empty                          shift and go to state 53

state 37

    (23) declaracionEstructuras -> ABISTRUCT ID LLAVEA declaracionVariable . LLAVEC PC declaracionEstructuras
    (6) declaracionVariable -> declaracionVariable . C declaracionVariable

    LLAVEC          shift and go to state 54
    C               shift and go to state 24


state 38

    (4) declaracionVariable -> tipoDatos ID ASIG tipoValores .

    PC              reduce using rule 4 (declaracionVariable -> tipoDatos ID ASIG tipoValores .)
    C               reduce using rule 4 (declaracionVariable -> tipoDatos ID ASIG tipoValores .)
    LLAVEC          reduce using rule 4 (declaracionVariable -> tipoDatos ID ASIG tipoValores .)
    ID              reduce using rule 4 (declaracionVariable -> tipoDatos ID ASIG tipoValores .)
    ABIF            reduce using rule 4 (declaracionVariable -> tipoDatos ID ASIG tipoValores .)
    ABIJOR          reduce using rule 4 (declaracionVariable -> tipoDatos ID ASIG tipoValores .)
    ABIN            reduce using rule 4 (declaracionVariable -> tipoDatos ID ASIG tipoValores .)
    ABOUT           reduce using rule 4 (declaracionVariable -> tipoDatos ID ASIG tipoValores .)
    ABIDECLARA      reduce using rule 4 (declaracionVariable -> tipoDatos ID ASIG tipoValores .)
    INT             reduce using rule 4 (declaracionVariable -> tipoDatos ID ASIG tipoValores .)
    CHAR            reduce using rule 4 (declaracionVariable -> tipoDatos ID ASIG tipoValores .)
    STRING          reduce using rule 4 (declaracionVariable -> tipoDatos ID ASIG tipoValores .)
    BOOL            reduce using rule 4 (declaracionVariable -> tipoDatos ID ASIG tipoValores .)
    FLOAT           reduce using rule 4 (declaracionVariable -> tipoDatos ID ASIG tipoValores .)
    VOID            reduce using rule 4 (declaracionVariable -> tipoDatos ID ASIG tipoValores .)
    ABIRRAY         reduce using rule 4 (declaracionVariable -> tipoDatos ID ASIG tipoValores .)
    RETURN          reduce using rule 4 (declaracionVariable -> tipoDatos ID ASIG tipoValores .)


state 39

    (14) tipoValores -> NUMERO .

    PC              reduce using rule 14 (tipoValores -> NUMERO .)
    C               reduce using rule 14 (tipoValores -> NUMERO .)
    LLAVEC          reduce using rule 14 (tipoValores -> NUMERO .)
    ID              reduce using rule 14 (tipoValores -> NUMERO .)
    ABIF            reduce using rule 14 (tipoValores -> NUMERO .)
    ABIJOR          reduce using rule 14 (tipoValores -> NUMERO .)
    ABIN            reduce using rule 14 (tipoValores -> NUMERO .)
    ABOUT           reduce using rule 14 (tipoValores -> NUMERO .)
    ABIDECLARA      reduce using rule 14 (tipoValores -> NUMERO .)
    INT             reduce using rule 14 (tipoValores -> NUMERO .)
    CHAR            reduce using rule 14 (tipoValores -> NUMERO .)
    STRING          reduce using rule 14 (tipoValores -> NUMERO .)
    BOOL            reduce using rule 14 (tipoValores -> NUMERO .)
    FLOAT           reduce using rule 14 (tipoValores -> NUMERO .)
    VOID            reduce using rule 14 (tipoValores -> NUMERO .)
    ABIRRAY         reduce using rule 14 (tipoValores -> NUMERO .)
    RETURN          reduce using rule 14 (tipoValores -> NUMERO .)
    AGREGA          reduce using rule 14 (tipoValores -> NUMERO .)
    RESTA           reduce using rule 14 (tipoValores -> NUMERO .)
    MULT            reduce using rule 14 (tipoValores -> NUMERO .)
    DIV             reduce using rule 14 (tipoValores -> NUMERO .)
    PARENTC         reduce using rule 14 (tipoValores -> NUMERO .)
    AND             reduce using rule 14 (tipoValores -> NUMERO .)
    OR              reduce using rule 14 (tipoValores -> NUMERO .)


state 40

    (15) tipoValores -> FLOAT_VALOR .

    PC              reduce using rule 15 (tipoValores -> FLOAT_VALOR .)
    C               reduce using rule 15 (tipoValores -> FLOAT_VALOR .)
    LLAVEC          reduce using rule 15 (tipoValores -> FLOAT_VALOR .)
    ID              reduce using rule 15 (tipoValores -> FLOAT_VALOR .)
    ABIF            reduce using rule 15 (tipoValores -> FLOAT_VALOR .)
    ABIJOR          reduce using rule 15 (tipoValores -> FLOAT_VALOR .)
    ABIN            reduce using rule 15 (tipoValores -> FLOAT_VALOR .)
    ABOUT           reduce using rule 15 (tipoValores -> FLOAT_VALOR .)
    ABIDECLARA      reduce using rule 15 (tipoValores -> FLOAT_VALOR .)
    INT             reduce using rule 15 (tipoValores -> FLOAT_VALOR .)
    CHAR            reduce using rule 15 (tipoValores -> FLOAT_VALOR .)
    STRING          reduce using rule 15 (tipoValores -> FLOAT_VALOR .)
    BOOL            reduce using rule 15 (tipoValores -> FLOAT_VALOR .)
    FLOAT           reduce using rule 15 (tipoValores -> FLOAT_VALOR .)
    VOID            reduce using rule 15 (tipoValores -> FLOAT_VALOR .)
    ABIRRAY         reduce using rule 15 (tipoValores -> FLOAT_VALOR .)
    RETURN          reduce using rule 15 (tipoValores -> FLOAT_VALOR .)
    AGREGA          reduce using rule 15 (tipoValores -> FLOAT_VALOR .)
    RESTA           reduce using rule 15 (tipoValores -> FLOAT_VALOR .)
    MULT            reduce using rule 15 (tipoValores -> FLOAT_VALOR .)
    DIV             reduce using rule 15 (tipoValores -> FLOAT_VALOR .)
    PARENTC         reduce using rule 15 (tipoValores -> FLOAT_VALOR .)
    AND             reduce using rule 15 (tipoValores -> FLOAT_VALOR .)
    OR              reduce using rule 15 (tipoValores -> FLOAT_VALOR .)


state 41

    (16) tipoValores -> CHAR_VALOR .

    PC              reduce using rule 16 (tipoValores -> CHAR_VALOR .)
    C               reduce using rule 16 (tipoValores -> CHAR_VALOR .)
    LLAVEC          reduce using rule 16 (tipoValores -> CHAR_VALOR .)
    ID              reduce using rule 16 (tipoValores -> CHAR_VALOR .)
    ABIF            reduce using rule 16 (tipoValores -> CHAR_VALOR .)
    ABIJOR          reduce using rule 16 (tipoValores -> CHAR_VALOR .)
    ABIN            reduce using rule 16 (tipoValores -> CHAR_VALOR .)
    ABOUT           reduce using rule 16 (tipoValores -> CHAR_VALOR .)
    ABIDECLARA      reduce using rule 16 (tipoValores -> CHAR_VALOR .)
    INT             reduce using rule 16 (tipoValores -> CHAR_VALOR .)
    CHAR            reduce using rule 16 (tipoValores -> CHAR_VALOR .)
    STRING          reduce using rule 16 (tipoValores -> CHAR_VALOR .)
    BOOL            reduce using rule 16 (tipoValores -> CHAR_VALOR .)
    FLOAT           reduce using rule 16 (tipoValores -> CHAR_VALOR .)
    VOID            reduce using rule 16 (tipoValores -> CHAR_VALOR .)
    ABIRRAY         reduce using rule 16 (tipoValores -> CHAR_VALOR .)
    RETURN          reduce using rule 16 (tipoValores -> CHAR_VALOR .)
    AGREGA          reduce using rule 16 (tipoValores -> CHAR_VALOR .)
    RESTA           reduce using rule 16 (tipoValores -> CHAR_VALOR .)
    MULT            reduce using rule 16 (tipoValores -> CHAR_VALOR .)
    DIV             reduce using rule 16 (tipoValores -> CHAR_VALOR .)
    PARENTC         reduce using rule 16 (tipoValores -> CHAR_VALOR .)
    AND             reduce using rule 16 (tipoValores -> CHAR_VALOR .)
    OR              reduce using rule 16 (tipoValores -> CHAR_VALOR .)


state 42

    (17) tipoValores -> STRING_VALOR .

    PC              reduce using rule 17 (tipoValores -> STRING_VALOR .)
    C               reduce using rule 17 (tipoValores -> STRING_VALOR .)
    LLAVEC          reduce using rule 17 (tipoValores -> STRING_VALOR .)
    ID              reduce using rule 17 (tipoValores -> STRING_VALOR .)
    ABIF            reduce using rule 17 (tipoValores -> STRING_VALOR .)
    ABIJOR          reduce using rule 17 (tipoValores -> STRING_VALOR .)
    ABIN            reduce using rule 17 (tipoValores -> STRING_VALOR .)
    ABOUT           reduce using rule 17 (tipoValores -> STRING_VALOR .)
    ABIDECLARA      reduce using rule 17 (tipoValores -> STRING_VALOR .)
    INT             reduce using rule 17 (tipoValores -> STRING_VALOR .)
    CHAR            reduce using rule 17 (tipoValores -> STRING_VALOR .)
    STRING          reduce using rule 17 (tipoValores -> STRING_VALOR .)
    BOOL            reduce using rule 17 (tipoValores -> STRING_VALOR .)
    FLOAT           reduce using rule 17 (tipoValores -> STRING_VALOR .)
    VOID            reduce using rule 17 (tipoValores -> STRING_VALOR .)
    ABIRRAY         reduce using rule 17 (tipoValores -> STRING_VALOR .)
    RETURN          reduce using rule 17 (tipoValores -> STRING_VALOR .)
    AGREGA          reduce using rule 17 (tipoValores -> STRING_VALOR .)
    RESTA           reduce using rule 17 (tipoValores -> STRING_VALOR .)
    MULT            reduce using rule 17 (tipoValores -> STRING_VALOR .)
    DIV             reduce using rule 17 (tipoValores -> STRING_VALOR .)
    PARENTC         reduce using rule 17 (tipoValores -> STRING_VALOR .)
    AND             reduce using rule 17 (tipoValores -> STRING_VALOR .)
    OR              reduce using rule 17 (tipoValores -> STRING_VALOR .)


state 43

    (18) tipoValores -> TRUE .

    PC              reduce using rule 18 (tipoValores -> TRUE .)
    C               reduce using rule 18 (tipoValores -> TRUE .)
    LLAVEC          reduce using rule 18 (tipoValores -> TRUE .)
    ID              reduce using rule 18 (tipoValores -> TRUE .)
    ABIF            reduce using rule 18 (tipoValores -> TRUE .)
    ABIJOR          reduce using rule 18 (tipoValores -> TRUE .)
    ABIN            reduce using rule 18 (tipoValores -> TRUE .)
    ABOUT           reduce using rule 18 (tipoValores -> TRUE .)
    ABIDECLARA      reduce using rule 18 (tipoValores -> TRUE .)
    INT             reduce using rule 18 (tipoValores -> TRUE .)
    CHAR            reduce using rule 18 (tipoValores -> TRUE .)
    STRING          reduce using rule 18 (tipoValores -> TRUE .)
    BOOL            reduce using rule 18 (tipoValores -> TRUE .)
    FLOAT           reduce using rule 18 (tipoValores -> TRUE .)
    VOID            reduce using rule 18 (tipoValores -> TRUE .)
    ABIRRAY         reduce using rule 18 (tipoValores -> TRUE .)
    RETURN          reduce using rule 18 (tipoValores -> TRUE .)
    AGREGA          reduce using rule 18 (tipoValores -> TRUE .)
    RESTA           reduce using rule 18 (tipoValores -> TRUE .)
    MULT            reduce using rule 18 (tipoValores -> TRUE .)
    DIV             reduce using rule 18 (tipoValores -> TRUE .)
    PARENTC         reduce using rule 18 (tipoValores -> TRUE .)
    AND             reduce using rule 18 (tipoValores -> TRUE .)
    OR              reduce using rule 18 (tipoValores -> TRUE .)


state 44

    (19) tipoValores -> FALSE .

    PC              reduce using rule 19 (tipoValores -> FALSE .)
    C               reduce using rule 19 (tipoValores -> FALSE .)
    LLAVEC          reduce using rule 19 (tipoValores -> FALSE .)
    ID              reduce using rule 19 (tipoValores -> FALSE .)
    ABIF            reduce using rule 19 (tipoValores -> FALSE .)
    ABIJOR          reduce using rule 19 (tipoValores -> FALSE .)
    ABIN            reduce using rule 19 (tipoValores -> FALSE .)
    ABOUT           reduce using rule 19 (tipoValores -> FALSE .)
    ABIDECLARA      reduce using rule 19 (tipoValores -> FALSE .)
    INT             reduce using rule 19 (tipoValores -> FALSE .)
    CHAR            reduce using rule 19 (tipoValores -> FALSE .)
    STRING          reduce using rule 19 (tipoValores -> FALSE .)
    BOOL            reduce using rule 19 (tipoValores -> FALSE .)
    FLOAT           reduce using rule 19 (tipoValores -> FALSE .)
    VOID            reduce using rule 19 (tipoValores -> FALSE .)
    ABIRRAY         reduce using rule 19 (tipoValores -> FALSE .)
    RETURN          reduce using rule 19 (tipoValores -> FALSE .)
    AGREGA          reduce using rule 19 (tipoValores -> FALSE .)
    RESTA           reduce using rule 19 (tipoValores -> FALSE .)
    MULT            reduce using rule 19 (tipoValores -> FALSE .)
    DIV             reduce using rule 19 (tipoValores -> FALSE .)
    PARENTC         reduce using rule 19 (tipoValores -> FALSE .)
    AND             reduce using rule 19 (tipoValores -> FALSE .)
    OR              reduce using rule 19 (tipoValores -> FALSE .)


state 45

    (20) declaracionArreglo -> ABIRRAY tipoDatos ID ASIG . CORA NUMERO CORC
    (21) declaracionArreglo -> ABIRRAY tipoDatos ID ASIG . CORA NUMERO CORC CORA NUMERO CORC

    CORA            shift and go to state 55


state 46

    (30) declaraMain -> ABIMAIN LLAVEA listaInst . LLAVEC

    LLAVEC          shift and go to state 56


state 47

    (107) listaInst -> listaInstrucciones .
    (108) listaInst -> listaInstrucciones . listaInst
    (107) listaInst -> . listaInstrucciones
    (108) listaInst -> . listaInstrucciones listaInst
    (109) listaInst -> . empty
    (106) listaInstrucciones -> . entradaDatos salidaDatos declaraStruct declaracionVariable operacionesBasicas declaracionIf declaracionCiclo
    (112) empty -> .
    (74) entradaDatos -> . ABIN PARENTA ID PARENTC PC entradaDatos
    (75) entradaDatos -> . empty

  ! reduce/reduce conflict for LLAVEC resolved using rule 107 (listaInst -> listaInstrucciones .)
  ! reduce/reduce conflict for RETURN resolved using rule 107 (listaInst -> listaInstrucciones .)
  ! shift/reduce conflict for ABIN resolved as shift
    LLAVEC          reduce using rule 107 (listaInst -> listaInstrucciones .)
    RETURN          reduce using rule 107 (listaInst -> listaInstrucciones .)
    ABOUT           reduce using rule 112 (empty -> .)
    ABIDECLARA      reduce using rule 112 (empty -> .)
    INT             reduce using rule 112 (empty -> .)
    CHAR            reduce using rule 112 (empty -> .)
    STRING          reduce using rule 112 (empty -> .)
    BOOL            reduce using rule 112 (empty -> .)
    FLOAT           reduce using rule 112 (empty -> .)
    VOID            reduce using rule 112 (empty -> .)
    ABIRRAY         reduce using rule 112 (empty -> .)
    C               reduce using rule 112 (empty -> .)
    ID              reduce using rule 112 (empty -> .)
    ABIF            reduce using rule 112 (empty -> .)
    ABIJOR          reduce using rule 112 (empty -> .)
    ABIN            shift and go to state 50

  ! LLAVEC          [ reduce using rule 112 (empty -> .) ]
  ! RETURN          [ reduce using rule 112 (empty -> .) ]
  ! ABIN            [ reduce using rule 112 (empty -> .) ]

    listaInstrucciones             shift and go to state 47
    listaInst                      shift and go to state 57
    empty                          shift and go to state 48
    entradaDatos                   shift and go to state 49

state 48

    (109) listaInst -> empty .
    (75) entradaDatos -> empty .

  ! reduce/reduce conflict for LLAVEC resolved using rule 75 (entradaDatos -> empty .)
  ! reduce/reduce conflict for RETURN resolved using rule 75 (entradaDatos -> empty .)
    ABOUT           reduce using rule 75 (entradaDatos -> empty .)
    ABIDECLARA      reduce using rule 75 (entradaDatos -> empty .)
    INT             reduce using rule 75 (entradaDatos -> empty .)
    CHAR            reduce using rule 75 (entradaDatos -> empty .)
    STRING          reduce using rule 75 (entradaDatos -> empty .)
    BOOL            reduce using rule 75 (entradaDatos -> empty .)
    FLOAT           reduce using rule 75 (entradaDatos -> empty .)
    VOID            reduce using rule 75 (entradaDatos -> empty .)
    ABIRRAY         reduce using rule 75 (entradaDatos -> empty .)
    C               reduce using rule 75 (entradaDatos -> empty .)
    ID              reduce using rule 75 (entradaDatos -> empty .)
    ABIF            reduce using rule 75 (entradaDatos -> empty .)
    ABIJOR          reduce using rule 75 (entradaDatos -> empty .)
    ABIN            reduce using rule 75 (entradaDatos -> empty .)
    LLAVEC          reduce using rule 75 (entradaDatos -> empty .)
    RETURN          reduce using rule 75 (entradaDatos -> empty .)

  ! LLAVEC          [ reduce using rule 109 (listaInst -> empty .) ]
  ! RETURN          [ reduce using rule 109 (listaInst -> empty .) ]


state 49

    (106) listaInstrucciones -> entradaDatos . salidaDatos declaraStruct declaracionVariable operacionesBasicas declaracionIf declaracionCiclo
    (76) salidaDatos -> . ABOUT PARENTA STRING_VALOR PARENTC salidaDatos PC
    (77) salidaDatos -> . ABOUT PARENTA listaSalida PARENTC salidaDatos PC
    (78) salidaDatos -> . ABOUT PARENTA STRING_VALOR C listaSalida PARENTC PC salidaDatos
    (79) salidaDatos -> . empty
    (112) empty -> .

  ! shift/reduce conflict for ABOUT resolved as shift
    ABOUT           shift and go to state 59
    ABIDECLARA      reduce using rule 112 (empty -> .)
    INT             reduce using rule 112 (empty -> .)
    CHAR            reduce using rule 112 (empty -> .)
    STRING          reduce using rule 112 (empty -> .)
    BOOL            reduce using rule 112 (empty -> .)
    FLOAT           reduce using rule 112 (empty -> .)
    VOID            reduce using rule 112 (empty -> .)
    ABIRRAY         reduce using rule 112 (empty -> .)
    C               reduce using rule 112 (empty -> .)
    ID              reduce using rule 112 (empty -> .)
    ABIF            reduce using rule 112 (empty -> .)
    ABIJOR          reduce using rule 112 (empty -> .)
    ABIN            reduce using rule 112 (empty -> .)
    LLAVEC          reduce using rule 112 (empty -> .)
    RETURN          reduce using rule 112 (empty -> .)

  ! ABOUT           [ reduce using rule 112 (empty -> .) ]

    salidaDatos                    shift and go to state 58
    empty                          shift and go to state 60

state 50

    (74) entradaDatos -> ABIN . PARENTA ID PARENTC PC entradaDatos

    PARENTA         shift and go to state 61


state 51

    (27) declaracionParametros -> tipoDatos . ID

    ID              shift and go to state 62


state 52

    (25) declaracionFuncion -> tipoDatos ID PARENTA declaracionParametros . PARENTC LLAVEA listaInst return LLAVEC declaracionFuncion
    (28) declaracionParametros -> declaracionParametros . C declaracionParametros

    PARENTC         shift and go to state 63
    C               shift and go to state 64


state 53

    (29) declaracionParametros -> empty .

    PARENTC         reduce using rule 29 (declaracionParametros -> empty .)
    C               reduce using rule 29 (declaracionParametros -> empty .)


state 54

    (23) declaracionEstructuras -> ABISTRUCT ID LLAVEA declaracionVariable LLAVEC . PC declaracionEstructuras

    PC              shift and go to state 65


state 55

    (20) declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA . NUMERO CORC
    (21) declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA . NUMERO CORC CORA NUMERO CORC

    NUMERO          shift and go to state 66


state 56

    (30) declaraMain -> ABIMAIN LLAVEA listaInst LLAVEC .

    $end            reduce using rule 30 (declaraMain -> ABIMAIN LLAVEA listaInst LLAVEC .)


state 57

    (108) listaInst -> listaInstrucciones listaInst .

    LLAVEC          reduce using rule 108 (listaInst -> listaInstrucciones listaInst .)
    RETURN          reduce using rule 108 (listaInst -> listaInstrucciones listaInst .)


state 58

    (106) listaInstrucciones -> entradaDatos salidaDatos . declaraStruct declaracionVariable operacionesBasicas declaracionIf declaracionCiclo
    (104) declaraStruct -> . ABIDECLARA ID ID PC declaraStruct
    (105) declaraStruct -> . empty
    (112) empty -> .

  ! shift/reduce conflict for ABIDECLARA resolved as shift
    ABIDECLARA      shift and go to state 68
    INT             reduce using rule 112 (empty -> .)
    CHAR            reduce using rule 112 (empty -> .)
    STRING          reduce using rule 112 (empty -> .)
    BOOL            reduce using rule 112 (empty -> .)
    FLOAT           reduce using rule 112 (empty -> .)
    VOID            reduce using rule 112 (empty -> .)
    ABIRRAY         reduce using rule 112 (empty -> .)
    C               reduce using rule 112 (empty -> .)
    ID              reduce using rule 112 (empty -> .)
    ABIF            reduce using rule 112 (empty -> .)
    ABIJOR          reduce using rule 112 (empty -> .)
    ABIN            reduce using rule 112 (empty -> .)
    ABOUT           reduce using rule 112 (empty -> .)
    LLAVEC          reduce using rule 112 (empty -> .)
    RETURN          reduce using rule 112 (empty -> .)

  ! ABIDECLARA      [ reduce using rule 112 (empty -> .) ]

    declaraStruct                  shift and go to state 67
    empty                          shift and go to state 69

state 59

    (76) salidaDatos -> ABOUT . PARENTA STRING_VALOR PARENTC salidaDatos PC
    (77) salidaDatos -> ABOUT . PARENTA listaSalida PARENTC salidaDatos PC
    (78) salidaDatos -> ABOUT . PARENTA STRING_VALOR C listaSalida PARENTC PC salidaDatos

    PARENTA         shift and go to state 70


state 60

    (79) salidaDatos -> empty .

    ABIDECLARA      reduce using rule 79 (salidaDatos -> empty .)
    INT             reduce using rule 79 (salidaDatos -> empty .)
    CHAR            reduce using rule 79 (salidaDatos -> empty .)
    STRING          reduce using rule 79 (salidaDatos -> empty .)
    BOOL            reduce using rule 79 (salidaDatos -> empty .)
    FLOAT           reduce using rule 79 (salidaDatos -> empty .)
    VOID            reduce using rule 79 (salidaDatos -> empty .)
    ABIRRAY         reduce using rule 79 (salidaDatos -> empty .)
    C               reduce using rule 79 (salidaDatos -> empty .)
    ID              reduce using rule 79 (salidaDatos -> empty .)
    ABIF            reduce using rule 79 (salidaDatos -> empty .)
    ABIJOR          reduce using rule 79 (salidaDatos -> empty .)
    ABIN            reduce using rule 79 (salidaDatos -> empty .)
    ABOUT           reduce using rule 79 (salidaDatos -> empty .)
    LLAVEC          reduce using rule 79 (salidaDatos -> empty .)
    RETURN          reduce using rule 79 (salidaDatos -> empty .)
    PC              reduce using rule 79 (salidaDatos -> empty .)


state 61

    (74) entradaDatos -> ABIN PARENTA . ID PARENTC PC entradaDatos

    ID              shift and go to state 71


state 62

    (27) declaracionParametros -> tipoDatos ID .

    PARENTC         reduce using rule 27 (declaracionParametros -> tipoDatos ID .)
    C               reduce using rule 27 (declaracionParametros -> tipoDatos ID .)


state 63

    (25) declaracionFuncion -> tipoDatos ID PARENTA declaracionParametros PARENTC . LLAVEA listaInst return LLAVEC declaracionFuncion

    LLAVEA          shift and go to state 72


state 64

    (28) declaracionParametros -> declaracionParametros C . declaracionParametros
    (27) declaracionParametros -> . tipoDatos ID
    (28) declaracionParametros -> . declaracionParametros C declaracionParametros
    (29) declaracionParametros -> . empty
    (8) tipoDatos -> . INT
    (9) tipoDatos -> . CHAR
    (10) tipoDatos -> . STRING
    (11) tipoDatos -> . BOOL
    (12) tipoDatos -> . FLOAT
    (13) tipoDatos -> . VOID
    (112) empty -> .

    INT             shift and go to state 12
    CHAR            shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15
    FLOAT           shift and go to state 16
    VOID            shift and go to state 17
    C               reduce using rule 112 (empty -> .)
    PARENTC         reduce using rule 112 (empty -> .)

    declaracionParametros          shift and go to state 73
    tipoDatos                      shift and go to state 51
    empty                          shift and go to state 53

state 65

    (23) declaracionEstructuras -> ABISTRUCT ID LLAVEA declaracionVariable LLAVEC PC . declaracionEstructuras
    (23) declaracionEstructuras -> . ABISTRUCT ID LLAVEA declaracionVariable LLAVEC PC declaracionEstructuras
    (24) declaracionEstructuras -> . empty
    (112) empty -> .

    ABISTRUCT       shift and go to state 6
    INT             reduce using rule 112 (empty -> .)
    CHAR            reduce using rule 112 (empty -> .)
    STRING          reduce using rule 112 (empty -> .)
    BOOL            reduce using rule 112 (empty -> .)
    FLOAT           reduce using rule 112 (empty -> .)
    VOID            reduce using rule 112 (empty -> .)
    ABIMAIN         reduce using rule 112 (empty -> .)

    declaracionEstructuras         shift and go to state 74
    empty                          shift and go to state 7

state 66

    (20) declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO . CORC
    (21) declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO . CORC CORA NUMERO CORC

    CORC            shift and go to state 75


state 67

    (106) listaInstrucciones -> entradaDatos salidaDatos declaraStruct . declaracionVariable operacionesBasicas declaracionIf declaracionCiclo
    (4) declaracionVariable -> . tipoDatos ID ASIG tipoValores
    (5) declaracionVariable -> . declaracionArreglo
    (6) declaracionVariable -> . declaracionVariable C declaracionVariable
    (7) declaracionVariable -> . empty
    (8) tipoDatos -> . INT
    (9) tipoDatos -> . CHAR
    (10) tipoDatos -> . STRING
    (11) tipoDatos -> . BOOL
    (12) tipoDatos -> . FLOAT
    (13) tipoDatos -> . VOID
    (20) declaracionArreglo -> . ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC
    (21) declaracionArreglo -> . ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC CORA NUMERO CORC
    (22) declaracionArreglo -> . ABIRRAY tipoDatos ID
    (112) empty -> .

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for ABIRRAY resolved as shift
    INT             shift and go to state 12
    CHAR            shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15
    FLOAT           shift and go to state 16
    VOID            shift and go to state 17
    ABIRRAY         shift and go to state 18
    C               reduce using rule 112 (empty -> .)
    ID              reduce using rule 112 (empty -> .)
    ABIF            reduce using rule 112 (empty -> .)
    ABIJOR          reduce using rule 112 (empty -> .)
    ABIN            reduce using rule 112 (empty -> .)
    ABOUT           reduce using rule 112 (empty -> .)
    ABIDECLARA      reduce using rule 112 (empty -> .)
    LLAVEC          reduce using rule 112 (empty -> .)
    RETURN          reduce using rule 112 (empty -> .)

  ! INT             [ reduce using rule 112 (empty -> .) ]
  ! CHAR            [ reduce using rule 112 (empty -> .) ]
  ! STRING          [ reduce using rule 112 (empty -> .) ]
  ! BOOL            [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]
  ! VOID            [ reduce using rule 112 (empty -> .) ]
  ! ABIRRAY         [ reduce using rule 112 (empty -> .) ]

    declaracionVariable            shift and go to state 76
    tipoDatos                      shift and go to state 9
    declaracionArreglo             shift and go to state 10
    empty                          shift and go to state 11

state 68

    (104) declaraStruct -> ABIDECLARA . ID ID PC declaraStruct

    ID              shift and go to state 77


state 69

    (105) declaraStruct -> empty .

    INT             reduce using rule 105 (declaraStruct -> empty .)
    CHAR            reduce using rule 105 (declaraStruct -> empty .)
    STRING          reduce using rule 105 (declaraStruct -> empty .)
    BOOL            reduce using rule 105 (declaraStruct -> empty .)
    FLOAT           reduce using rule 105 (declaraStruct -> empty .)
    VOID            reduce using rule 105 (declaraStruct -> empty .)
    ABIRRAY         reduce using rule 105 (declaraStruct -> empty .)
    C               reduce using rule 105 (declaraStruct -> empty .)
    ID              reduce using rule 105 (declaraStruct -> empty .)
    ABIF            reduce using rule 105 (declaraStruct -> empty .)
    ABIJOR          reduce using rule 105 (declaraStruct -> empty .)
    ABIN            reduce using rule 105 (declaraStruct -> empty .)
    ABOUT           reduce using rule 105 (declaraStruct -> empty .)
    ABIDECLARA      reduce using rule 105 (declaraStruct -> empty .)
    LLAVEC          reduce using rule 105 (declaraStruct -> empty .)
    RETURN          reduce using rule 105 (declaraStruct -> empty .)


state 70

    (76) salidaDatos -> ABOUT PARENTA . STRING_VALOR PARENTC salidaDatos PC
    (77) salidaDatos -> ABOUT PARENTA . listaSalida PARENTC salidaDatos PC
    (78) salidaDatos -> ABOUT PARENTA . STRING_VALOR C listaSalida PARENTC PC salidaDatos
    (80) listaSalida -> . ID C listaSalida
    (81) listaSalida -> . ID

    STRING_VALOR    shift and go to state 78
    ID              shift and go to state 80

    listaSalida                    shift and go to state 79

state 71

    (74) entradaDatos -> ABIN PARENTA ID . PARENTC PC entradaDatos

    PARENTC         shift and go to state 81


state 72

    (25) declaracionFuncion -> tipoDatos ID PARENTA declaracionParametros PARENTC LLAVEA . listaInst return LLAVEC declaracionFuncion
    (107) listaInst -> . listaInstrucciones
    (108) listaInst -> . listaInstrucciones listaInst
    (109) listaInst -> . empty
    (106) listaInstrucciones -> . entradaDatos salidaDatos declaraStruct declaracionVariable operacionesBasicas declaracionIf declaracionCiclo
    (112) empty -> .
    (74) entradaDatos -> . ABIN PARENTA ID PARENTC PC entradaDatos
    (75) entradaDatos -> . empty

  ! shift/reduce conflict for ABIN resolved as shift
    RETURN          reduce using rule 112 (empty -> .)
    ABOUT           reduce using rule 112 (empty -> .)
    ABIDECLARA      reduce using rule 112 (empty -> .)
    INT             reduce using rule 112 (empty -> .)
    CHAR            reduce using rule 112 (empty -> .)
    STRING          reduce using rule 112 (empty -> .)
    BOOL            reduce using rule 112 (empty -> .)
    FLOAT           reduce using rule 112 (empty -> .)
    VOID            reduce using rule 112 (empty -> .)
    ABIRRAY         reduce using rule 112 (empty -> .)
    C               reduce using rule 112 (empty -> .)
    ID              reduce using rule 112 (empty -> .)
    ABIF            reduce using rule 112 (empty -> .)
    ABIJOR          reduce using rule 112 (empty -> .)
    ABIN            shift and go to state 50

  ! ABIN            [ reduce using rule 112 (empty -> .) ]

    listaInst                      shift and go to state 82
    listaInstrucciones             shift and go to state 47
    empty                          shift and go to state 48
    entradaDatos                   shift and go to state 49

state 73

    (28) declaracionParametros -> declaracionParametros C declaracionParametros .
    (28) declaracionParametros -> declaracionParametros . C declaracionParametros

  ! shift/reduce conflict for C resolved as shift
    PARENTC         reduce using rule 28 (declaracionParametros -> declaracionParametros C declaracionParametros .)
    C               shift and go to state 64

  ! C               [ reduce using rule 28 (declaracionParametros -> declaracionParametros C declaracionParametros .) ]


state 74

    (23) declaracionEstructuras -> ABISTRUCT ID LLAVEA declaracionVariable LLAVEC PC declaracionEstructuras .

    INT             reduce using rule 23 (declaracionEstructuras -> ABISTRUCT ID LLAVEA declaracionVariable LLAVEC PC declaracionEstructuras .)
    CHAR            reduce using rule 23 (declaracionEstructuras -> ABISTRUCT ID LLAVEA declaracionVariable LLAVEC PC declaracionEstructuras .)
    STRING          reduce using rule 23 (declaracionEstructuras -> ABISTRUCT ID LLAVEA declaracionVariable LLAVEC PC declaracionEstructuras .)
    BOOL            reduce using rule 23 (declaracionEstructuras -> ABISTRUCT ID LLAVEA declaracionVariable LLAVEC PC declaracionEstructuras .)
    FLOAT           reduce using rule 23 (declaracionEstructuras -> ABISTRUCT ID LLAVEA declaracionVariable LLAVEC PC declaracionEstructuras .)
    VOID            reduce using rule 23 (declaracionEstructuras -> ABISTRUCT ID LLAVEA declaracionVariable LLAVEC PC declaracionEstructuras .)
    ABIMAIN         reduce using rule 23 (declaracionEstructuras -> ABISTRUCT ID LLAVEA declaracionVariable LLAVEC PC declaracionEstructuras .)


state 75

    (20) declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC .
    (21) declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC . CORA NUMERO CORC

    PC              reduce using rule 20 (declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC .)
    C               reduce using rule 20 (declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC .)
    LLAVEC          reduce using rule 20 (declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC .)
    ID              reduce using rule 20 (declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC .)
    ABIF            reduce using rule 20 (declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC .)
    ABIJOR          reduce using rule 20 (declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC .)
    ABIN            reduce using rule 20 (declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC .)
    ABOUT           reduce using rule 20 (declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC .)
    ABIDECLARA      reduce using rule 20 (declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC .)
    INT             reduce using rule 20 (declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC .)
    CHAR            reduce using rule 20 (declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC .)
    STRING          reduce using rule 20 (declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC .)
    BOOL            reduce using rule 20 (declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC .)
    FLOAT           reduce using rule 20 (declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC .)
    VOID            reduce using rule 20 (declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC .)
    ABIRRAY         reduce using rule 20 (declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC .)
    RETURN          reduce using rule 20 (declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC .)
    CORA            shift and go to state 83


state 76

    (106) listaInstrucciones -> entradaDatos salidaDatos declaraStruct declaracionVariable . operacionesBasicas declaracionIf declaracionCiclo
    (6) declaracionVariable -> declaracionVariable . C declaracionVariable
    (82) operacionesBasicas -> . ID ASIG ID operadoresBasicos ID PC operacionesBasicas
    (83) operacionesBasicas -> . ID ASIG tipoValores operadoresBasicos ID PC operacionesBasicas
    (84) operacionesBasicas -> . ID ASIG tipoValores operadoresBasicos tipoValores PC operacionesBasicas
    (85) operacionesBasicas -> . ID ASIG ID operadoresBasicos tipoValores PC operacionesBasicas
    (86) operacionesBasicas -> . ID ASIG tipoValores PC operacionesBasicas
    (87) operacionesBasicas -> . ID ASIG ID P ID PC operacionesBasicas
    (88) operacionesBasicas -> . ID ASIG ID PC operacionesBasicas
    (89) operacionesBasicas -> . ID P ID PC operacionesBasicas
    (90) operacionesBasicas -> . ID ASIG ID CORA NUMERO CORC PC operacionesBasicas
    (91) operacionesBasicas -> . ID CORA NUMERO CORC ASIG ID CORA NUMERO CORC PC operacionesBasicas
    (92) operacionesBasicas -> . ID CORA NUMERO CORC ASIG tipoValores PC operacionesBasicas
    (93) operacionesBasicas -> . ID PARENTA listaValores PARENTC PC operacionesBasicas
    (94) operacionesBasicas -> . ID ASIG ID PARENTA listaValores PARENTC PC operacionesBasicas
    (95) operacionesBasicas -> . empty
    (112) empty -> .

  ! shift/reduce conflict for C resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    C               shift and go to state 24
    ID              shift and go to state 85
    ABIF            reduce using rule 112 (empty -> .)
    ABIJOR          reduce using rule 112 (empty -> .)
    ABIN            reduce using rule 112 (empty -> .)
    ABOUT           reduce using rule 112 (empty -> .)
    ABIDECLARA      reduce using rule 112 (empty -> .)
    INT             reduce using rule 112 (empty -> .)
    CHAR            reduce using rule 112 (empty -> .)
    STRING          reduce using rule 112 (empty -> .)
    BOOL            reduce using rule 112 (empty -> .)
    FLOAT           reduce using rule 112 (empty -> .)
    VOID            reduce using rule 112 (empty -> .)
    ABIRRAY         reduce using rule 112 (empty -> .)
    LLAVEC          reduce using rule 112 (empty -> .)
    RETURN          reduce using rule 112 (empty -> .)

  ! C               [ reduce using rule 112 (empty -> .) ]
  ! ID              [ reduce using rule 112 (empty -> .) ]

    operacionesBasicas             shift and go to state 84
    empty                          shift and go to state 86

state 77

    (104) declaraStruct -> ABIDECLARA ID . ID PC declaraStruct

    ID              shift and go to state 87


state 78

    (76) salidaDatos -> ABOUT PARENTA STRING_VALOR . PARENTC salidaDatos PC
    (78) salidaDatos -> ABOUT PARENTA STRING_VALOR . C listaSalida PARENTC PC salidaDatos

    PARENTC         shift and go to state 88
    C               shift and go to state 89


state 79

    (77) salidaDatos -> ABOUT PARENTA listaSalida . PARENTC salidaDatos PC

    PARENTC         shift and go to state 90


state 80

    (80) listaSalida -> ID . C listaSalida
    (81) listaSalida -> ID .

    C               shift and go to state 91
    PARENTC         reduce using rule 81 (listaSalida -> ID .)


state 81

    (74) entradaDatos -> ABIN PARENTA ID PARENTC . PC entradaDatos

    PC              shift and go to state 92


state 82

    (25) declaracionFuncion -> tipoDatos ID PARENTA declaracionParametros PARENTC LLAVEA listaInst . return LLAVEC declaracionFuncion
    (110) return -> . RETURN ID PC
    (111) return -> . RETURN PC

    RETURN          shift and go to state 94

    return                         shift and go to state 93

state 83

    (21) declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC CORA . NUMERO CORC

    NUMERO          shift and go to state 95


state 84

    (106) listaInstrucciones -> entradaDatos salidaDatos declaraStruct declaracionVariable operacionesBasicas . declaracionIf declaracionCiclo
    (47) declaracionIf -> . ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionElse declaracionIf
    (48) declaracionIf -> . ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionIf
    (49) declaracionIf -> . empty
    (112) empty -> .

  ! shift/reduce conflict for ABIF resolved as shift
    ABIF            shift and go to state 97
    ABIJOR          reduce using rule 112 (empty -> .)
    ABIN            reduce using rule 112 (empty -> .)
    ABOUT           reduce using rule 112 (empty -> .)
    ABIDECLARA      reduce using rule 112 (empty -> .)
    INT             reduce using rule 112 (empty -> .)
    CHAR            reduce using rule 112 (empty -> .)
    STRING          reduce using rule 112 (empty -> .)
    BOOL            reduce using rule 112 (empty -> .)
    FLOAT           reduce using rule 112 (empty -> .)
    VOID            reduce using rule 112 (empty -> .)
    ABIRRAY         reduce using rule 112 (empty -> .)
    C               reduce using rule 112 (empty -> .)
    ID              reduce using rule 112 (empty -> .)
    LLAVEC          reduce using rule 112 (empty -> .)
    RETURN          reduce using rule 112 (empty -> .)

  ! ABIF            [ reduce using rule 112 (empty -> .) ]

    declaracionIf                  shift and go to state 96
    empty                          shift and go to state 98

state 85

    (82) operacionesBasicas -> ID . ASIG ID operadoresBasicos ID PC operacionesBasicas
    (83) operacionesBasicas -> ID . ASIG tipoValores operadoresBasicos ID PC operacionesBasicas
    (84) operacionesBasicas -> ID . ASIG tipoValores operadoresBasicos tipoValores PC operacionesBasicas
    (85) operacionesBasicas -> ID . ASIG ID operadoresBasicos tipoValores PC operacionesBasicas
    (86) operacionesBasicas -> ID . ASIG tipoValores PC operacionesBasicas
    (87) operacionesBasicas -> ID . ASIG ID P ID PC operacionesBasicas
    (88) operacionesBasicas -> ID . ASIG ID PC operacionesBasicas
    (89) operacionesBasicas -> ID . P ID PC operacionesBasicas
    (90) operacionesBasicas -> ID . ASIG ID CORA NUMERO CORC PC operacionesBasicas
    (91) operacionesBasicas -> ID . CORA NUMERO CORC ASIG ID CORA NUMERO CORC PC operacionesBasicas
    (92) operacionesBasicas -> ID . CORA NUMERO CORC ASIG tipoValores PC operacionesBasicas
    (93) operacionesBasicas -> ID . PARENTA listaValores PARENTC PC operacionesBasicas
    (94) operacionesBasicas -> ID . ASIG ID PARENTA listaValores PARENTC PC operacionesBasicas

    ASIG            shift and go to state 99
    P               shift and go to state 100
    CORA            shift and go to state 101
    PARENTA         shift and go to state 102


state 86

    (95) operacionesBasicas -> empty .

    ABIF            reduce using rule 95 (operacionesBasicas -> empty .)
    ABIJOR          reduce using rule 95 (operacionesBasicas -> empty .)
    ABIN            reduce using rule 95 (operacionesBasicas -> empty .)
    ABOUT           reduce using rule 95 (operacionesBasicas -> empty .)
    ABIDECLARA      reduce using rule 95 (operacionesBasicas -> empty .)
    INT             reduce using rule 95 (operacionesBasicas -> empty .)
    CHAR            reduce using rule 95 (operacionesBasicas -> empty .)
    STRING          reduce using rule 95 (operacionesBasicas -> empty .)
    BOOL            reduce using rule 95 (operacionesBasicas -> empty .)
    FLOAT           reduce using rule 95 (operacionesBasicas -> empty .)
    VOID            reduce using rule 95 (operacionesBasicas -> empty .)
    ABIRRAY         reduce using rule 95 (operacionesBasicas -> empty .)
    C               reduce using rule 95 (operacionesBasicas -> empty .)
    ID              reduce using rule 95 (operacionesBasicas -> empty .)
    LLAVEC          reduce using rule 95 (operacionesBasicas -> empty .)
    RETURN          reduce using rule 95 (operacionesBasicas -> empty .)


state 87

    (104) declaraStruct -> ABIDECLARA ID ID . PC declaraStruct

    PC              shift and go to state 103


state 88

    (76) salidaDatos -> ABOUT PARENTA STRING_VALOR PARENTC . salidaDatos PC
    (76) salidaDatos -> . ABOUT PARENTA STRING_VALOR PARENTC salidaDatos PC
    (77) salidaDatos -> . ABOUT PARENTA listaSalida PARENTC salidaDatos PC
    (78) salidaDatos -> . ABOUT PARENTA STRING_VALOR C listaSalida PARENTC PC salidaDatos
    (79) salidaDatos -> . empty
    (112) empty -> .

    ABOUT           shift and go to state 59
    PC              reduce using rule 112 (empty -> .)

    salidaDatos                    shift and go to state 104
    empty                          shift and go to state 60

state 89

    (78) salidaDatos -> ABOUT PARENTA STRING_VALOR C . listaSalida PARENTC PC salidaDatos
    (80) listaSalida -> . ID C listaSalida
    (81) listaSalida -> . ID

    ID              shift and go to state 80

    listaSalida                    shift and go to state 105

state 90

    (77) salidaDatos -> ABOUT PARENTA listaSalida PARENTC . salidaDatos PC
    (76) salidaDatos -> . ABOUT PARENTA STRING_VALOR PARENTC salidaDatos PC
    (77) salidaDatos -> . ABOUT PARENTA listaSalida PARENTC salidaDatos PC
    (78) salidaDatos -> . ABOUT PARENTA STRING_VALOR C listaSalida PARENTC PC salidaDatos
    (79) salidaDatos -> . empty
    (112) empty -> .

    ABOUT           shift and go to state 59
    PC              reduce using rule 112 (empty -> .)

    salidaDatos                    shift and go to state 106
    empty                          shift and go to state 60

state 91

    (80) listaSalida -> ID C . listaSalida
    (80) listaSalida -> . ID C listaSalida
    (81) listaSalida -> . ID

    ID              shift and go to state 80

    listaSalida                    shift and go to state 107

state 92

    (74) entradaDatos -> ABIN PARENTA ID PARENTC PC . entradaDatos
    (74) entradaDatos -> . ABIN PARENTA ID PARENTC PC entradaDatos
    (75) entradaDatos -> . empty
    (112) empty -> .

  ! shift/reduce conflict for ABIN resolved as shift
    ABIN            shift and go to state 50
    ABOUT           reduce using rule 112 (empty -> .)
    ABIDECLARA      reduce using rule 112 (empty -> .)
    INT             reduce using rule 112 (empty -> .)
    CHAR            reduce using rule 112 (empty -> .)
    STRING          reduce using rule 112 (empty -> .)
    BOOL            reduce using rule 112 (empty -> .)
    FLOAT           reduce using rule 112 (empty -> .)
    VOID            reduce using rule 112 (empty -> .)
    ABIRRAY         reduce using rule 112 (empty -> .)
    C               reduce using rule 112 (empty -> .)
    ID              reduce using rule 112 (empty -> .)
    ABIF            reduce using rule 112 (empty -> .)
    ABIJOR          reduce using rule 112 (empty -> .)
    LLAVEC          reduce using rule 112 (empty -> .)
    RETURN          reduce using rule 112 (empty -> .)

  ! ABIN            [ reduce using rule 112 (empty -> .) ]

    entradaDatos                   shift and go to state 108
    empty                          shift and go to state 109

state 93

    (25) declaracionFuncion -> tipoDatos ID PARENTA declaracionParametros PARENTC LLAVEA listaInst return . LLAVEC declaracionFuncion

    LLAVEC          shift and go to state 110


state 94

    (110) return -> RETURN . ID PC
    (111) return -> RETURN . PC

    ID              shift and go to state 111
    PC              shift and go to state 112


state 95

    (21) declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC CORA NUMERO . CORC

    CORC            shift and go to state 113


state 96

    (106) listaInstrucciones -> entradaDatos salidaDatos declaraStruct declaracionVariable operacionesBasicas declaracionIf . declaracionCiclo
    (31) declaracionCiclo -> . ABIJOR PARENTA inicializacion PC cond PC cambio PARENTC LLAVEA listaInst LLAVEC declaracionCiclo
    (32) declaracionCiclo -> . empty
    (112) empty -> .

  ! shift/reduce conflict for ABIJOR resolved as shift
    ABIJOR          shift and go to state 115
    ABIN            reduce using rule 112 (empty -> .)
    ABOUT           reduce using rule 112 (empty -> .)
    ABIDECLARA      reduce using rule 112 (empty -> .)
    INT             reduce using rule 112 (empty -> .)
    CHAR            reduce using rule 112 (empty -> .)
    STRING          reduce using rule 112 (empty -> .)
    BOOL            reduce using rule 112 (empty -> .)
    FLOAT           reduce using rule 112 (empty -> .)
    VOID            reduce using rule 112 (empty -> .)
    ABIRRAY         reduce using rule 112 (empty -> .)
    C               reduce using rule 112 (empty -> .)
    ID              reduce using rule 112 (empty -> .)
    ABIF            reduce using rule 112 (empty -> .)
    LLAVEC          reduce using rule 112 (empty -> .)
    RETURN          reduce using rule 112 (empty -> .)

  ! ABIJOR          [ reduce using rule 112 (empty -> .) ]

    declaracionCiclo               shift and go to state 114
    empty                          shift and go to state 116

state 97

    (47) declaracionIf -> ABIF . PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionElse declaracionIf
    (48) declaracionIf -> ABIF . PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionIf

    PARENTA         shift and go to state 117


state 98

    (49) declaracionIf -> empty .

    ABIJOR          reduce using rule 49 (declaracionIf -> empty .)
    ABIN            reduce using rule 49 (declaracionIf -> empty .)
    ABOUT           reduce using rule 49 (declaracionIf -> empty .)
    ABIDECLARA      reduce using rule 49 (declaracionIf -> empty .)
    INT             reduce using rule 49 (declaracionIf -> empty .)
    CHAR            reduce using rule 49 (declaracionIf -> empty .)
    STRING          reduce using rule 49 (declaracionIf -> empty .)
    BOOL            reduce using rule 49 (declaracionIf -> empty .)
    FLOAT           reduce using rule 49 (declaracionIf -> empty .)
    VOID            reduce using rule 49 (declaracionIf -> empty .)
    ABIRRAY         reduce using rule 49 (declaracionIf -> empty .)
    C               reduce using rule 49 (declaracionIf -> empty .)
    ID              reduce using rule 49 (declaracionIf -> empty .)
    ABIF            reduce using rule 49 (declaracionIf -> empty .)
    LLAVEC          reduce using rule 49 (declaracionIf -> empty .)
    RETURN          reduce using rule 49 (declaracionIf -> empty .)


state 99

    (82) operacionesBasicas -> ID ASIG . ID operadoresBasicos ID PC operacionesBasicas
    (83) operacionesBasicas -> ID ASIG . tipoValores operadoresBasicos ID PC operacionesBasicas
    (84) operacionesBasicas -> ID ASIG . tipoValores operadoresBasicos tipoValores PC operacionesBasicas
    (85) operacionesBasicas -> ID ASIG . ID operadoresBasicos tipoValores PC operacionesBasicas
    (86) operacionesBasicas -> ID ASIG . tipoValores PC operacionesBasicas
    (87) operacionesBasicas -> ID ASIG . ID P ID PC operacionesBasicas
    (88) operacionesBasicas -> ID ASIG . ID PC operacionesBasicas
    (90) operacionesBasicas -> ID ASIG . ID CORA NUMERO CORC PC operacionesBasicas
    (94) operacionesBasicas -> ID ASIG . ID PARENTA listaValores PARENTC PC operacionesBasicas
    (14) tipoValores -> . NUMERO
    (15) tipoValores -> . FLOAT_VALOR
    (16) tipoValores -> . CHAR_VALOR
    (17) tipoValores -> . STRING_VALOR
    (18) tipoValores -> . TRUE
    (19) tipoValores -> . FALSE

    ID              shift and go to state 118
    NUMERO          shift and go to state 39
    FLOAT_VALOR     shift and go to state 40
    CHAR_VALOR      shift and go to state 41
    STRING_VALOR    shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

    tipoValores                    shift and go to state 119

state 100

    (89) operacionesBasicas -> ID P . ID PC operacionesBasicas

    ID              shift and go to state 120


state 101

    (91) operacionesBasicas -> ID CORA . NUMERO CORC ASIG ID CORA NUMERO CORC PC operacionesBasicas
    (92) operacionesBasicas -> ID CORA . NUMERO CORC ASIG tipoValores PC operacionesBasicas

    NUMERO          shift and go to state 121


state 102

    (93) operacionesBasicas -> ID PARENTA . listaValores PARENTC PC operacionesBasicas
    (96) listaValores -> . tipoValores
    (97) listaValores -> . ID
    (98) listaValores -> . listaValores C listaValores
    (99) listaValores -> . empty
    (14) tipoValores -> . NUMERO
    (15) tipoValores -> . FLOAT_VALOR
    (16) tipoValores -> . CHAR_VALOR
    (17) tipoValores -> . STRING_VALOR
    (18) tipoValores -> . TRUE
    (19) tipoValores -> . FALSE
    (112) empty -> .

    ID              shift and go to state 122
    NUMERO          shift and go to state 39
    FLOAT_VALOR     shift and go to state 40
    CHAR_VALOR      shift and go to state 41
    STRING_VALOR    shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44
    PARENTC         reduce using rule 112 (empty -> .)
    C               reduce using rule 112 (empty -> .)

    listaValores                   shift and go to state 123
    tipoValores                    shift and go to state 124
    empty                          shift and go to state 125

state 103

    (104) declaraStruct -> ABIDECLARA ID ID PC . declaraStruct
    (104) declaraStruct -> . ABIDECLARA ID ID PC declaraStruct
    (105) declaraStruct -> . empty
    (112) empty -> .

  ! shift/reduce conflict for ABIDECLARA resolved as shift
    ABIDECLARA      shift and go to state 68
    INT             reduce using rule 112 (empty -> .)
    CHAR            reduce using rule 112 (empty -> .)
    STRING          reduce using rule 112 (empty -> .)
    BOOL            reduce using rule 112 (empty -> .)
    FLOAT           reduce using rule 112 (empty -> .)
    VOID            reduce using rule 112 (empty -> .)
    ABIRRAY         reduce using rule 112 (empty -> .)
    C               reduce using rule 112 (empty -> .)
    ID              reduce using rule 112 (empty -> .)
    ABIF            reduce using rule 112 (empty -> .)
    ABIJOR          reduce using rule 112 (empty -> .)
    ABIN            reduce using rule 112 (empty -> .)
    ABOUT           reduce using rule 112 (empty -> .)
    LLAVEC          reduce using rule 112 (empty -> .)
    RETURN          reduce using rule 112 (empty -> .)

  ! ABIDECLARA      [ reduce using rule 112 (empty -> .) ]

    declaraStruct                  shift and go to state 126
    empty                          shift and go to state 69

state 104

    (76) salidaDatos -> ABOUT PARENTA STRING_VALOR PARENTC salidaDatos . PC

    PC              shift and go to state 127


state 105

    (78) salidaDatos -> ABOUT PARENTA STRING_VALOR C listaSalida . PARENTC PC salidaDatos

    PARENTC         shift and go to state 128


state 106

    (77) salidaDatos -> ABOUT PARENTA listaSalida PARENTC salidaDatos . PC

    PC              shift and go to state 129


state 107

    (80) listaSalida -> ID C listaSalida .

    PARENTC         reduce using rule 80 (listaSalida -> ID C listaSalida .)


state 108

    (74) entradaDatos -> ABIN PARENTA ID PARENTC PC entradaDatos .

    ABOUT           reduce using rule 74 (entradaDatos -> ABIN PARENTA ID PARENTC PC entradaDatos .)
    ABIDECLARA      reduce using rule 74 (entradaDatos -> ABIN PARENTA ID PARENTC PC entradaDatos .)
    INT             reduce using rule 74 (entradaDatos -> ABIN PARENTA ID PARENTC PC entradaDatos .)
    CHAR            reduce using rule 74 (entradaDatos -> ABIN PARENTA ID PARENTC PC entradaDatos .)
    STRING          reduce using rule 74 (entradaDatos -> ABIN PARENTA ID PARENTC PC entradaDatos .)
    BOOL            reduce using rule 74 (entradaDatos -> ABIN PARENTA ID PARENTC PC entradaDatos .)
    FLOAT           reduce using rule 74 (entradaDatos -> ABIN PARENTA ID PARENTC PC entradaDatos .)
    VOID            reduce using rule 74 (entradaDatos -> ABIN PARENTA ID PARENTC PC entradaDatos .)
    ABIRRAY         reduce using rule 74 (entradaDatos -> ABIN PARENTA ID PARENTC PC entradaDatos .)
    C               reduce using rule 74 (entradaDatos -> ABIN PARENTA ID PARENTC PC entradaDatos .)
    ID              reduce using rule 74 (entradaDatos -> ABIN PARENTA ID PARENTC PC entradaDatos .)
    ABIF            reduce using rule 74 (entradaDatos -> ABIN PARENTA ID PARENTC PC entradaDatos .)
    ABIJOR          reduce using rule 74 (entradaDatos -> ABIN PARENTA ID PARENTC PC entradaDatos .)
    ABIN            reduce using rule 74 (entradaDatos -> ABIN PARENTA ID PARENTC PC entradaDatos .)
    LLAVEC          reduce using rule 74 (entradaDatos -> ABIN PARENTA ID PARENTC PC entradaDatos .)
    RETURN          reduce using rule 74 (entradaDatos -> ABIN PARENTA ID PARENTC PC entradaDatos .)


state 109

    (75) entradaDatos -> empty .

    ABOUT           reduce using rule 75 (entradaDatos -> empty .)
    ABIDECLARA      reduce using rule 75 (entradaDatos -> empty .)
    INT             reduce using rule 75 (entradaDatos -> empty .)
    CHAR            reduce using rule 75 (entradaDatos -> empty .)
    STRING          reduce using rule 75 (entradaDatos -> empty .)
    BOOL            reduce using rule 75 (entradaDatos -> empty .)
    FLOAT           reduce using rule 75 (entradaDatos -> empty .)
    VOID            reduce using rule 75 (entradaDatos -> empty .)
    ABIRRAY         reduce using rule 75 (entradaDatos -> empty .)
    C               reduce using rule 75 (entradaDatos -> empty .)
    ID              reduce using rule 75 (entradaDatos -> empty .)
    ABIF            reduce using rule 75 (entradaDatos -> empty .)
    ABIJOR          reduce using rule 75 (entradaDatos -> empty .)
    ABIN            reduce using rule 75 (entradaDatos -> empty .)
    LLAVEC          reduce using rule 75 (entradaDatos -> empty .)
    RETURN          reduce using rule 75 (entradaDatos -> empty .)


state 110

    (25) declaracionFuncion -> tipoDatos ID PARENTA declaracionParametros PARENTC LLAVEA listaInst return LLAVEC . declaracionFuncion
    (25) declaracionFuncion -> . tipoDatos ID PARENTA declaracionParametros PARENTC LLAVEA listaInst return LLAVEC declaracionFuncion
    (26) declaracionFuncion -> . empty
    (8) tipoDatos -> . INT
    (9) tipoDatos -> . CHAR
    (10) tipoDatos -> . STRING
    (11) tipoDatos -> . BOOL
    (12) tipoDatos -> . FLOAT
    (13) tipoDatos -> . VOID
    (112) empty -> .

    INT             shift and go to state 12
    CHAR            shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15
    FLOAT           shift and go to state 16
    VOID            shift and go to state 17
    ABIMAIN         reduce using rule 112 (empty -> .)

    tipoDatos                      shift and go to state 20
    declaracionFuncion             shift and go to state 130
    empty                          shift and go to state 21

state 111

    (110) return -> RETURN ID . PC

    PC              shift and go to state 131


state 112

    (111) return -> RETURN PC .

    LLAVEC          reduce using rule 111 (return -> RETURN PC .)


state 113

    (21) declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC CORA NUMERO CORC .

    PC              reduce using rule 21 (declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC CORA NUMERO CORC .)
    C               reduce using rule 21 (declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC CORA NUMERO CORC .)
    LLAVEC          reduce using rule 21 (declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC CORA NUMERO CORC .)
    ID              reduce using rule 21 (declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC CORA NUMERO CORC .)
    ABIF            reduce using rule 21 (declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC CORA NUMERO CORC .)
    ABIJOR          reduce using rule 21 (declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC CORA NUMERO CORC .)
    ABIN            reduce using rule 21 (declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC CORA NUMERO CORC .)
    ABOUT           reduce using rule 21 (declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC CORA NUMERO CORC .)
    ABIDECLARA      reduce using rule 21 (declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC CORA NUMERO CORC .)
    INT             reduce using rule 21 (declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC CORA NUMERO CORC .)
    CHAR            reduce using rule 21 (declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC CORA NUMERO CORC .)
    STRING          reduce using rule 21 (declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC CORA NUMERO CORC .)
    BOOL            reduce using rule 21 (declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC CORA NUMERO CORC .)
    FLOAT           reduce using rule 21 (declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC CORA NUMERO CORC .)
    VOID            reduce using rule 21 (declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC CORA NUMERO CORC .)
    ABIRRAY         reduce using rule 21 (declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC CORA NUMERO CORC .)
    RETURN          reduce using rule 21 (declaracionArreglo -> ABIRRAY tipoDatos ID ASIG CORA NUMERO CORC CORA NUMERO CORC .)


state 114

    (106) listaInstrucciones -> entradaDatos salidaDatos declaraStruct declaracionVariable operacionesBasicas declaracionIf declaracionCiclo .

    ABIN            reduce using rule 106 (listaInstrucciones -> entradaDatos salidaDatos declaraStruct declaracionVariable operacionesBasicas declaracionIf declaracionCiclo .)
    ABOUT           reduce using rule 106 (listaInstrucciones -> entradaDatos salidaDatos declaraStruct declaracionVariable operacionesBasicas declaracionIf declaracionCiclo .)
    ABIDECLARA      reduce using rule 106 (listaInstrucciones -> entradaDatos salidaDatos declaraStruct declaracionVariable operacionesBasicas declaracionIf declaracionCiclo .)
    INT             reduce using rule 106 (listaInstrucciones -> entradaDatos salidaDatos declaraStruct declaracionVariable operacionesBasicas declaracionIf declaracionCiclo .)
    CHAR            reduce using rule 106 (listaInstrucciones -> entradaDatos salidaDatos declaraStruct declaracionVariable operacionesBasicas declaracionIf declaracionCiclo .)
    STRING          reduce using rule 106 (listaInstrucciones -> entradaDatos salidaDatos declaraStruct declaracionVariable operacionesBasicas declaracionIf declaracionCiclo .)
    BOOL            reduce using rule 106 (listaInstrucciones -> entradaDatos salidaDatos declaraStruct declaracionVariable operacionesBasicas declaracionIf declaracionCiclo .)
    FLOAT           reduce using rule 106 (listaInstrucciones -> entradaDatos salidaDatos declaraStruct declaracionVariable operacionesBasicas declaracionIf declaracionCiclo .)
    VOID            reduce using rule 106 (listaInstrucciones -> entradaDatos salidaDatos declaraStruct declaracionVariable operacionesBasicas declaracionIf declaracionCiclo .)
    ABIRRAY         reduce using rule 106 (listaInstrucciones -> entradaDatos salidaDatos declaraStruct declaracionVariable operacionesBasicas declaracionIf declaracionCiclo .)
    C               reduce using rule 106 (listaInstrucciones -> entradaDatos salidaDatos declaraStruct declaracionVariable operacionesBasicas declaracionIf declaracionCiclo .)
    ID              reduce using rule 106 (listaInstrucciones -> entradaDatos salidaDatos declaraStruct declaracionVariable operacionesBasicas declaracionIf declaracionCiclo .)
    ABIF            reduce using rule 106 (listaInstrucciones -> entradaDatos salidaDatos declaraStruct declaracionVariable operacionesBasicas declaracionIf declaracionCiclo .)
    ABIJOR          reduce using rule 106 (listaInstrucciones -> entradaDatos salidaDatos declaraStruct declaracionVariable operacionesBasicas declaracionIf declaracionCiclo .)
    LLAVEC          reduce using rule 106 (listaInstrucciones -> entradaDatos salidaDatos declaraStruct declaracionVariable operacionesBasicas declaracionIf declaracionCiclo .)
    RETURN          reduce using rule 106 (listaInstrucciones -> entradaDatos salidaDatos declaraStruct declaracionVariable operacionesBasicas declaracionIf declaracionCiclo .)


state 115

    (31) declaracionCiclo -> ABIJOR . PARENTA inicializacion PC cond PC cambio PARENTC LLAVEA listaInst LLAVEC declaracionCiclo

    PARENTA         shift and go to state 132


state 116

    (32) declaracionCiclo -> empty .

    ABIN            reduce using rule 32 (declaracionCiclo -> empty .)
    ABOUT           reduce using rule 32 (declaracionCiclo -> empty .)
    ABIDECLARA      reduce using rule 32 (declaracionCiclo -> empty .)
    INT             reduce using rule 32 (declaracionCiclo -> empty .)
    CHAR            reduce using rule 32 (declaracionCiclo -> empty .)
    STRING          reduce using rule 32 (declaracionCiclo -> empty .)
    BOOL            reduce using rule 32 (declaracionCiclo -> empty .)
    FLOAT           reduce using rule 32 (declaracionCiclo -> empty .)
    VOID            reduce using rule 32 (declaracionCiclo -> empty .)
    ABIRRAY         reduce using rule 32 (declaracionCiclo -> empty .)
    C               reduce using rule 32 (declaracionCiclo -> empty .)
    ID              reduce using rule 32 (declaracionCiclo -> empty .)
    ABIF            reduce using rule 32 (declaracionCiclo -> empty .)
    ABIJOR          reduce using rule 32 (declaracionCiclo -> empty .)
    LLAVEC          reduce using rule 32 (declaracionCiclo -> empty .)
    RETURN          reduce using rule 32 (declaracionCiclo -> empty .)


state 117

    (47) declaracionIf -> ABIF PARENTA . condicion PARENTC LLAVEA listaInst LLAVEC declaracionElse declaracionIf
    (48) declaracionIf -> ABIF PARENTA . condicion PARENTC LLAVEA listaInst LLAVEC declaracionIf
    (51) condicion -> . ID operadoresRel ID operadoresLogicos condicion
    (52) condicion -> . ID operadoresRel ID
    (53) condicion -> . ID
    (54) condicion -> . tipoValores
    (55) condicion -> . ID operadoresRel tipoValores operadoresLogicos condicion
    (56) condicion -> . ID operadoresRel tipoValores
    (57) condicion -> . NOT ID operadoresRel ID operadoresLogicos condicion
    (58) condicion -> . NOT ID operadoresRel ID
    (59) condicion -> . NOT ID operadoresRel tipoValores operadoresLogicos condicion
    (60) condicion -> . NOT ID operadoresRel tipoValores
    (61) condicion -> . ID operadoresRel NOT ID operadoresLogicos condicion
    (62) condicion -> . ID operadoresRel NOT ID
    (63) condicion -> . ID operadoresRel NOT tipoValores operadoresLogicos condicion
    (64) condicion -> . ID operadoresRel NOT tipoValores
    (65) condicion -> . NOT PARENTA condicion PARENTC
    (14) tipoValores -> . NUMERO
    (15) tipoValores -> . FLOAT_VALOR
    (16) tipoValores -> . CHAR_VALOR
    (17) tipoValores -> . STRING_VALOR
    (18) tipoValores -> . TRUE
    (19) tipoValores -> . FALSE

    ID              shift and go to state 134
    NOT             shift and go to state 136
    NUMERO          shift and go to state 39
    FLOAT_VALOR     shift and go to state 40
    CHAR_VALOR      shift and go to state 41
    STRING_VALOR    shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

    condicion                      shift and go to state 133
    tipoValores                    shift and go to state 135

state 118

    (82) operacionesBasicas -> ID ASIG ID . operadoresBasicos ID PC operacionesBasicas
    (85) operacionesBasicas -> ID ASIG ID . operadoresBasicos tipoValores PC operacionesBasicas
    (87) operacionesBasicas -> ID ASIG ID . P ID PC operacionesBasicas
    (88) operacionesBasicas -> ID ASIG ID . PC operacionesBasicas
    (90) operacionesBasicas -> ID ASIG ID . CORA NUMERO CORC PC operacionesBasicas
    (94) operacionesBasicas -> ID ASIG ID . PARENTA listaValores PARENTC PC operacionesBasicas
    (100) operadoresBasicos -> . AGREGA
    (101) operadoresBasicos -> . RESTA
    (102) operadoresBasicos -> . MULT
    (103) operadoresBasicos -> . DIV

    P               shift and go to state 139
    PC              shift and go to state 138
    CORA            shift and go to state 140
    PARENTA         shift and go to state 141
    AGREGA          shift and go to state 142
    RESTA           shift and go to state 143
    MULT            shift and go to state 144
    DIV             shift and go to state 145

    operadoresBasicos              shift and go to state 137

state 119

    (83) operacionesBasicas -> ID ASIG tipoValores . operadoresBasicos ID PC operacionesBasicas
    (84) operacionesBasicas -> ID ASIG tipoValores . operadoresBasicos tipoValores PC operacionesBasicas
    (86) operacionesBasicas -> ID ASIG tipoValores . PC operacionesBasicas
    (100) operadoresBasicos -> . AGREGA
    (101) operadoresBasicos -> . RESTA
    (102) operadoresBasicos -> . MULT
    (103) operadoresBasicos -> . DIV

    PC              shift and go to state 147
    AGREGA          shift and go to state 142
    RESTA           shift and go to state 143
    MULT            shift and go to state 144
    DIV             shift and go to state 145

    operadoresBasicos              shift and go to state 146

state 120

    (89) operacionesBasicas -> ID P ID . PC operacionesBasicas

    PC              shift and go to state 148


state 121

    (91) operacionesBasicas -> ID CORA NUMERO . CORC ASIG ID CORA NUMERO CORC PC operacionesBasicas
    (92) operacionesBasicas -> ID CORA NUMERO . CORC ASIG tipoValores PC operacionesBasicas

    CORC            shift and go to state 149


state 122

    (97) listaValores -> ID .

    PARENTC         reduce using rule 97 (listaValores -> ID .)
    C               reduce using rule 97 (listaValores -> ID .)


state 123

    (93) operacionesBasicas -> ID PARENTA listaValores . PARENTC PC operacionesBasicas
    (98) listaValores -> listaValores . C listaValores

    PARENTC         shift and go to state 150
    C               shift and go to state 151


state 124

    (96) listaValores -> tipoValores .

    PARENTC         reduce using rule 96 (listaValores -> tipoValores .)
    C               reduce using rule 96 (listaValores -> tipoValores .)


state 125

    (99) listaValores -> empty .

    PARENTC         reduce using rule 99 (listaValores -> empty .)
    C               reduce using rule 99 (listaValores -> empty .)


state 126

    (104) declaraStruct -> ABIDECLARA ID ID PC declaraStruct .

    INT             reduce using rule 104 (declaraStruct -> ABIDECLARA ID ID PC declaraStruct .)
    CHAR            reduce using rule 104 (declaraStruct -> ABIDECLARA ID ID PC declaraStruct .)
    STRING          reduce using rule 104 (declaraStruct -> ABIDECLARA ID ID PC declaraStruct .)
    BOOL            reduce using rule 104 (declaraStruct -> ABIDECLARA ID ID PC declaraStruct .)
    FLOAT           reduce using rule 104 (declaraStruct -> ABIDECLARA ID ID PC declaraStruct .)
    VOID            reduce using rule 104 (declaraStruct -> ABIDECLARA ID ID PC declaraStruct .)
    ABIRRAY         reduce using rule 104 (declaraStruct -> ABIDECLARA ID ID PC declaraStruct .)
    C               reduce using rule 104 (declaraStruct -> ABIDECLARA ID ID PC declaraStruct .)
    ID              reduce using rule 104 (declaraStruct -> ABIDECLARA ID ID PC declaraStruct .)
    ABIF            reduce using rule 104 (declaraStruct -> ABIDECLARA ID ID PC declaraStruct .)
    ABIJOR          reduce using rule 104 (declaraStruct -> ABIDECLARA ID ID PC declaraStruct .)
    ABIN            reduce using rule 104 (declaraStruct -> ABIDECLARA ID ID PC declaraStruct .)
    ABOUT           reduce using rule 104 (declaraStruct -> ABIDECLARA ID ID PC declaraStruct .)
    ABIDECLARA      reduce using rule 104 (declaraStruct -> ABIDECLARA ID ID PC declaraStruct .)
    LLAVEC          reduce using rule 104 (declaraStruct -> ABIDECLARA ID ID PC declaraStruct .)
    RETURN          reduce using rule 104 (declaraStruct -> ABIDECLARA ID ID PC declaraStruct .)


state 127

    (76) salidaDatos -> ABOUT PARENTA STRING_VALOR PARENTC salidaDatos PC .

    ABIDECLARA      reduce using rule 76 (salidaDatos -> ABOUT PARENTA STRING_VALOR PARENTC salidaDatos PC .)
    INT             reduce using rule 76 (salidaDatos -> ABOUT PARENTA STRING_VALOR PARENTC salidaDatos PC .)
    CHAR            reduce using rule 76 (salidaDatos -> ABOUT PARENTA STRING_VALOR PARENTC salidaDatos PC .)
    STRING          reduce using rule 76 (salidaDatos -> ABOUT PARENTA STRING_VALOR PARENTC salidaDatos PC .)
    BOOL            reduce using rule 76 (salidaDatos -> ABOUT PARENTA STRING_VALOR PARENTC salidaDatos PC .)
    FLOAT           reduce using rule 76 (salidaDatos -> ABOUT PARENTA STRING_VALOR PARENTC salidaDatos PC .)
    VOID            reduce using rule 76 (salidaDatos -> ABOUT PARENTA STRING_VALOR PARENTC salidaDatos PC .)
    ABIRRAY         reduce using rule 76 (salidaDatos -> ABOUT PARENTA STRING_VALOR PARENTC salidaDatos PC .)
    C               reduce using rule 76 (salidaDatos -> ABOUT PARENTA STRING_VALOR PARENTC salidaDatos PC .)
    ID              reduce using rule 76 (salidaDatos -> ABOUT PARENTA STRING_VALOR PARENTC salidaDatos PC .)
    ABIF            reduce using rule 76 (salidaDatos -> ABOUT PARENTA STRING_VALOR PARENTC salidaDatos PC .)
    ABIJOR          reduce using rule 76 (salidaDatos -> ABOUT PARENTA STRING_VALOR PARENTC salidaDatos PC .)
    ABIN            reduce using rule 76 (salidaDatos -> ABOUT PARENTA STRING_VALOR PARENTC salidaDatos PC .)
    ABOUT           reduce using rule 76 (salidaDatos -> ABOUT PARENTA STRING_VALOR PARENTC salidaDatos PC .)
    LLAVEC          reduce using rule 76 (salidaDatos -> ABOUT PARENTA STRING_VALOR PARENTC salidaDatos PC .)
    RETURN          reduce using rule 76 (salidaDatos -> ABOUT PARENTA STRING_VALOR PARENTC salidaDatos PC .)
    PC              reduce using rule 76 (salidaDatos -> ABOUT PARENTA STRING_VALOR PARENTC salidaDatos PC .)


state 128

    (78) salidaDatos -> ABOUT PARENTA STRING_VALOR C listaSalida PARENTC . PC salidaDatos

    PC              shift and go to state 152


state 129

    (77) salidaDatos -> ABOUT PARENTA listaSalida PARENTC salidaDatos PC .

    ABIDECLARA      reduce using rule 77 (salidaDatos -> ABOUT PARENTA listaSalida PARENTC salidaDatos PC .)
    INT             reduce using rule 77 (salidaDatos -> ABOUT PARENTA listaSalida PARENTC salidaDatos PC .)
    CHAR            reduce using rule 77 (salidaDatos -> ABOUT PARENTA listaSalida PARENTC salidaDatos PC .)
    STRING          reduce using rule 77 (salidaDatos -> ABOUT PARENTA listaSalida PARENTC salidaDatos PC .)
    BOOL            reduce using rule 77 (salidaDatos -> ABOUT PARENTA listaSalida PARENTC salidaDatos PC .)
    FLOAT           reduce using rule 77 (salidaDatos -> ABOUT PARENTA listaSalida PARENTC salidaDatos PC .)
    VOID            reduce using rule 77 (salidaDatos -> ABOUT PARENTA listaSalida PARENTC salidaDatos PC .)
    ABIRRAY         reduce using rule 77 (salidaDatos -> ABOUT PARENTA listaSalida PARENTC salidaDatos PC .)
    C               reduce using rule 77 (salidaDatos -> ABOUT PARENTA listaSalida PARENTC salidaDatos PC .)
    ID              reduce using rule 77 (salidaDatos -> ABOUT PARENTA listaSalida PARENTC salidaDatos PC .)
    ABIF            reduce using rule 77 (salidaDatos -> ABOUT PARENTA listaSalida PARENTC salidaDatos PC .)
    ABIJOR          reduce using rule 77 (salidaDatos -> ABOUT PARENTA listaSalida PARENTC salidaDatos PC .)
    ABIN            reduce using rule 77 (salidaDatos -> ABOUT PARENTA listaSalida PARENTC salidaDatos PC .)
    ABOUT           reduce using rule 77 (salidaDatos -> ABOUT PARENTA listaSalida PARENTC salidaDatos PC .)
    LLAVEC          reduce using rule 77 (salidaDatos -> ABOUT PARENTA listaSalida PARENTC salidaDatos PC .)
    RETURN          reduce using rule 77 (salidaDatos -> ABOUT PARENTA listaSalida PARENTC salidaDatos PC .)
    PC              reduce using rule 77 (salidaDatos -> ABOUT PARENTA listaSalida PARENTC salidaDatos PC .)


state 130

    (25) declaracionFuncion -> tipoDatos ID PARENTA declaracionParametros PARENTC LLAVEA listaInst return LLAVEC declaracionFuncion .

    ABIMAIN         reduce using rule 25 (declaracionFuncion -> tipoDatos ID PARENTA declaracionParametros PARENTC LLAVEA listaInst return LLAVEC declaracionFuncion .)


state 131

    (110) return -> RETURN ID PC .

    LLAVEC          reduce using rule 110 (return -> RETURN ID PC .)


state 132

    (31) declaracionCiclo -> ABIJOR PARENTA . inicializacion PC cond PC cambio PARENTC LLAVEA listaInst LLAVEC declaracionCiclo
    (33) inicializacion -> . INT ID ASIG NUMERO
    (34) inicializacion -> . ID ASIG NUMERO

    INT             shift and go to state 154
    ID              shift and go to state 155

    inicializacion                 shift and go to state 153

state 133

    (47) declaracionIf -> ABIF PARENTA condicion . PARENTC LLAVEA listaInst LLAVEC declaracionElse declaracionIf
    (48) declaracionIf -> ABIF PARENTA condicion . PARENTC LLAVEA listaInst LLAVEC declaracionIf

    PARENTC         shift and go to state 156


state 134

    (51) condicion -> ID . operadoresRel ID operadoresLogicos condicion
    (52) condicion -> ID . operadoresRel ID
    (53) condicion -> ID .
    (55) condicion -> ID . operadoresRel tipoValores operadoresLogicos condicion
    (56) condicion -> ID . operadoresRel tipoValores
    (61) condicion -> ID . operadoresRel NOT ID operadoresLogicos condicion
    (62) condicion -> ID . operadoresRel NOT ID
    (63) condicion -> ID . operadoresRel NOT tipoValores operadoresLogicos condicion
    (64) condicion -> ID . operadoresRel NOT tipoValores
    (68) operadoresRel -> . LT
    (69) operadoresRel -> . LTE
    (70) operadoresRel -> . GT
    (71) operadoresRel -> . GTE
    (72) operadoresRel -> . NE
    (73) operadoresRel -> . COMP

    PARENTC         reduce using rule 53 (condicion -> ID .)
    LT              shift and go to state 158
    LTE             shift and go to state 159
    GT              shift and go to state 160
    GTE             shift and go to state 161
    NE              shift and go to state 162
    COMP            shift and go to state 163

    operadoresRel                  shift and go to state 157

state 135

    (54) condicion -> tipoValores .

    PARENTC         reduce using rule 54 (condicion -> tipoValores .)


state 136

    (57) condicion -> NOT . ID operadoresRel ID operadoresLogicos condicion
    (58) condicion -> NOT . ID operadoresRel ID
    (59) condicion -> NOT . ID operadoresRel tipoValores operadoresLogicos condicion
    (60) condicion -> NOT . ID operadoresRel tipoValores
    (65) condicion -> NOT . PARENTA condicion PARENTC

    ID              shift and go to state 164
    PARENTA         shift and go to state 165


state 137

    (82) operacionesBasicas -> ID ASIG ID operadoresBasicos . ID PC operacionesBasicas
    (85) operacionesBasicas -> ID ASIG ID operadoresBasicos . tipoValores PC operacionesBasicas
    (14) tipoValores -> . NUMERO
    (15) tipoValores -> . FLOAT_VALOR
    (16) tipoValores -> . CHAR_VALOR
    (17) tipoValores -> . STRING_VALOR
    (18) tipoValores -> . TRUE
    (19) tipoValores -> . FALSE

    ID              shift and go to state 166
    NUMERO          shift and go to state 39
    FLOAT_VALOR     shift and go to state 40
    CHAR_VALOR      shift and go to state 41
    STRING_VALOR    shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

    tipoValores                    shift and go to state 167

state 138

    (88) operacionesBasicas -> ID ASIG ID PC . operacionesBasicas
    (82) operacionesBasicas -> . ID ASIG ID operadoresBasicos ID PC operacionesBasicas
    (83) operacionesBasicas -> . ID ASIG tipoValores operadoresBasicos ID PC operacionesBasicas
    (84) operacionesBasicas -> . ID ASIG tipoValores operadoresBasicos tipoValores PC operacionesBasicas
    (85) operacionesBasicas -> . ID ASIG ID operadoresBasicos tipoValores PC operacionesBasicas
    (86) operacionesBasicas -> . ID ASIG tipoValores PC operacionesBasicas
    (87) operacionesBasicas -> . ID ASIG ID P ID PC operacionesBasicas
    (88) operacionesBasicas -> . ID ASIG ID PC operacionesBasicas
    (89) operacionesBasicas -> . ID P ID PC operacionesBasicas
    (90) operacionesBasicas -> . ID ASIG ID CORA NUMERO CORC PC operacionesBasicas
    (91) operacionesBasicas -> . ID CORA NUMERO CORC ASIG ID CORA NUMERO CORC PC operacionesBasicas
    (92) operacionesBasicas -> . ID CORA NUMERO CORC ASIG tipoValores PC operacionesBasicas
    (93) operacionesBasicas -> . ID PARENTA listaValores PARENTC PC operacionesBasicas
    (94) operacionesBasicas -> . ID ASIG ID PARENTA listaValores PARENTC PC operacionesBasicas
    (95) operacionesBasicas -> . empty
    (112) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 85
    ABIF            reduce using rule 112 (empty -> .)
    ABIJOR          reduce using rule 112 (empty -> .)
    ABIN            reduce using rule 112 (empty -> .)
    ABOUT           reduce using rule 112 (empty -> .)
    ABIDECLARA      reduce using rule 112 (empty -> .)
    INT             reduce using rule 112 (empty -> .)
    CHAR            reduce using rule 112 (empty -> .)
    STRING          reduce using rule 112 (empty -> .)
    BOOL            reduce using rule 112 (empty -> .)
    FLOAT           reduce using rule 112 (empty -> .)
    VOID            reduce using rule 112 (empty -> .)
    ABIRRAY         reduce using rule 112 (empty -> .)
    C               reduce using rule 112 (empty -> .)
    LLAVEC          reduce using rule 112 (empty -> .)
    RETURN          reduce using rule 112 (empty -> .)

  ! ID              [ reduce using rule 112 (empty -> .) ]

    operacionesBasicas             shift and go to state 168
    empty                          shift and go to state 86

state 139

    (87) operacionesBasicas -> ID ASIG ID P . ID PC operacionesBasicas

    ID              shift and go to state 169


state 140

    (90) operacionesBasicas -> ID ASIG ID CORA . NUMERO CORC PC operacionesBasicas

    NUMERO          shift and go to state 170


state 141

    (94) operacionesBasicas -> ID ASIG ID PARENTA . listaValores PARENTC PC operacionesBasicas
    (96) listaValores -> . tipoValores
    (97) listaValores -> . ID
    (98) listaValores -> . listaValores C listaValores
    (99) listaValores -> . empty
    (14) tipoValores -> . NUMERO
    (15) tipoValores -> . FLOAT_VALOR
    (16) tipoValores -> . CHAR_VALOR
    (17) tipoValores -> . STRING_VALOR
    (18) tipoValores -> . TRUE
    (19) tipoValores -> . FALSE
    (112) empty -> .

    ID              shift and go to state 122
    NUMERO          shift and go to state 39
    FLOAT_VALOR     shift and go to state 40
    CHAR_VALOR      shift and go to state 41
    STRING_VALOR    shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44
    PARENTC         reduce using rule 112 (empty -> .)
    C               reduce using rule 112 (empty -> .)

    listaValores                   shift and go to state 171
    tipoValores                    shift and go to state 124
    empty                          shift and go to state 125

state 142

    (100) operadoresBasicos -> AGREGA .

    ID              reduce using rule 100 (operadoresBasicos -> AGREGA .)
    NUMERO          reduce using rule 100 (operadoresBasicos -> AGREGA .)
    FLOAT_VALOR     reduce using rule 100 (operadoresBasicos -> AGREGA .)
    CHAR_VALOR      reduce using rule 100 (operadoresBasicos -> AGREGA .)
    STRING_VALOR    reduce using rule 100 (operadoresBasicos -> AGREGA .)
    TRUE            reduce using rule 100 (operadoresBasicos -> AGREGA .)
    FALSE           reduce using rule 100 (operadoresBasicos -> AGREGA .)


state 143

    (101) operadoresBasicos -> RESTA .

    ID              reduce using rule 101 (operadoresBasicos -> RESTA .)
    NUMERO          reduce using rule 101 (operadoresBasicos -> RESTA .)
    FLOAT_VALOR     reduce using rule 101 (operadoresBasicos -> RESTA .)
    CHAR_VALOR      reduce using rule 101 (operadoresBasicos -> RESTA .)
    STRING_VALOR    reduce using rule 101 (operadoresBasicos -> RESTA .)
    TRUE            reduce using rule 101 (operadoresBasicos -> RESTA .)
    FALSE           reduce using rule 101 (operadoresBasicos -> RESTA .)


state 144

    (102) operadoresBasicos -> MULT .

    ID              reduce using rule 102 (operadoresBasicos -> MULT .)
    NUMERO          reduce using rule 102 (operadoresBasicos -> MULT .)
    FLOAT_VALOR     reduce using rule 102 (operadoresBasicos -> MULT .)
    CHAR_VALOR      reduce using rule 102 (operadoresBasicos -> MULT .)
    STRING_VALOR    reduce using rule 102 (operadoresBasicos -> MULT .)
    TRUE            reduce using rule 102 (operadoresBasicos -> MULT .)
    FALSE           reduce using rule 102 (operadoresBasicos -> MULT .)


state 145

    (103) operadoresBasicos -> DIV .

    ID              reduce using rule 103 (operadoresBasicos -> DIV .)
    NUMERO          reduce using rule 103 (operadoresBasicos -> DIV .)
    FLOAT_VALOR     reduce using rule 103 (operadoresBasicos -> DIV .)
    CHAR_VALOR      reduce using rule 103 (operadoresBasicos -> DIV .)
    STRING_VALOR    reduce using rule 103 (operadoresBasicos -> DIV .)
    TRUE            reduce using rule 103 (operadoresBasicos -> DIV .)
    FALSE           reduce using rule 103 (operadoresBasicos -> DIV .)


state 146

    (83) operacionesBasicas -> ID ASIG tipoValores operadoresBasicos . ID PC operacionesBasicas
    (84) operacionesBasicas -> ID ASIG tipoValores operadoresBasicos . tipoValores PC operacionesBasicas
    (14) tipoValores -> . NUMERO
    (15) tipoValores -> . FLOAT_VALOR
    (16) tipoValores -> . CHAR_VALOR
    (17) tipoValores -> . STRING_VALOR
    (18) tipoValores -> . TRUE
    (19) tipoValores -> . FALSE

    ID              shift and go to state 172
    NUMERO          shift and go to state 39
    FLOAT_VALOR     shift and go to state 40
    CHAR_VALOR      shift and go to state 41
    STRING_VALOR    shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

    tipoValores                    shift and go to state 173

state 147

    (86) operacionesBasicas -> ID ASIG tipoValores PC . operacionesBasicas
    (82) operacionesBasicas -> . ID ASIG ID operadoresBasicos ID PC operacionesBasicas
    (83) operacionesBasicas -> . ID ASIG tipoValores operadoresBasicos ID PC operacionesBasicas
    (84) operacionesBasicas -> . ID ASIG tipoValores operadoresBasicos tipoValores PC operacionesBasicas
    (85) operacionesBasicas -> . ID ASIG ID operadoresBasicos tipoValores PC operacionesBasicas
    (86) operacionesBasicas -> . ID ASIG tipoValores PC operacionesBasicas
    (87) operacionesBasicas -> . ID ASIG ID P ID PC operacionesBasicas
    (88) operacionesBasicas -> . ID ASIG ID PC operacionesBasicas
    (89) operacionesBasicas -> . ID P ID PC operacionesBasicas
    (90) operacionesBasicas -> . ID ASIG ID CORA NUMERO CORC PC operacionesBasicas
    (91) operacionesBasicas -> . ID CORA NUMERO CORC ASIG ID CORA NUMERO CORC PC operacionesBasicas
    (92) operacionesBasicas -> . ID CORA NUMERO CORC ASIG tipoValores PC operacionesBasicas
    (93) operacionesBasicas -> . ID PARENTA listaValores PARENTC PC operacionesBasicas
    (94) operacionesBasicas -> . ID ASIG ID PARENTA listaValores PARENTC PC operacionesBasicas
    (95) operacionesBasicas -> . empty
    (112) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 85
    ABIF            reduce using rule 112 (empty -> .)
    ABIJOR          reduce using rule 112 (empty -> .)
    ABIN            reduce using rule 112 (empty -> .)
    ABOUT           reduce using rule 112 (empty -> .)
    ABIDECLARA      reduce using rule 112 (empty -> .)
    INT             reduce using rule 112 (empty -> .)
    CHAR            reduce using rule 112 (empty -> .)
    STRING          reduce using rule 112 (empty -> .)
    BOOL            reduce using rule 112 (empty -> .)
    FLOAT           reduce using rule 112 (empty -> .)
    VOID            reduce using rule 112 (empty -> .)
    ABIRRAY         reduce using rule 112 (empty -> .)
    C               reduce using rule 112 (empty -> .)
    LLAVEC          reduce using rule 112 (empty -> .)
    RETURN          reduce using rule 112 (empty -> .)

  ! ID              [ reduce using rule 112 (empty -> .) ]

    operacionesBasicas             shift and go to state 174
    empty                          shift and go to state 86

state 148

    (89) operacionesBasicas -> ID P ID PC . operacionesBasicas
    (82) operacionesBasicas -> . ID ASIG ID operadoresBasicos ID PC operacionesBasicas
    (83) operacionesBasicas -> . ID ASIG tipoValores operadoresBasicos ID PC operacionesBasicas
    (84) operacionesBasicas -> . ID ASIG tipoValores operadoresBasicos tipoValores PC operacionesBasicas
    (85) operacionesBasicas -> . ID ASIG ID operadoresBasicos tipoValores PC operacionesBasicas
    (86) operacionesBasicas -> . ID ASIG tipoValores PC operacionesBasicas
    (87) operacionesBasicas -> . ID ASIG ID P ID PC operacionesBasicas
    (88) operacionesBasicas -> . ID ASIG ID PC operacionesBasicas
    (89) operacionesBasicas -> . ID P ID PC operacionesBasicas
    (90) operacionesBasicas -> . ID ASIG ID CORA NUMERO CORC PC operacionesBasicas
    (91) operacionesBasicas -> . ID CORA NUMERO CORC ASIG ID CORA NUMERO CORC PC operacionesBasicas
    (92) operacionesBasicas -> . ID CORA NUMERO CORC ASIG tipoValores PC operacionesBasicas
    (93) operacionesBasicas -> . ID PARENTA listaValores PARENTC PC operacionesBasicas
    (94) operacionesBasicas -> . ID ASIG ID PARENTA listaValores PARENTC PC operacionesBasicas
    (95) operacionesBasicas -> . empty
    (112) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 85
    ABIF            reduce using rule 112 (empty -> .)
    ABIJOR          reduce using rule 112 (empty -> .)
    ABIN            reduce using rule 112 (empty -> .)
    ABOUT           reduce using rule 112 (empty -> .)
    ABIDECLARA      reduce using rule 112 (empty -> .)
    INT             reduce using rule 112 (empty -> .)
    CHAR            reduce using rule 112 (empty -> .)
    STRING          reduce using rule 112 (empty -> .)
    BOOL            reduce using rule 112 (empty -> .)
    FLOAT           reduce using rule 112 (empty -> .)
    VOID            reduce using rule 112 (empty -> .)
    ABIRRAY         reduce using rule 112 (empty -> .)
    C               reduce using rule 112 (empty -> .)
    LLAVEC          reduce using rule 112 (empty -> .)
    RETURN          reduce using rule 112 (empty -> .)

  ! ID              [ reduce using rule 112 (empty -> .) ]

    operacionesBasicas             shift and go to state 175
    empty                          shift and go to state 86

state 149

    (91) operacionesBasicas -> ID CORA NUMERO CORC . ASIG ID CORA NUMERO CORC PC operacionesBasicas
    (92) operacionesBasicas -> ID CORA NUMERO CORC . ASIG tipoValores PC operacionesBasicas

    ASIG            shift and go to state 176


state 150

    (93) operacionesBasicas -> ID PARENTA listaValores PARENTC . PC operacionesBasicas

    PC              shift and go to state 177


state 151

    (98) listaValores -> listaValores C . listaValores
    (96) listaValores -> . tipoValores
    (97) listaValores -> . ID
    (98) listaValores -> . listaValores C listaValores
    (99) listaValores -> . empty
    (14) tipoValores -> . NUMERO
    (15) tipoValores -> . FLOAT_VALOR
    (16) tipoValores -> . CHAR_VALOR
    (17) tipoValores -> . STRING_VALOR
    (18) tipoValores -> . TRUE
    (19) tipoValores -> . FALSE
    (112) empty -> .

    ID              shift and go to state 122
    NUMERO          shift and go to state 39
    FLOAT_VALOR     shift and go to state 40
    CHAR_VALOR      shift and go to state 41
    STRING_VALOR    shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44
    C               reduce using rule 112 (empty -> .)
    PARENTC         reduce using rule 112 (empty -> .)

    listaValores                   shift and go to state 178
    tipoValores                    shift and go to state 124
    empty                          shift and go to state 125

state 152

    (78) salidaDatos -> ABOUT PARENTA STRING_VALOR C listaSalida PARENTC PC . salidaDatos
    (76) salidaDatos -> . ABOUT PARENTA STRING_VALOR PARENTC salidaDatos PC
    (77) salidaDatos -> . ABOUT PARENTA listaSalida PARENTC salidaDatos PC
    (78) salidaDatos -> . ABOUT PARENTA STRING_VALOR C listaSalida PARENTC PC salidaDatos
    (79) salidaDatos -> . empty
    (112) empty -> .

  ! shift/reduce conflict for ABOUT resolved as shift
    ABOUT           shift and go to state 59
    ABIDECLARA      reduce using rule 112 (empty -> .)
    INT             reduce using rule 112 (empty -> .)
    CHAR            reduce using rule 112 (empty -> .)
    STRING          reduce using rule 112 (empty -> .)
    BOOL            reduce using rule 112 (empty -> .)
    FLOAT           reduce using rule 112 (empty -> .)
    VOID            reduce using rule 112 (empty -> .)
    ABIRRAY         reduce using rule 112 (empty -> .)
    C               reduce using rule 112 (empty -> .)
    ID              reduce using rule 112 (empty -> .)
    ABIF            reduce using rule 112 (empty -> .)
    ABIJOR          reduce using rule 112 (empty -> .)
    ABIN            reduce using rule 112 (empty -> .)
    LLAVEC          reduce using rule 112 (empty -> .)
    RETURN          reduce using rule 112 (empty -> .)
    PC              reduce using rule 112 (empty -> .)

  ! ABOUT           [ reduce using rule 112 (empty -> .) ]

    salidaDatos                    shift and go to state 179
    empty                          shift and go to state 60

state 153

    (31) declaracionCiclo -> ABIJOR PARENTA inicializacion . PC cond PC cambio PARENTC LLAVEA listaInst LLAVEC declaracionCiclo

    PC              shift and go to state 180


state 154

    (33) inicializacion -> INT . ID ASIG NUMERO

    ID              shift and go to state 181


state 155

    (34) inicializacion -> ID . ASIG NUMERO

    ASIG            shift and go to state 182


state 156

    (47) declaracionIf -> ABIF PARENTA condicion PARENTC . LLAVEA listaInst LLAVEC declaracionElse declaracionIf
    (48) declaracionIf -> ABIF PARENTA condicion PARENTC . LLAVEA listaInst LLAVEC declaracionIf

    LLAVEA          shift and go to state 183


state 157

    (51) condicion -> ID operadoresRel . ID operadoresLogicos condicion
    (52) condicion -> ID operadoresRel . ID
    (55) condicion -> ID operadoresRel . tipoValores operadoresLogicos condicion
    (56) condicion -> ID operadoresRel . tipoValores
    (61) condicion -> ID operadoresRel . NOT ID operadoresLogicos condicion
    (62) condicion -> ID operadoresRel . NOT ID
    (63) condicion -> ID operadoresRel . NOT tipoValores operadoresLogicos condicion
    (64) condicion -> ID operadoresRel . NOT tipoValores
    (14) tipoValores -> . NUMERO
    (15) tipoValores -> . FLOAT_VALOR
    (16) tipoValores -> . CHAR_VALOR
    (17) tipoValores -> . STRING_VALOR
    (18) tipoValores -> . TRUE
    (19) tipoValores -> . FALSE

    ID              shift and go to state 184
    NOT             shift and go to state 186
    NUMERO          shift and go to state 39
    FLOAT_VALOR     shift and go to state 40
    CHAR_VALOR      shift and go to state 41
    STRING_VALOR    shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

    tipoValores                    shift and go to state 185

state 158

    (68) operadoresRel -> LT .

    ID              reduce using rule 68 (operadoresRel -> LT .)
    NOT             reduce using rule 68 (operadoresRel -> LT .)
    NUMERO          reduce using rule 68 (operadoresRel -> LT .)
    FLOAT_VALOR     reduce using rule 68 (operadoresRel -> LT .)
    CHAR_VALOR      reduce using rule 68 (operadoresRel -> LT .)
    STRING_VALOR    reduce using rule 68 (operadoresRel -> LT .)
    TRUE            reduce using rule 68 (operadoresRel -> LT .)
    FALSE           reduce using rule 68 (operadoresRel -> LT .)


state 159

    (69) operadoresRel -> LTE .

    ID              reduce using rule 69 (operadoresRel -> LTE .)
    NOT             reduce using rule 69 (operadoresRel -> LTE .)
    NUMERO          reduce using rule 69 (operadoresRel -> LTE .)
    FLOAT_VALOR     reduce using rule 69 (operadoresRel -> LTE .)
    CHAR_VALOR      reduce using rule 69 (operadoresRel -> LTE .)
    STRING_VALOR    reduce using rule 69 (operadoresRel -> LTE .)
    TRUE            reduce using rule 69 (operadoresRel -> LTE .)
    FALSE           reduce using rule 69 (operadoresRel -> LTE .)


state 160

    (70) operadoresRel -> GT .

    ID              reduce using rule 70 (operadoresRel -> GT .)
    NOT             reduce using rule 70 (operadoresRel -> GT .)
    NUMERO          reduce using rule 70 (operadoresRel -> GT .)
    FLOAT_VALOR     reduce using rule 70 (operadoresRel -> GT .)
    CHAR_VALOR      reduce using rule 70 (operadoresRel -> GT .)
    STRING_VALOR    reduce using rule 70 (operadoresRel -> GT .)
    TRUE            reduce using rule 70 (operadoresRel -> GT .)
    FALSE           reduce using rule 70 (operadoresRel -> GT .)


state 161

    (71) operadoresRel -> GTE .

    ID              reduce using rule 71 (operadoresRel -> GTE .)
    NOT             reduce using rule 71 (operadoresRel -> GTE .)
    NUMERO          reduce using rule 71 (operadoresRel -> GTE .)
    FLOAT_VALOR     reduce using rule 71 (operadoresRel -> GTE .)
    CHAR_VALOR      reduce using rule 71 (operadoresRel -> GTE .)
    STRING_VALOR    reduce using rule 71 (operadoresRel -> GTE .)
    TRUE            reduce using rule 71 (operadoresRel -> GTE .)
    FALSE           reduce using rule 71 (operadoresRel -> GTE .)


state 162

    (72) operadoresRel -> NE .

    ID              reduce using rule 72 (operadoresRel -> NE .)
    NOT             reduce using rule 72 (operadoresRel -> NE .)
    NUMERO          reduce using rule 72 (operadoresRel -> NE .)
    FLOAT_VALOR     reduce using rule 72 (operadoresRel -> NE .)
    CHAR_VALOR      reduce using rule 72 (operadoresRel -> NE .)
    STRING_VALOR    reduce using rule 72 (operadoresRel -> NE .)
    TRUE            reduce using rule 72 (operadoresRel -> NE .)
    FALSE           reduce using rule 72 (operadoresRel -> NE .)


state 163

    (73) operadoresRel -> COMP .

    ID              reduce using rule 73 (operadoresRel -> COMP .)
    NOT             reduce using rule 73 (operadoresRel -> COMP .)
    NUMERO          reduce using rule 73 (operadoresRel -> COMP .)
    FLOAT_VALOR     reduce using rule 73 (operadoresRel -> COMP .)
    CHAR_VALOR      reduce using rule 73 (operadoresRel -> COMP .)
    STRING_VALOR    reduce using rule 73 (operadoresRel -> COMP .)
    TRUE            reduce using rule 73 (operadoresRel -> COMP .)
    FALSE           reduce using rule 73 (operadoresRel -> COMP .)


state 164

    (57) condicion -> NOT ID . operadoresRel ID operadoresLogicos condicion
    (58) condicion -> NOT ID . operadoresRel ID
    (59) condicion -> NOT ID . operadoresRel tipoValores operadoresLogicos condicion
    (60) condicion -> NOT ID . operadoresRel tipoValores
    (68) operadoresRel -> . LT
    (69) operadoresRel -> . LTE
    (70) operadoresRel -> . GT
    (71) operadoresRel -> . GTE
    (72) operadoresRel -> . NE
    (73) operadoresRel -> . COMP

    LT              shift and go to state 158
    LTE             shift and go to state 159
    GT              shift and go to state 160
    GTE             shift and go to state 161
    NE              shift and go to state 162
    COMP            shift and go to state 163

    operadoresRel                  shift and go to state 187

state 165

    (65) condicion -> NOT PARENTA . condicion PARENTC
    (51) condicion -> . ID operadoresRel ID operadoresLogicos condicion
    (52) condicion -> . ID operadoresRel ID
    (53) condicion -> . ID
    (54) condicion -> . tipoValores
    (55) condicion -> . ID operadoresRel tipoValores operadoresLogicos condicion
    (56) condicion -> . ID operadoresRel tipoValores
    (57) condicion -> . NOT ID operadoresRel ID operadoresLogicos condicion
    (58) condicion -> . NOT ID operadoresRel ID
    (59) condicion -> . NOT ID operadoresRel tipoValores operadoresLogicos condicion
    (60) condicion -> . NOT ID operadoresRel tipoValores
    (61) condicion -> . ID operadoresRel NOT ID operadoresLogicos condicion
    (62) condicion -> . ID operadoresRel NOT ID
    (63) condicion -> . ID operadoresRel NOT tipoValores operadoresLogicos condicion
    (64) condicion -> . ID operadoresRel NOT tipoValores
    (65) condicion -> . NOT PARENTA condicion PARENTC
    (14) tipoValores -> . NUMERO
    (15) tipoValores -> . FLOAT_VALOR
    (16) tipoValores -> . CHAR_VALOR
    (17) tipoValores -> . STRING_VALOR
    (18) tipoValores -> . TRUE
    (19) tipoValores -> . FALSE

    ID              shift and go to state 134
    NOT             shift and go to state 136
    NUMERO          shift and go to state 39
    FLOAT_VALOR     shift and go to state 40
    CHAR_VALOR      shift and go to state 41
    STRING_VALOR    shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

    condicion                      shift and go to state 188
    tipoValores                    shift and go to state 135

state 166

    (82) operacionesBasicas -> ID ASIG ID operadoresBasicos ID . PC operacionesBasicas

    PC              shift and go to state 189


state 167

    (85) operacionesBasicas -> ID ASIG ID operadoresBasicos tipoValores . PC operacionesBasicas

    PC              shift and go to state 190


state 168

    (88) operacionesBasicas -> ID ASIG ID PC operacionesBasicas .

    ABIF            reduce using rule 88 (operacionesBasicas -> ID ASIG ID PC operacionesBasicas .)
    ABIJOR          reduce using rule 88 (operacionesBasicas -> ID ASIG ID PC operacionesBasicas .)
    ABIN            reduce using rule 88 (operacionesBasicas -> ID ASIG ID PC operacionesBasicas .)
    ABOUT           reduce using rule 88 (operacionesBasicas -> ID ASIG ID PC operacionesBasicas .)
    ABIDECLARA      reduce using rule 88 (operacionesBasicas -> ID ASIG ID PC operacionesBasicas .)
    INT             reduce using rule 88 (operacionesBasicas -> ID ASIG ID PC operacionesBasicas .)
    CHAR            reduce using rule 88 (operacionesBasicas -> ID ASIG ID PC operacionesBasicas .)
    STRING          reduce using rule 88 (operacionesBasicas -> ID ASIG ID PC operacionesBasicas .)
    BOOL            reduce using rule 88 (operacionesBasicas -> ID ASIG ID PC operacionesBasicas .)
    FLOAT           reduce using rule 88 (operacionesBasicas -> ID ASIG ID PC operacionesBasicas .)
    VOID            reduce using rule 88 (operacionesBasicas -> ID ASIG ID PC operacionesBasicas .)
    ABIRRAY         reduce using rule 88 (operacionesBasicas -> ID ASIG ID PC operacionesBasicas .)
    C               reduce using rule 88 (operacionesBasicas -> ID ASIG ID PC operacionesBasicas .)
    ID              reduce using rule 88 (operacionesBasicas -> ID ASIG ID PC operacionesBasicas .)
    LLAVEC          reduce using rule 88 (operacionesBasicas -> ID ASIG ID PC operacionesBasicas .)
    RETURN          reduce using rule 88 (operacionesBasicas -> ID ASIG ID PC operacionesBasicas .)


state 169

    (87) operacionesBasicas -> ID ASIG ID P ID . PC operacionesBasicas

    PC              shift and go to state 191


state 170

    (90) operacionesBasicas -> ID ASIG ID CORA NUMERO . CORC PC operacionesBasicas

    CORC            shift and go to state 192


state 171

    (94) operacionesBasicas -> ID ASIG ID PARENTA listaValores . PARENTC PC operacionesBasicas
    (98) listaValores -> listaValores . C listaValores

    PARENTC         shift and go to state 193
    C               shift and go to state 151


state 172

    (83) operacionesBasicas -> ID ASIG tipoValores operadoresBasicos ID . PC operacionesBasicas

    PC              shift and go to state 194


state 173

    (84) operacionesBasicas -> ID ASIG tipoValores operadoresBasicos tipoValores . PC operacionesBasicas

    PC              shift and go to state 195


state 174

    (86) operacionesBasicas -> ID ASIG tipoValores PC operacionesBasicas .

    ABIF            reduce using rule 86 (operacionesBasicas -> ID ASIG tipoValores PC operacionesBasicas .)
    ABIJOR          reduce using rule 86 (operacionesBasicas -> ID ASIG tipoValores PC operacionesBasicas .)
    ABIN            reduce using rule 86 (operacionesBasicas -> ID ASIG tipoValores PC operacionesBasicas .)
    ABOUT           reduce using rule 86 (operacionesBasicas -> ID ASIG tipoValores PC operacionesBasicas .)
    ABIDECLARA      reduce using rule 86 (operacionesBasicas -> ID ASIG tipoValores PC operacionesBasicas .)
    INT             reduce using rule 86 (operacionesBasicas -> ID ASIG tipoValores PC operacionesBasicas .)
    CHAR            reduce using rule 86 (operacionesBasicas -> ID ASIG tipoValores PC operacionesBasicas .)
    STRING          reduce using rule 86 (operacionesBasicas -> ID ASIG tipoValores PC operacionesBasicas .)
    BOOL            reduce using rule 86 (operacionesBasicas -> ID ASIG tipoValores PC operacionesBasicas .)
    FLOAT           reduce using rule 86 (operacionesBasicas -> ID ASIG tipoValores PC operacionesBasicas .)
    VOID            reduce using rule 86 (operacionesBasicas -> ID ASIG tipoValores PC operacionesBasicas .)
    ABIRRAY         reduce using rule 86 (operacionesBasicas -> ID ASIG tipoValores PC operacionesBasicas .)
    C               reduce using rule 86 (operacionesBasicas -> ID ASIG tipoValores PC operacionesBasicas .)
    ID              reduce using rule 86 (operacionesBasicas -> ID ASIG tipoValores PC operacionesBasicas .)
    LLAVEC          reduce using rule 86 (operacionesBasicas -> ID ASIG tipoValores PC operacionesBasicas .)
    RETURN          reduce using rule 86 (operacionesBasicas -> ID ASIG tipoValores PC operacionesBasicas .)


state 175

    (89) operacionesBasicas -> ID P ID PC operacionesBasicas .

    ABIF            reduce using rule 89 (operacionesBasicas -> ID P ID PC operacionesBasicas .)
    ABIJOR          reduce using rule 89 (operacionesBasicas -> ID P ID PC operacionesBasicas .)
    ABIN            reduce using rule 89 (operacionesBasicas -> ID P ID PC operacionesBasicas .)
    ABOUT           reduce using rule 89 (operacionesBasicas -> ID P ID PC operacionesBasicas .)
    ABIDECLARA      reduce using rule 89 (operacionesBasicas -> ID P ID PC operacionesBasicas .)
    INT             reduce using rule 89 (operacionesBasicas -> ID P ID PC operacionesBasicas .)
    CHAR            reduce using rule 89 (operacionesBasicas -> ID P ID PC operacionesBasicas .)
    STRING          reduce using rule 89 (operacionesBasicas -> ID P ID PC operacionesBasicas .)
    BOOL            reduce using rule 89 (operacionesBasicas -> ID P ID PC operacionesBasicas .)
    FLOAT           reduce using rule 89 (operacionesBasicas -> ID P ID PC operacionesBasicas .)
    VOID            reduce using rule 89 (operacionesBasicas -> ID P ID PC operacionesBasicas .)
    ABIRRAY         reduce using rule 89 (operacionesBasicas -> ID P ID PC operacionesBasicas .)
    C               reduce using rule 89 (operacionesBasicas -> ID P ID PC operacionesBasicas .)
    ID              reduce using rule 89 (operacionesBasicas -> ID P ID PC operacionesBasicas .)
    LLAVEC          reduce using rule 89 (operacionesBasicas -> ID P ID PC operacionesBasicas .)
    RETURN          reduce using rule 89 (operacionesBasicas -> ID P ID PC operacionesBasicas .)


state 176

    (91) operacionesBasicas -> ID CORA NUMERO CORC ASIG . ID CORA NUMERO CORC PC operacionesBasicas
    (92) operacionesBasicas -> ID CORA NUMERO CORC ASIG . tipoValores PC operacionesBasicas
    (14) tipoValores -> . NUMERO
    (15) tipoValores -> . FLOAT_VALOR
    (16) tipoValores -> . CHAR_VALOR
    (17) tipoValores -> . STRING_VALOR
    (18) tipoValores -> . TRUE
    (19) tipoValores -> . FALSE

    ID              shift and go to state 196
    NUMERO          shift and go to state 39
    FLOAT_VALOR     shift and go to state 40
    CHAR_VALOR      shift and go to state 41
    STRING_VALOR    shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

    tipoValores                    shift and go to state 197

state 177

    (93) operacionesBasicas -> ID PARENTA listaValores PARENTC PC . operacionesBasicas
    (82) operacionesBasicas -> . ID ASIG ID operadoresBasicos ID PC operacionesBasicas
    (83) operacionesBasicas -> . ID ASIG tipoValores operadoresBasicos ID PC operacionesBasicas
    (84) operacionesBasicas -> . ID ASIG tipoValores operadoresBasicos tipoValores PC operacionesBasicas
    (85) operacionesBasicas -> . ID ASIG ID operadoresBasicos tipoValores PC operacionesBasicas
    (86) operacionesBasicas -> . ID ASIG tipoValores PC operacionesBasicas
    (87) operacionesBasicas -> . ID ASIG ID P ID PC operacionesBasicas
    (88) operacionesBasicas -> . ID ASIG ID PC operacionesBasicas
    (89) operacionesBasicas -> . ID P ID PC operacionesBasicas
    (90) operacionesBasicas -> . ID ASIG ID CORA NUMERO CORC PC operacionesBasicas
    (91) operacionesBasicas -> . ID CORA NUMERO CORC ASIG ID CORA NUMERO CORC PC operacionesBasicas
    (92) operacionesBasicas -> . ID CORA NUMERO CORC ASIG tipoValores PC operacionesBasicas
    (93) operacionesBasicas -> . ID PARENTA listaValores PARENTC PC operacionesBasicas
    (94) operacionesBasicas -> . ID ASIG ID PARENTA listaValores PARENTC PC operacionesBasicas
    (95) operacionesBasicas -> . empty
    (112) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 85
    ABIF            reduce using rule 112 (empty -> .)
    ABIJOR          reduce using rule 112 (empty -> .)
    ABIN            reduce using rule 112 (empty -> .)
    ABOUT           reduce using rule 112 (empty -> .)
    ABIDECLARA      reduce using rule 112 (empty -> .)
    INT             reduce using rule 112 (empty -> .)
    CHAR            reduce using rule 112 (empty -> .)
    STRING          reduce using rule 112 (empty -> .)
    BOOL            reduce using rule 112 (empty -> .)
    FLOAT           reduce using rule 112 (empty -> .)
    VOID            reduce using rule 112 (empty -> .)
    ABIRRAY         reduce using rule 112 (empty -> .)
    C               reduce using rule 112 (empty -> .)
    LLAVEC          reduce using rule 112 (empty -> .)
    RETURN          reduce using rule 112 (empty -> .)

  ! ID              [ reduce using rule 112 (empty -> .) ]

    operacionesBasicas             shift and go to state 198
    empty                          shift and go to state 86

state 178

    (98) listaValores -> listaValores C listaValores .
    (98) listaValores -> listaValores . C listaValores

  ! shift/reduce conflict for C resolved as shift
    PARENTC         reduce using rule 98 (listaValores -> listaValores C listaValores .)
    C               shift and go to state 151

  ! C               [ reduce using rule 98 (listaValores -> listaValores C listaValores .) ]


state 179

    (78) salidaDatos -> ABOUT PARENTA STRING_VALOR C listaSalida PARENTC PC salidaDatos .

    ABIDECLARA      reduce using rule 78 (salidaDatos -> ABOUT PARENTA STRING_VALOR C listaSalida PARENTC PC salidaDatos .)
    INT             reduce using rule 78 (salidaDatos -> ABOUT PARENTA STRING_VALOR C listaSalida PARENTC PC salidaDatos .)
    CHAR            reduce using rule 78 (salidaDatos -> ABOUT PARENTA STRING_VALOR C listaSalida PARENTC PC salidaDatos .)
    STRING          reduce using rule 78 (salidaDatos -> ABOUT PARENTA STRING_VALOR C listaSalida PARENTC PC salidaDatos .)
    BOOL            reduce using rule 78 (salidaDatos -> ABOUT PARENTA STRING_VALOR C listaSalida PARENTC PC salidaDatos .)
    FLOAT           reduce using rule 78 (salidaDatos -> ABOUT PARENTA STRING_VALOR C listaSalida PARENTC PC salidaDatos .)
    VOID            reduce using rule 78 (salidaDatos -> ABOUT PARENTA STRING_VALOR C listaSalida PARENTC PC salidaDatos .)
    ABIRRAY         reduce using rule 78 (salidaDatos -> ABOUT PARENTA STRING_VALOR C listaSalida PARENTC PC salidaDatos .)
    C               reduce using rule 78 (salidaDatos -> ABOUT PARENTA STRING_VALOR C listaSalida PARENTC PC salidaDatos .)
    ID              reduce using rule 78 (salidaDatos -> ABOUT PARENTA STRING_VALOR C listaSalida PARENTC PC salidaDatos .)
    ABIF            reduce using rule 78 (salidaDatos -> ABOUT PARENTA STRING_VALOR C listaSalida PARENTC PC salidaDatos .)
    ABIJOR          reduce using rule 78 (salidaDatos -> ABOUT PARENTA STRING_VALOR C listaSalida PARENTC PC salidaDatos .)
    ABIN            reduce using rule 78 (salidaDatos -> ABOUT PARENTA STRING_VALOR C listaSalida PARENTC PC salidaDatos .)
    ABOUT           reduce using rule 78 (salidaDatos -> ABOUT PARENTA STRING_VALOR C listaSalida PARENTC PC salidaDatos .)
    LLAVEC          reduce using rule 78 (salidaDatos -> ABOUT PARENTA STRING_VALOR C listaSalida PARENTC PC salidaDatos .)
    RETURN          reduce using rule 78 (salidaDatos -> ABOUT PARENTA STRING_VALOR C listaSalida PARENTC PC salidaDatos .)
    PC              reduce using rule 78 (salidaDatos -> ABOUT PARENTA STRING_VALOR C listaSalida PARENTC PC salidaDatos .)


state 180

    (31) declaracionCiclo -> ABIJOR PARENTA inicializacion PC . cond PC cambio PARENTC LLAVEA listaInst LLAVEC declaracionCiclo
    (35) cond -> . ID operadores ID
    (36) cond -> . ID operadores NUMERO

    ID              shift and go to state 200

    cond                           shift and go to state 199

state 181

    (33) inicializacion -> INT ID . ASIG NUMERO

    ASIG            shift and go to state 201


state 182

    (34) inicializacion -> ID ASIG . NUMERO

    NUMERO          shift and go to state 202


state 183

    (47) declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA . listaInst LLAVEC declaracionElse declaracionIf
    (48) declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA . listaInst LLAVEC declaracionIf
    (107) listaInst -> . listaInstrucciones
    (108) listaInst -> . listaInstrucciones listaInst
    (109) listaInst -> . empty
    (106) listaInstrucciones -> . entradaDatos salidaDatos declaraStruct declaracionVariable operacionesBasicas declaracionIf declaracionCiclo
    (112) empty -> .
    (74) entradaDatos -> . ABIN PARENTA ID PARENTC PC entradaDatos
    (75) entradaDatos -> . empty

  ! shift/reduce conflict for ABIN resolved as shift
    LLAVEC          reduce using rule 112 (empty -> .)
    ABOUT           reduce using rule 112 (empty -> .)
    ABIDECLARA      reduce using rule 112 (empty -> .)
    INT             reduce using rule 112 (empty -> .)
    CHAR            reduce using rule 112 (empty -> .)
    STRING          reduce using rule 112 (empty -> .)
    BOOL            reduce using rule 112 (empty -> .)
    FLOAT           reduce using rule 112 (empty -> .)
    VOID            reduce using rule 112 (empty -> .)
    ABIRRAY         reduce using rule 112 (empty -> .)
    C               reduce using rule 112 (empty -> .)
    ID              reduce using rule 112 (empty -> .)
    ABIF            reduce using rule 112 (empty -> .)
    ABIJOR          reduce using rule 112 (empty -> .)
    ABIN            shift and go to state 50

  ! ABIN            [ reduce using rule 112 (empty -> .) ]

    listaInst                      shift and go to state 203
    listaInstrucciones             shift and go to state 47
    empty                          shift and go to state 48
    entradaDatos                   shift and go to state 49

state 184

    (51) condicion -> ID operadoresRel ID . operadoresLogicos condicion
    (52) condicion -> ID operadoresRel ID .
    (66) operadoresLogicos -> . AND
    (67) operadoresLogicos -> . OR

    PARENTC         reduce using rule 52 (condicion -> ID operadoresRel ID .)
    AND             shift and go to state 205
    OR              shift and go to state 206

    operadoresLogicos              shift and go to state 204

state 185

    (55) condicion -> ID operadoresRel tipoValores . operadoresLogicos condicion
    (56) condicion -> ID operadoresRel tipoValores .
    (66) operadoresLogicos -> . AND
    (67) operadoresLogicos -> . OR

    PARENTC         reduce using rule 56 (condicion -> ID operadoresRel tipoValores .)
    AND             shift and go to state 205
    OR              shift and go to state 206

    operadoresLogicos              shift and go to state 207

state 186

    (61) condicion -> ID operadoresRel NOT . ID operadoresLogicos condicion
    (62) condicion -> ID operadoresRel NOT . ID
    (63) condicion -> ID operadoresRel NOT . tipoValores operadoresLogicos condicion
    (64) condicion -> ID operadoresRel NOT . tipoValores
    (14) tipoValores -> . NUMERO
    (15) tipoValores -> . FLOAT_VALOR
    (16) tipoValores -> . CHAR_VALOR
    (17) tipoValores -> . STRING_VALOR
    (18) tipoValores -> . TRUE
    (19) tipoValores -> . FALSE

    ID              shift and go to state 208
    NUMERO          shift and go to state 39
    FLOAT_VALOR     shift and go to state 40
    CHAR_VALOR      shift and go to state 41
    STRING_VALOR    shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

    tipoValores                    shift and go to state 209

state 187

    (57) condicion -> NOT ID operadoresRel . ID operadoresLogicos condicion
    (58) condicion -> NOT ID operadoresRel . ID
    (59) condicion -> NOT ID operadoresRel . tipoValores operadoresLogicos condicion
    (60) condicion -> NOT ID operadoresRel . tipoValores
    (14) tipoValores -> . NUMERO
    (15) tipoValores -> . FLOAT_VALOR
    (16) tipoValores -> . CHAR_VALOR
    (17) tipoValores -> . STRING_VALOR
    (18) tipoValores -> . TRUE
    (19) tipoValores -> . FALSE

    ID              shift and go to state 210
    NUMERO          shift and go to state 39
    FLOAT_VALOR     shift and go to state 40
    CHAR_VALOR      shift and go to state 41
    STRING_VALOR    shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

    tipoValores                    shift and go to state 211

state 188

    (65) condicion -> NOT PARENTA condicion . PARENTC

    PARENTC         shift and go to state 212


state 189

    (82) operacionesBasicas -> ID ASIG ID operadoresBasicos ID PC . operacionesBasicas
    (82) operacionesBasicas -> . ID ASIG ID operadoresBasicos ID PC operacionesBasicas
    (83) operacionesBasicas -> . ID ASIG tipoValores operadoresBasicos ID PC operacionesBasicas
    (84) operacionesBasicas -> . ID ASIG tipoValores operadoresBasicos tipoValores PC operacionesBasicas
    (85) operacionesBasicas -> . ID ASIG ID operadoresBasicos tipoValores PC operacionesBasicas
    (86) operacionesBasicas -> . ID ASIG tipoValores PC operacionesBasicas
    (87) operacionesBasicas -> . ID ASIG ID P ID PC operacionesBasicas
    (88) operacionesBasicas -> . ID ASIG ID PC operacionesBasicas
    (89) operacionesBasicas -> . ID P ID PC operacionesBasicas
    (90) operacionesBasicas -> . ID ASIG ID CORA NUMERO CORC PC operacionesBasicas
    (91) operacionesBasicas -> . ID CORA NUMERO CORC ASIG ID CORA NUMERO CORC PC operacionesBasicas
    (92) operacionesBasicas -> . ID CORA NUMERO CORC ASIG tipoValores PC operacionesBasicas
    (93) operacionesBasicas -> . ID PARENTA listaValores PARENTC PC operacionesBasicas
    (94) operacionesBasicas -> . ID ASIG ID PARENTA listaValores PARENTC PC operacionesBasicas
    (95) operacionesBasicas -> . empty
    (112) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 85
    ABIF            reduce using rule 112 (empty -> .)
    ABIJOR          reduce using rule 112 (empty -> .)
    ABIN            reduce using rule 112 (empty -> .)
    ABOUT           reduce using rule 112 (empty -> .)
    ABIDECLARA      reduce using rule 112 (empty -> .)
    INT             reduce using rule 112 (empty -> .)
    CHAR            reduce using rule 112 (empty -> .)
    STRING          reduce using rule 112 (empty -> .)
    BOOL            reduce using rule 112 (empty -> .)
    FLOAT           reduce using rule 112 (empty -> .)
    VOID            reduce using rule 112 (empty -> .)
    ABIRRAY         reduce using rule 112 (empty -> .)
    C               reduce using rule 112 (empty -> .)
    LLAVEC          reduce using rule 112 (empty -> .)
    RETURN          reduce using rule 112 (empty -> .)

  ! ID              [ reduce using rule 112 (empty -> .) ]

    operacionesBasicas             shift and go to state 213
    empty                          shift and go to state 86

state 190

    (85) operacionesBasicas -> ID ASIG ID operadoresBasicos tipoValores PC . operacionesBasicas
    (82) operacionesBasicas -> . ID ASIG ID operadoresBasicos ID PC operacionesBasicas
    (83) operacionesBasicas -> . ID ASIG tipoValores operadoresBasicos ID PC operacionesBasicas
    (84) operacionesBasicas -> . ID ASIG tipoValores operadoresBasicos tipoValores PC operacionesBasicas
    (85) operacionesBasicas -> . ID ASIG ID operadoresBasicos tipoValores PC operacionesBasicas
    (86) operacionesBasicas -> . ID ASIG tipoValores PC operacionesBasicas
    (87) operacionesBasicas -> . ID ASIG ID P ID PC operacionesBasicas
    (88) operacionesBasicas -> . ID ASIG ID PC operacionesBasicas
    (89) operacionesBasicas -> . ID P ID PC operacionesBasicas
    (90) operacionesBasicas -> . ID ASIG ID CORA NUMERO CORC PC operacionesBasicas
    (91) operacionesBasicas -> . ID CORA NUMERO CORC ASIG ID CORA NUMERO CORC PC operacionesBasicas
    (92) operacionesBasicas -> . ID CORA NUMERO CORC ASIG tipoValores PC operacionesBasicas
    (93) operacionesBasicas -> . ID PARENTA listaValores PARENTC PC operacionesBasicas
    (94) operacionesBasicas -> . ID ASIG ID PARENTA listaValores PARENTC PC operacionesBasicas
    (95) operacionesBasicas -> . empty
    (112) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 85
    ABIF            reduce using rule 112 (empty -> .)
    ABIJOR          reduce using rule 112 (empty -> .)
    ABIN            reduce using rule 112 (empty -> .)
    ABOUT           reduce using rule 112 (empty -> .)
    ABIDECLARA      reduce using rule 112 (empty -> .)
    INT             reduce using rule 112 (empty -> .)
    CHAR            reduce using rule 112 (empty -> .)
    STRING          reduce using rule 112 (empty -> .)
    BOOL            reduce using rule 112 (empty -> .)
    FLOAT           reduce using rule 112 (empty -> .)
    VOID            reduce using rule 112 (empty -> .)
    ABIRRAY         reduce using rule 112 (empty -> .)
    C               reduce using rule 112 (empty -> .)
    LLAVEC          reduce using rule 112 (empty -> .)
    RETURN          reduce using rule 112 (empty -> .)

  ! ID              [ reduce using rule 112 (empty -> .) ]

    operacionesBasicas             shift and go to state 214
    empty                          shift and go to state 86

state 191

    (87) operacionesBasicas -> ID ASIG ID P ID PC . operacionesBasicas
    (82) operacionesBasicas -> . ID ASIG ID operadoresBasicos ID PC operacionesBasicas
    (83) operacionesBasicas -> . ID ASIG tipoValores operadoresBasicos ID PC operacionesBasicas
    (84) operacionesBasicas -> . ID ASIG tipoValores operadoresBasicos tipoValores PC operacionesBasicas
    (85) operacionesBasicas -> . ID ASIG ID operadoresBasicos tipoValores PC operacionesBasicas
    (86) operacionesBasicas -> . ID ASIG tipoValores PC operacionesBasicas
    (87) operacionesBasicas -> . ID ASIG ID P ID PC operacionesBasicas
    (88) operacionesBasicas -> . ID ASIG ID PC operacionesBasicas
    (89) operacionesBasicas -> . ID P ID PC operacionesBasicas
    (90) operacionesBasicas -> . ID ASIG ID CORA NUMERO CORC PC operacionesBasicas
    (91) operacionesBasicas -> . ID CORA NUMERO CORC ASIG ID CORA NUMERO CORC PC operacionesBasicas
    (92) operacionesBasicas -> . ID CORA NUMERO CORC ASIG tipoValores PC operacionesBasicas
    (93) operacionesBasicas -> . ID PARENTA listaValores PARENTC PC operacionesBasicas
    (94) operacionesBasicas -> . ID ASIG ID PARENTA listaValores PARENTC PC operacionesBasicas
    (95) operacionesBasicas -> . empty
    (112) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 85
    ABIF            reduce using rule 112 (empty -> .)
    ABIJOR          reduce using rule 112 (empty -> .)
    ABIN            reduce using rule 112 (empty -> .)
    ABOUT           reduce using rule 112 (empty -> .)
    ABIDECLARA      reduce using rule 112 (empty -> .)
    INT             reduce using rule 112 (empty -> .)
    CHAR            reduce using rule 112 (empty -> .)
    STRING          reduce using rule 112 (empty -> .)
    BOOL            reduce using rule 112 (empty -> .)
    FLOAT           reduce using rule 112 (empty -> .)
    VOID            reduce using rule 112 (empty -> .)
    ABIRRAY         reduce using rule 112 (empty -> .)
    C               reduce using rule 112 (empty -> .)
    LLAVEC          reduce using rule 112 (empty -> .)
    RETURN          reduce using rule 112 (empty -> .)

  ! ID              [ reduce using rule 112 (empty -> .) ]

    operacionesBasicas             shift and go to state 215
    empty                          shift and go to state 86

state 192

    (90) operacionesBasicas -> ID ASIG ID CORA NUMERO CORC . PC operacionesBasicas

    PC              shift and go to state 216


state 193

    (94) operacionesBasicas -> ID ASIG ID PARENTA listaValores PARENTC . PC operacionesBasicas

    PC              shift and go to state 217


state 194

    (83) operacionesBasicas -> ID ASIG tipoValores operadoresBasicos ID PC . operacionesBasicas
    (82) operacionesBasicas -> . ID ASIG ID operadoresBasicos ID PC operacionesBasicas
    (83) operacionesBasicas -> . ID ASIG tipoValores operadoresBasicos ID PC operacionesBasicas
    (84) operacionesBasicas -> . ID ASIG tipoValores operadoresBasicos tipoValores PC operacionesBasicas
    (85) operacionesBasicas -> . ID ASIG ID operadoresBasicos tipoValores PC operacionesBasicas
    (86) operacionesBasicas -> . ID ASIG tipoValores PC operacionesBasicas
    (87) operacionesBasicas -> . ID ASIG ID P ID PC operacionesBasicas
    (88) operacionesBasicas -> . ID ASIG ID PC operacionesBasicas
    (89) operacionesBasicas -> . ID P ID PC operacionesBasicas
    (90) operacionesBasicas -> . ID ASIG ID CORA NUMERO CORC PC operacionesBasicas
    (91) operacionesBasicas -> . ID CORA NUMERO CORC ASIG ID CORA NUMERO CORC PC operacionesBasicas
    (92) operacionesBasicas -> . ID CORA NUMERO CORC ASIG tipoValores PC operacionesBasicas
    (93) operacionesBasicas -> . ID PARENTA listaValores PARENTC PC operacionesBasicas
    (94) operacionesBasicas -> . ID ASIG ID PARENTA listaValores PARENTC PC operacionesBasicas
    (95) operacionesBasicas -> . empty
    (112) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 85
    ABIF            reduce using rule 112 (empty -> .)
    ABIJOR          reduce using rule 112 (empty -> .)
    ABIN            reduce using rule 112 (empty -> .)
    ABOUT           reduce using rule 112 (empty -> .)
    ABIDECLARA      reduce using rule 112 (empty -> .)
    INT             reduce using rule 112 (empty -> .)
    CHAR            reduce using rule 112 (empty -> .)
    STRING          reduce using rule 112 (empty -> .)
    BOOL            reduce using rule 112 (empty -> .)
    FLOAT           reduce using rule 112 (empty -> .)
    VOID            reduce using rule 112 (empty -> .)
    ABIRRAY         reduce using rule 112 (empty -> .)
    C               reduce using rule 112 (empty -> .)
    LLAVEC          reduce using rule 112 (empty -> .)
    RETURN          reduce using rule 112 (empty -> .)

  ! ID              [ reduce using rule 112 (empty -> .) ]

    operacionesBasicas             shift and go to state 218
    empty                          shift and go to state 86

state 195

    (84) operacionesBasicas -> ID ASIG tipoValores operadoresBasicos tipoValores PC . operacionesBasicas
    (82) operacionesBasicas -> . ID ASIG ID operadoresBasicos ID PC operacionesBasicas
    (83) operacionesBasicas -> . ID ASIG tipoValores operadoresBasicos ID PC operacionesBasicas
    (84) operacionesBasicas -> . ID ASIG tipoValores operadoresBasicos tipoValores PC operacionesBasicas
    (85) operacionesBasicas -> . ID ASIG ID operadoresBasicos tipoValores PC operacionesBasicas
    (86) operacionesBasicas -> . ID ASIG tipoValores PC operacionesBasicas
    (87) operacionesBasicas -> . ID ASIG ID P ID PC operacionesBasicas
    (88) operacionesBasicas -> . ID ASIG ID PC operacionesBasicas
    (89) operacionesBasicas -> . ID P ID PC operacionesBasicas
    (90) operacionesBasicas -> . ID ASIG ID CORA NUMERO CORC PC operacionesBasicas
    (91) operacionesBasicas -> . ID CORA NUMERO CORC ASIG ID CORA NUMERO CORC PC operacionesBasicas
    (92) operacionesBasicas -> . ID CORA NUMERO CORC ASIG tipoValores PC operacionesBasicas
    (93) operacionesBasicas -> . ID PARENTA listaValores PARENTC PC operacionesBasicas
    (94) operacionesBasicas -> . ID ASIG ID PARENTA listaValores PARENTC PC operacionesBasicas
    (95) operacionesBasicas -> . empty
    (112) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 85
    ABIF            reduce using rule 112 (empty -> .)
    ABIJOR          reduce using rule 112 (empty -> .)
    ABIN            reduce using rule 112 (empty -> .)
    ABOUT           reduce using rule 112 (empty -> .)
    ABIDECLARA      reduce using rule 112 (empty -> .)
    INT             reduce using rule 112 (empty -> .)
    CHAR            reduce using rule 112 (empty -> .)
    STRING          reduce using rule 112 (empty -> .)
    BOOL            reduce using rule 112 (empty -> .)
    FLOAT           reduce using rule 112 (empty -> .)
    VOID            reduce using rule 112 (empty -> .)
    ABIRRAY         reduce using rule 112 (empty -> .)
    C               reduce using rule 112 (empty -> .)
    LLAVEC          reduce using rule 112 (empty -> .)
    RETURN          reduce using rule 112 (empty -> .)

  ! ID              [ reduce using rule 112 (empty -> .) ]

    operacionesBasicas             shift and go to state 219
    empty                          shift and go to state 86

state 196

    (91) operacionesBasicas -> ID CORA NUMERO CORC ASIG ID . CORA NUMERO CORC PC operacionesBasicas

    CORA            shift and go to state 220


state 197

    (92) operacionesBasicas -> ID CORA NUMERO CORC ASIG tipoValores . PC operacionesBasicas

    PC              shift and go to state 221


state 198

    (93) operacionesBasicas -> ID PARENTA listaValores PARENTC PC operacionesBasicas .

    ABIF            reduce using rule 93 (operacionesBasicas -> ID PARENTA listaValores PARENTC PC operacionesBasicas .)
    ABIJOR          reduce using rule 93 (operacionesBasicas -> ID PARENTA listaValores PARENTC PC operacionesBasicas .)
    ABIN            reduce using rule 93 (operacionesBasicas -> ID PARENTA listaValores PARENTC PC operacionesBasicas .)
    ABOUT           reduce using rule 93 (operacionesBasicas -> ID PARENTA listaValores PARENTC PC operacionesBasicas .)
    ABIDECLARA      reduce using rule 93 (operacionesBasicas -> ID PARENTA listaValores PARENTC PC operacionesBasicas .)
    INT             reduce using rule 93 (operacionesBasicas -> ID PARENTA listaValores PARENTC PC operacionesBasicas .)
    CHAR            reduce using rule 93 (operacionesBasicas -> ID PARENTA listaValores PARENTC PC operacionesBasicas .)
    STRING          reduce using rule 93 (operacionesBasicas -> ID PARENTA listaValores PARENTC PC operacionesBasicas .)
    BOOL            reduce using rule 93 (operacionesBasicas -> ID PARENTA listaValores PARENTC PC operacionesBasicas .)
    FLOAT           reduce using rule 93 (operacionesBasicas -> ID PARENTA listaValores PARENTC PC operacionesBasicas .)
    VOID            reduce using rule 93 (operacionesBasicas -> ID PARENTA listaValores PARENTC PC operacionesBasicas .)
    ABIRRAY         reduce using rule 93 (operacionesBasicas -> ID PARENTA listaValores PARENTC PC operacionesBasicas .)
    C               reduce using rule 93 (operacionesBasicas -> ID PARENTA listaValores PARENTC PC operacionesBasicas .)
    ID              reduce using rule 93 (operacionesBasicas -> ID PARENTA listaValores PARENTC PC operacionesBasicas .)
    LLAVEC          reduce using rule 93 (operacionesBasicas -> ID PARENTA listaValores PARENTC PC operacionesBasicas .)
    RETURN          reduce using rule 93 (operacionesBasicas -> ID PARENTA listaValores PARENTC PC operacionesBasicas .)


state 199

    (31) declaracionCiclo -> ABIJOR PARENTA inicializacion PC cond . PC cambio PARENTC LLAVEA listaInst LLAVEC declaracionCiclo

    PC              shift and go to state 222


state 200

    (35) cond -> ID . operadores ID
    (36) cond -> ID . operadores NUMERO
    (37) operadores -> . LT
    (38) operadores -> . LTE
    (39) operadores -> . GTE
    (40) operadores -> . GT

    LT              shift and go to state 224
    LTE             shift and go to state 225
    GTE             shift and go to state 226
    GT              shift and go to state 227

    operadores                     shift and go to state 223

state 201

    (33) inicializacion -> INT ID ASIG . NUMERO

    NUMERO          shift and go to state 228


state 202

    (34) inicializacion -> ID ASIG NUMERO .

    PC              reduce using rule 34 (inicializacion -> ID ASIG NUMERO .)


state 203

    (47) declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst . LLAVEC declaracionElse declaracionIf
    (48) declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst . LLAVEC declaracionIf

    LLAVEC          shift and go to state 229


state 204

    (51) condicion -> ID operadoresRel ID operadoresLogicos . condicion
    (51) condicion -> . ID operadoresRel ID operadoresLogicos condicion
    (52) condicion -> . ID operadoresRel ID
    (53) condicion -> . ID
    (54) condicion -> . tipoValores
    (55) condicion -> . ID operadoresRel tipoValores operadoresLogicos condicion
    (56) condicion -> . ID operadoresRel tipoValores
    (57) condicion -> . NOT ID operadoresRel ID operadoresLogicos condicion
    (58) condicion -> . NOT ID operadoresRel ID
    (59) condicion -> . NOT ID operadoresRel tipoValores operadoresLogicos condicion
    (60) condicion -> . NOT ID operadoresRel tipoValores
    (61) condicion -> . ID operadoresRel NOT ID operadoresLogicos condicion
    (62) condicion -> . ID operadoresRel NOT ID
    (63) condicion -> . ID operadoresRel NOT tipoValores operadoresLogicos condicion
    (64) condicion -> . ID operadoresRel NOT tipoValores
    (65) condicion -> . NOT PARENTA condicion PARENTC
    (14) tipoValores -> . NUMERO
    (15) tipoValores -> . FLOAT_VALOR
    (16) tipoValores -> . CHAR_VALOR
    (17) tipoValores -> . STRING_VALOR
    (18) tipoValores -> . TRUE
    (19) tipoValores -> . FALSE

    ID              shift and go to state 134
    NOT             shift and go to state 136
    NUMERO          shift and go to state 39
    FLOAT_VALOR     shift and go to state 40
    CHAR_VALOR      shift and go to state 41
    STRING_VALOR    shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

    condicion                      shift and go to state 230
    tipoValores                    shift and go to state 135

state 205

    (66) operadoresLogicos -> AND .

    ID              reduce using rule 66 (operadoresLogicos -> AND .)
    NOT             reduce using rule 66 (operadoresLogicos -> AND .)
    NUMERO          reduce using rule 66 (operadoresLogicos -> AND .)
    FLOAT_VALOR     reduce using rule 66 (operadoresLogicos -> AND .)
    CHAR_VALOR      reduce using rule 66 (operadoresLogicos -> AND .)
    STRING_VALOR    reduce using rule 66 (operadoresLogicos -> AND .)
    TRUE            reduce using rule 66 (operadoresLogicos -> AND .)
    FALSE           reduce using rule 66 (operadoresLogicos -> AND .)


state 206

    (67) operadoresLogicos -> OR .

    ID              reduce using rule 67 (operadoresLogicos -> OR .)
    NOT             reduce using rule 67 (operadoresLogicos -> OR .)
    NUMERO          reduce using rule 67 (operadoresLogicos -> OR .)
    FLOAT_VALOR     reduce using rule 67 (operadoresLogicos -> OR .)
    CHAR_VALOR      reduce using rule 67 (operadoresLogicos -> OR .)
    STRING_VALOR    reduce using rule 67 (operadoresLogicos -> OR .)
    TRUE            reduce using rule 67 (operadoresLogicos -> OR .)
    FALSE           reduce using rule 67 (operadoresLogicos -> OR .)


state 207

    (55) condicion -> ID operadoresRel tipoValores operadoresLogicos . condicion
    (51) condicion -> . ID operadoresRel ID operadoresLogicos condicion
    (52) condicion -> . ID operadoresRel ID
    (53) condicion -> . ID
    (54) condicion -> . tipoValores
    (55) condicion -> . ID operadoresRel tipoValores operadoresLogicos condicion
    (56) condicion -> . ID operadoresRel tipoValores
    (57) condicion -> . NOT ID operadoresRel ID operadoresLogicos condicion
    (58) condicion -> . NOT ID operadoresRel ID
    (59) condicion -> . NOT ID operadoresRel tipoValores operadoresLogicos condicion
    (60) condicion -> . NOT ID operadoresRel tipoValores
    (61) condicion -> . ID operadoresRel NOT ID operadoresLogicos condicion
    (62) condicion -> . ID operadoresRel NOT ID
    (63) condicion -> . ID operadoresRel NOT tipoValores operadoresLogicos condicion
    (64) condicion -> . ID operadoresRel NOT tipoValores
    (65) condicion -> . NOT PARENTA condicion PARENTC
    (14) tipoValores -> . NUMERO
    (15) tipoValores -> . FLOAT_VALOR
    (16) tipoValores -> . CHAR_VALOR
    (17) tipoValores -> . STRING_VALOR
    (18) tipoValores -> . TRUE
    (19) tipoValores -> . FALSE

    ID              shift and go to state 134
    NOT             shift and go to state 136
    NUMERO          shift and go to state 39
    FLOAT_VALOR     shift and go to state 40
    CHAR_VALOR      shift and go to state 41
    STRING_VALOR    shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

    tipoValores                    shift and go to state 135
    condicion                      shift and go to state 231

state 208

    (61) condicion -> ID operadoresRel NOT ID . operadoresLogicos condicion
    (62) condicion -> ID operadoresRel NOT ID .
    (66) operadoresLogicos -> . AND
    (67) operadoresLogicos -> . OR

    PARENTC         reduce using rule 62 (condicion -> ID operadoresRel NOT ID .)
    AND             shift and go to state 205
    OR              shift and go to state 206

    operadoresLogicos              shift and go to state 232

state 209

    (63) condicion -> ID operadoresRel NOT tipoValores . operadoresLogicos condicion
    (64) condicion -> ID operadoresRel NOT tipoValores .
    (66) operadoresLogicos -> . AND
    (67) operadoresLogicos -> . OR

    PARENTC         reduce using rule 64 (condicion -> ID operadoresRel NOT tipoValores .)
    AND             shift and go to state 205
    OR              shift and go to state 206

    operadoresLogicos              shift and go to state 233

state 210

    (57) condicion -> NOT ID operadoresRel ID . operadoresLogicos condicion
    (58) condicion -> NOT ID operadoresRel ID .
    (66) operadoresLogicos -> . AND
    (67) operadoresLogicos -> . OR

    PARENTC         reduce using rule 58 (condicion -> NOT ID operadoresRel ID .)
    AND             shift and go to state 205
    OR              shift and go to state 206

    operadoresLogicos              shift and go to state 234

state 211

    (59) condicion -> NOT ID operadoresRel tipoValores . operadoresLogicos condicion
    (60) condicion -> NOT ID operadoresRel tipoValores .
    (66) operadoresLogicos -> . AND
    (67) operadoresLogicos -> . OR

    PARENTC         reduce using rule 60 (condicion -> NOT ID operadoresRel tipoValores .)
    AND             shift and go to state 205
    OR              shift and go to state 206

    operadoresLogicos              shift and go to state 235

state 212

    (65) condicion -> NOT PARENTA condicion PARENTC .

    PARENTC         reduce using rule 65 (condicion -> NOT PARENTA condicion PARENTC .)


state 213

    (82) operacionesBasicas -> ID ASIG ID operadoresBasicos ID PC operacionesBasicas .

    ABIF            reduce using rule 82 (operacionesBasicas -> ID ASIG ID operadoresBasicos ID PC operacionesBasicas .)
    ABIJOR          reduce using rule 82 (operacionesBasicas -> ID ASIG ID operadoresBasicos ID PC operacionesBasicas .)
    ABIN            reduce using rule 82 (operacionesBasicas -> ID ASIG ID operadoresBasicos ID PC operacionesBasicas .)
    ABOUT           reduce using rule 82 (operacionesBasicas -> ID ASIG ID operadoresBasicos ID PC operacionesBasicas .)
    ABIDECLARA      reduce using rule 82 (operacionesBasicas -> ID ASIG ID operadoresBasicos ID PC operacionesBasicas .)
    INT             reduce using rule 82 (operacionesBasicas -> ID ASIG ID operadoresBasicos ID PC operacionesBasicas .)
    CHAR            reduce using rule 82 (operacionesBasicas -> ID ASIG ID operadoresBasicos ID PC operacionesBasicas .)
    STRING          reduce using rule 82 (operacionesBasicas -> ID ASIG ID operadoresBasicos ID PC operacionesBasicas .)
    BOOL            reduce using rule 82 (operacionesBasicas -> ID ASIG ID operadoresBasicos ID PC operacionesBasicas .)
    FLOAT           reduce using rule 82 (operacionesBasicas -> ID ASIG ID operadoresBasicos ID PC operacionesBasicas .)
    VOID            reduce using rule 82 (operacionesBasicas -> ID ASIG ID operadoresBasicos ID PC operacionesBasicas .)
    ABIRRAY         reduce using rule 82 (operacionesBasicas -> ID ASIG ID operadoresBasicos ID PC operacionesBasicas .)
    C               reduce using rule 82 (operacionesBasicas -> ID ASIG ID operadoresBasicos ID PC operacionesBasicas .)
    ID              reduce using rule 82 (operacionesBasicas -> ID ASIG ID operadoresBasicos ID PC operacionesBasicas .)
    LLAVEC          reduce using rule 82 (operacionesBasicas -> ID ASIG ID operadoresBasicos ID PC operacionesBasicas .)
    RETURN          reduce using rule 82 (operacionesBasicas -> ID ASIG ID operadoresBasicos ID PC operacionesBasicas .)


state 214

    (85) operacionesBasicas -> ID ASIG ID operadoresBasicos tipoValores PC operacionesBasicas .

    ABIF            reduce using rule 85 (operacionesBasicas -> ID ASIG ID operadoresBasicos tipoValores PC operacionesBasicas .)
    ABIJOR          reduce using rule 85 (operacionesBasicas -> ID ASIG ID operadoresBasicos tipoValores PC operacionesBasicas .)
    ABIN            reduce using rule 85 (operacionesBasicas -> ID ASIG ID operadoresBasicos tipoValores PC operacionesBasicas .)
    ABOUT           reduce using rule 85 (operacionesBasicas -> ID ASIG ID operadoresBasicos tipoValores PC operacionesBasicas .)
    ABIDECLARA      reduce using rule 85 (operacionesBasicas -> ID ASIG ID operadoresBasicos tipoValores PC operacionesBasicas .)
    INT             reduce using rule 85 (operacionesBasicas -> ID ASIG ID operadoresBasicos tipoValores PC operacionesBasicas .)
    CHAR            reduce using rule 85 (operacionesBasicas -> ID ASIG ID operadoresBasicos tipoValores PC operacionesBasicas .)
    STRING          reduce using rule 85 (operacionesBasicas -> ID ASIG ID operadoresBasicos tipoValores PC operacionesBasicas .)
    BOOL            reduce using rule 85 (operacionesBasicas -> ID ASIG ID operadoresBasicos tipoValores PC operacionesBasicas .)
    FLOAT           reduce using rule 85 (operacionesBasicas -> ID ASIG ID operadoresBasicos tipoValores PC operacionesBasicas .)
    VOID            reduce using rule 85 (operacionesBasicas -> ID ASIG ID operadoresBasicos tipoValores PC operacionesBasicas .)
    ABIRRAY         reduce using rule 85 (operacionesBasicas -> ID ASIG ID operadoresBasicos tipoValores PC operacionesBasicas .)
    C               reduce using rule 85 (operacionesBasicas -> ID ASIG ID operadoresBasicos tipoValores PC operacionesBasicas .)
    ID              reduce using rule 85 (operacionesBasicas -> ID ASIG ID operadoresBasicos tipoValores PC operacionesBasicas .)
    LLAVEC          reduce using rule 85 (operacionesBasicas -> ID ASIG ID operadoresBasicos tipoValores PC operacionesBasicas .)
    RETURN          reduce using rule 85 (operacionesBasicas -> ID ASIG ID operadoresBasicos tipoValores PC operacionesBasicas .)


state 215

    (87) operacionesBasicas -> ID ASIG ID P ID PC operacionesBasicas .

    ABIF            reduce using rule 87 (operacionesBasicas -> ID ASIG ID P ID PC operacionesBasicas .)
    ABIJOR          reduce using rule 87 (operacionesBasicas -> ID ASIG ID P ID PC operacionesBasicas .)
    ABIN            reduce using rule 87 (operacionesBasicas -> ID ASIG ID P ID PC operacionesBasicas .)
    ABOUT           reduce using rule 87 (operacionesBasicas -> ID ASIG ID P ID PC operacionesBasicas .)
    ABIDECLARA      reduce using rule 87 (operacionesBasicas -> ID ASIG ID P ID PC operacionesBasicas .)
    INT             reduce using rule 87 (operacionesBasicas -> ID ASIG ID P ID PC operacionesBasicas .)
    CHAR            reduce using rule 87 (operacionesBasicas -> ID ASIG ID P ID PC operacionesBasicas .)
    STRING          reduce using rule 87 (operacionesBasicas -> ID ASIG ID P ID PC operacionesBasicas .)
    BOOL            reduce using rule 87 (operacionesBasicas -> ID ASIG ID P ID PC operacionesBasicas .)
    FLOAT           reduce using rule 87 (operacionesBasicas -> ID ASIG ID P ID PC operacionesBasicas .)
    VOID            reduce using rule 87 (operacionesBasicas -> ID ASIG ID P ID PC operacionesBasicas .)
    ABIRRAY         reduce using rule 87 (operacionesBasicas -> ID ASIG ID P ID PC operacionesBasicas .)
    C               reduce using rule 87 (operacionesBasicas -> ID ASIG ID P ID PC operacionesBasicas .)
    ID              reduce using rule 87 (operacionesBasicas -> ID ASIG ID P ID PC operacionesBasicas .)
    LLAVEC          reduce using rule 87 (operacionesBasicas -> ID ASIG ID P ID PC operacionesBasicas .)
    RETURN          reduce using rule 87 (operacionesBasicas -> ID ASIG ID P ID PC operacionesBasicas .)


state 216

    (90) operacionesBasicas -> ID ASIG ID CORA NUMERO CORC PC . operacionesBasicas
    (82) operacionesBasicas -> . ID ASIG ID operadoresBasicos ID PC operacionesBasicas
    (83) operacionesBasicas -> . ID ASIG tipoValores operadoresBasicos ID PC operacionesBasicas
    (84) operacionesBasicas -> . ID ASIG tipoValores operadoresBasicos tipoValores PC operacionesBasicas
    (85) operacionesBasicas -> . ID ASIG ID operadoresBasicos tipoValores PC operacionesBasicas
    (86) operacionesBasicas -> . ID ASIG tipoValores PC operacionesBasicas
    (87) operacionesBasicas -> . ID ASIG ID P ID PC operacionesBasicas
    (88) operacionesBasicas -> . ID ASIG ID PC operacionesBasicas
    (89) operacionesBasicas -> . ID P ID PC operacionesBasicas
    (90) operacionesBasicas -> . ID ASIG ID CORA NUMERO CORC PC operacionesBasicas
    (91) operacionesBasicas -> . ID CORA NUMERO CORC ASIG ID CORA NUMERO CORC PC operacionesBasicas
    (92) operacionesBasicas -> . ID CORA NUMERO CORC ASIG tipoValores PC operacionesBasicas
    (93) operacionesBasicas -> . ID PARENTA listaValores PARENTC PC operacionesBasicas
    (94) operacionesBasicas -> . ID ASIG ID PARENTA listaValores PARENTC PC operacionesBasicas
    (95) operacionesBasicas -> . empty
    (112) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 85
    ABIF            reduce using rule 112 (empty -> .)
    ABIJOR          reduce using rule 112 (empty -> .)
    ABIN            reduce using rule 112 (empty -> .)
    ABOUT           reduce using rule 112 (empty -> .)
    ABIDECLARA      reduce using rule 112 (empty -> .)
    INT             reduce using rule 112 (empty -> .)
    CHAR            reduce using rule 112 (empty -> .)
    STRING          reduce using rule 112 (empty -> .)
    BOOL            reduce using rule 112 (empty -> .)
    FLOAT           reduce using rule 112 (empty -> .)
    VOID            reduce using rule 112 (empty -> .)
    ABIRRAY         reduce using rule 112 (empty -> .)
    C               reduce using rule 112 (empty -> .)
    LLAVEC          reduce using rule 112 (empty -> .)
    RETURN          reduce using rule 112 (empty -> .)

  ! ID              [ reduce using rule 112 (empty -> .) ]

    operacionesBasicas             shift and go to state 236
    empty                          shift and go to state 86

state 217

    (94) operacionesBasicas -> ID ASIG ID PARENTA listaValores PARENTC PC . operacionesBasicas
    (82) operacionesBasicas -> . ID ASIG ID operadoresBasicos ID PC operacionesBasicas
    (83) operacionesBasicas -> . ID ASIG tipoValores operadoresBasicos ID PC operacionesBasicas
    (84) operacionesBasicas -> . ID ASIG tipoValores operadoresBasicos tipoValores PC operacionesBasicas
    (85) operacionesBasicas -> . ID ASIG ID operadoresBasicos tipoValores PC operacionesBasicas
    (86) operacionesBasicas -> . ID ASIG tipoValores PC operacionesBasicas
    (87) operacionesBasicas -> . ID ASIG ID P ID PC operacionesBasicas
    (88) operacionesBasicas -> . ID ASIG ID PC operacionesBasicas
    (89) operacionesBasicas -> . ID P ID PC operacionesBasicas
    (90) operacionesBasicas -> . ID ASIG ID CORA NUMERO CORC PC operacionesBasicas
    (91) operacionesBasicas -> . ID CORA NUMERO CORC ASIG ID CORA NUMERO CORC PC operacionesBasicas
    (92) operacionesBasicas -> . ID CORA NUMERO CORC ASIG tipoValores PC operacionesBasicas
    (93) operacionesBasicas -> . ID PARENTA listaValores PARENTC PC operacionesBasicas
    (94) operacionesBasicas -> . ID ASIG ID PARENTA listaValores PARENTC PC operacionesBasicas
    (95) operacionesBasicas -> . empty
    (112) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 85
    ABIF            reduce using rule 112 (empty -> .)
    ABIJOR          reduce using rule 112 (empty -> .)
    ABIN            reduce using rule 112 (empty -> .)
    ABOUT           reduce using rule 112 (empty -> .)
    ABIDECLARA      reduce using rule 112 (empty -> .)
    INT             reduce using rule 112 (empty -> .)
    CHAR            reduce using rule 112 (empty -> .)
    STRING          reduce using rule 112 (empty -> .)
    BOOL            reduce using rule 112 (empty -> .)
    FLOAT           reduce using rule 112 (empty -> .)
    VOID            reduce using rule 112 (empty -> .)
    ABIRRAY         reduce using rule 112 (empty -> .)
    C               reduce using rule 112 (empty -> .)
    LLAVEC          reduce using rule 112 (empty -> .)
    RETURN          reduce using rule 112 (empty -> .)

  ! ID              [ reduce using rule 112 (empty -> .) ]

    operacionesBasicas             shift and go to state 237
    empty                          shift and go to state 86

state 218

    (83) operacionesBasicas -> ID ASIG tipoValores operadoresBasicos ID PC operacionesBasicas .

    ABIF            reduce using rule 83 (operacionesBasicas -> ID ASIG tipoValores operadoresBasicos ID PC operacionesBasicas .)
    ABIJOR          reduce using rule 83 (operacionesBasicas -> ID ASIG tipoValores operadoresBasicos ID PC operacionesBasicas .)
    ABIN            reduce using rule 83 (operacionesBasicas -> ID ASIG tipoValores operadoresBasicos ID PC operacionesBasicas .)
    ABOUT           reduce using rule 83 (operacionesBasicas -> ID ASIG tipoValores operadoresBasicos ID PC operacionesBasicas .)
    ABIDECLARA      reduce using rule 83 (operacionesBasicas -> ID ASIG tipoValores operadoresBasicos ID PC operacionesBasicas .)
    INT             reduce using rule 83 (operacionesBasicas -> ID ASIG tipoValores operadoresBasicos ID PC operacionesBasicas .)
    CHAR            reduce using rule 83 (operacionesBasicas -> ID ASIG tipoValores operadoresBasicos ID PC operacionesBasicas .)
    STRING          reduce using rule 83 (operacionesBasicas -> ID ASIG tipoValores operadoresBasicos ID PC operacionesBasicas .)
    BOOL            reduce using rule 83 (operacionesBasicas -> ID ASIG tipoValores operadoresBasicos ID PC operacionesBasicas .)
    FLOAT           reduce using rule 83 (operacionesBasicas -> ID ASIG tipoValores operadoresBasicos ID PC operacionesBasicas .)
    VOID            reduce using rule 83 (operacionesBasicas -> ID ASIG tipoValores operadoresBasicos ID PC operacionesBasicas .)
    ABIRRAY         reduce using rule 83 (operacionesBasicas -> ID ASIG tipoValores operadoresBasicos ID PC operacionesBasicas .)
    C               reduce using rule 83 (operacionesBasicas -> ID ASIG tipoValores operadoresBasicos ID PC operacionesBasicas .)
    ID              reduce using rule 83 (operacionesBasicas -> ID ASIG tipoValores operadoresBasicos ID PC operacionesBasicas .)
    LLAVEC          reduce using rule 83 (operacionesBasicas -> ID ASIG tipoValores operadoresBasicos ID PC operacionesBasicas .)
    RETURN          reduce using rule 83 (operacionesBasicas -> ID ASIG tipoValores operadoresBasicos ID PC operacionesBasicas .)


state 219

    (84) operacionesBasicas -> ID ASIG tipoValores operadoresBasicos tipoValores PC operacionesBasicas .

    ABIF            reduce using rule 84 (operacionesBasicas -> ID ASIG tipoValores operadoresBasicos tipoValores PC operacionesBasicas .)
    ABIJOR          reduce using rule 84 (operacionesBasicas -> ID ASIG tipoValores operadoresBasicos tipoValores PC operacionesBasicas .)
    ABIN            reduce using rule 84 (operacionesBasicas -> ID ASIG tipoValores operadoresBasicos tipoValores PC operacionesBasicas .)
    ABOUT           reduce using rule 84 (operacionesBasicas -> ID ASIG tipoValores operadoresBasicos tipoValores PC operacionesBasicas .)
    ABIDECLARA      reduce using rule 84 (operacionesBasicas -> ID ASIG tipoValores operadoresBasicos tipoValores PC operacionesBasicas .)
    INT             reduce using rule 84 (operacionesBasicas -> ID ASIG tipoValores operadoresBasicos tipoValores PC operacionesBasicas .)
    CHAR            reduce using rule 84 (operacionesBasicas -> ID ASIG tipoValores operadoresBasicos tipoValores PC operacionesBasicas .)
    STRING          reduce using rule 84 (operacionesBasicas -> ID ASIG tipoValores operadoresBasicos tipoValores PC operacionesBasicas .)
    BOOL            reduce using rule 84 (operacionesBasicas -> ID ASIG tipoValores operadoresBasicos tipoValores PC operacionesBasicas .)
    FLOAT           reduce using rule 84 (operacionesBasicas -> ID ASIG tipoValores operadoresBasicos tipoValores PC operacionesBasicas .)
    VOID            reduce using rule 84 (operacionesBasicas -> ID ASIG tipoValores operadoresBasicos tipoValores PC operacionesBasicas .)
    ABIRRAY         reduce using rule 84 (operacionesBasicas -> ID ASIG tipoValores operadoresBasicos tipoValores PC operacionesBasicas .)
    C               reduce using rule 84 (operacionesBasicas -> ID ASIG tipoValores operadoresBasicos tipoValores PC operacionesBasicas .)
    ID              reduce using rule 84 (operacionesBasicas -> ID ASIG tipoValores operadoresBasicos tipoValores PC operacionesBasicas .)
    LLAVEC          reduce using rule 84 (operacionesBasicas -> ID ASIG tipoValores operadoresBasicos tipoValores PC operacionesBasicas .)
    RETURN          reduce using rule 84 (operacionesBasicas -> ID ASIG tipoValores operadoresBasicos tipoValores PC operacionesBasicas .)


state 220

    (91) operacionesBasicas -> ID CORA NUMERO CORC ASIG ID CORA . NUMERO CORC PC operacionesBasicas

    NUMERO          shift and go to state 238


state 221

    (92) operacionesBasicas -> ID CORA NUMERO CORC ASIG tipoValores PC . operacionesBasicas
    (82) operacionesBasicas -> . ID ASIG ID operadoresBasicos ID PC operacionesBasicas
    (83) operacionesBasicas -> . ID ASIG tipoValores operadoresBasicos ID PC operacionesBasicas
    (84) operacionesBasicas -> . ID ASIG tipoValores operadoresBasicos tipoValores PC operacionesBasicas
    (85) operacionesBasicas -> . ID ASIG ID operadoresBasicos tipoValores PC operacionesBasicas
    (86) operacionesBasicas -> . ID ASIG tipoValores PC operacionesBasicas
    (87) operacionesBasicas -> . ID ASIG ID P ID PC operacionesBasicas
    (88) operacionesBasicas -> . ID ASIG ID PC operacionesBasicas
    (89) operacionesBasicas -> . ID P ID PC operacionesBasicas
    (90) operacionesBasicas -> . ID ASIG ID CORA NUMERO CORC PC operacionesBasicas
    (91) operacionesBasicas -> . ID CORA NUMERO CORC ASIG ID CORA NUMERO CORC PC operacionesBasicas
    (92) operacionesBasicas -> . ID CORA NUMERO CORC ASIG tipoValores PC operacionesBasicas
    (93) operacionesBasicas -> . ID PARENTA listaValores PARENTC PC operacionesBasicas
    (94) operacionesBasicas -> . ID ASIG ID PARENTA listaValores PARENTC PC operacionesBasicas
    (95) operacionesBasicas -> . empty
    (112) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 85
    ABIF            reduce using rule 112 (empty -> .)
    ABIJOR          reduce using rule 112 (empty -> .)
    ABIN            reduce using rule 112 (empty -> .)
    ABOUT           reduce using rule 112 (empty -> .)
    ABIDECLARA      reduce using rule 112 (empty -> .)
    INT             reduce using rule 112 (empty -> .)
    CHAR            reduce using rule 112 (empty -> .)
    STRING          reduce using rule 112 (empty -> .)
    BOOL            reduce using rule 112 (empty -> .)
    FLOAT           reduce using rule 112 (empty -> .)
    VOID            reduce using rule 112 (empty -> .)
    ABIRRAY         reduce using rule 112 (empty -> .)
    C               reduce using rule 112 (empty -> .)
    LLAVEC          reduce using rule 112 (empty -> .)
    RETURN          reduce using rule 112 (empty -> .)

  ! ID              [ reduce using rule 112 (empty -> .) ]

    operacionesBasicas             shift and go to state 239
    empty                          shift and go to state 86

state 222

    (31) declaracionCiclo -> ABIJOR PARENTA inicializacion PC cond PC . cambio PARENTC LLAVEA listaInst LLAVEC declaracionCiclo
    (41) cambio -> . ID ASIG ID AGREGA ID
    (42) cambio -> . ID ASIG ID RESTA ID
    (43) cambio -> . ID ASIG ID AGREGA NUMERO
    (44) cambio -> . ID ASIG ID RESTA NUMERO
    (45) cambio -> . ID INCREMENTO
    (46) cambio -> . ID DECREMENTO

    ID              shift and go to state 241

    cambio                         shift and go to state 240

state 223

    (35) cond -> ID operadores . ID
    (36) cond -> ID operadores . NUMERO

    ID              shift and go to state 242
    NUMERO          shift and go to state 243


state 224

    (37) operadores -> LT .

    ID              reduce using rule 37 (operadores -> LT .)
    NUMERO          reduce using rule 37 (operadores -> LT .)


state 225

    (38) operadores -> LTE .

    ID              reduce using rule 38 (operadores -> LTE .)
    NUMERO          reduce using rule 38 (operadores -> LTE .)


state 226

    (39) operadores -> GTE .

    ID              reduce using rule 39 (operadores -> GTE .)
    NUMERO          reduce using rule 39 (operadores -> GTE .)


state 227

    (40) operadores -> GT .

    ID              reduce using rule 40 (operadores -> GT .)
    NUMERO          reduce using rule 40 (operadores -> GT .)


state 228

    (33) inicializacion -> INT ID ASIG NUMERO .

    PC              reduce using rule 33 (inicializacion -> INT ID ASIG NUMERO .)


state 229

    (47) declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC . declaracionElse declaracionIf
    (48) declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC . declaracionIf
    (50) declaracionElse -> . ELSE LLAVEA listaInst LLAVEC
    (47) declaracionIf -> . ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionElse declaracionIf
    (48) declaracionIf -> . ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionIf
    (49) declaracionIf -> . empty
    (112) empty -> .

  ! shift/reduce conflict for ABIF resolved as shift
    ELSE            shift and go to state 246
    ABIF            shift and go to state 97
    ABIJOR          reduce using rule 112 (empty -> .)
    ABIN            reduce using rule 112 (empty -> .)
    ABOUT           reduce using rule 112 (empty -> .)
    ABIDECLARA      reduce using rule 112 (empty -> .)
    INT             reduce using rule 112 (empty -> .)
    CHAR            reduce using rule 112 (empty -> .)
    STRING          reduce using rule 112 (empty -> .)
    BOOL            reduce using rule 112 (empty -> .)
    FLOAT           reduce using rule 112 (empty -> .)
    VOID            reduce using rule 112 (empty -> .)
    ABIRRAY         reduce using rule 112 (empty -> .)
    C               reduce using rule 112 (empty -> .)
    ID              reduce using rule 112 (empty -> .)
    LLAVEC          reduce using rule 112 (empty -> .)
    RETURN          reduce using rule 112 (empty -> .)

  ! ABIF            [ reduce using rule 112 (empty -> .) ]

    declaracionElse                shift and go to state 244
    declaracionIf                  shift and go to state 245
    empty                          shift and go to state 98

state 230

    (51) condicion -> ID operadoresRel ID operadoresLogicos condicion .

    PARENTC         reduce using rule 51 (condicion -> ID operadoresRel ID operadoresLogicos condicion .)


state 231

    (55) condicion -> ID operadoresRel tipoValores operadoresLogicos condicion .

    PARENTC         reduce using rule 55 (condicion -> ID operadoresRel tipoValores operadoresLogicos condicion .)


state 232

    (61) condicion -> ID operadoresRel NOT ID operadoresLogicos . condicion
    (51) condicion -> . ID operadoresRel ID operadoresLogicos condicion
    (52) condicion -> . ID operadoresRel ID
    (53) condicion -> . ID
    (54) condicion -> . tipoValores
    (55) condicion -> . ID operadoresRel tipoValores operadoresLogicos condicion
    (56) condicion -> . ID operadoresRel tipoValores
    (57) condicion -> . NOT ID operadoresRel ID operadoresLogicos condicion
    (58) condicion -> . NOT ID operadoresRel ID
    (59) condicion -> . NOT ID operadoresRel tipoValores operadoresLogicos condicion
    (60) condicion -> . NOT ID operadoresRel tipoValores
    (61) condicion -> . ID operadoresRel NOT ID operadoresLogicos condicion
    (62) condicion -> . ID operadoresRel NOT ID
    (63) condicion -> . ID operadoresRel NOT tipoValores operadoresLogicos condicion
    (64) condicion -> . ID operadoresRel NOT tipoValores
    (65) condicion -> . NOT PARENTA condicion PARENTC
    (14) tipoValores -> . NUMERO
    (15) tipoValores -> . FLOAT_VALOR
    (16) tipoValores -> . CHAR_VALOR
    (17) tipoValores -> . STRING_VALOR
    (18) tipoValores -> . TRUE
    (19) tipoValores -> . FALSE

    ID              shift and go to state 134
    NOT             shift and go to state 136
    NUMERO          shift and go to state 39
    FLOAT_VALOR     shift and go to state 40
    CHAR_VALOR      shift and go to state 41
    STRING_VALOR    shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

    condicion                      shift and go to state 247
    tipoValores                    shift and go to state 135

state 233

    (63) condicion -> ID operadoresRel NOT tipoValores operadoresLogicos . condicion
    (51) condicion -> . ID operadoresRel ID operadoresLogicos condicion
    (52) condicion -> . ID operadoresRel ID
    (53) condicion -> . ID
    (54) condicion -> . tipoValores
    (55) condicion -> . ID operadoresRel tipoValores operadoresLogicos condicion
    (56) condicion -> . ID operadoresRel tipoValores
    (57) condicion -> . NOT ID operadoresRel ID operadoresLogicos condicion
    (58) condicion -> . NOT ID operadoresRel ID
    (59) condicion -> . NOT ID operadoresRel tipoValores operadoresLogicos condicion
    (60) condicion -> . NOT ID operadoresRel tipoValores
    (61) condicion -> . ID operadoresRel NOT ID operadoresLogicos condicion
    (62) condicion -> . ID operadoresRel NOT ID
    (63) condicion -> . ID operadoresRel NOT tipoValores operadoresLogicos condicion
    (64) condicion -> . ID operadoresRel NOT tipoValores
    (65) condicion -> . NOT PARENTA condicion PARENTC
    (14) tipoValores -> . NUMERO
    (15) tipoValores -> . FLOAT_VALOR
    (16) tipoValores -> . CHAR_VALOR
    (17) tipoValores -> . STRING_VALOR
    (18) tipoValores -> . TRUE
    (19) tipoValores -> . FALSE

    ID              shift and go to state 134
    NOT             shift and go to state 136
    NUMERO          shift and go to state 39
    FLOAT_VALOR     shift and go to state 40
    CHAR_VALOR      shift and go to state 41
    STRING_VALOR    shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

    tipoValores                    shift and go to state 135
    condicion                      shift and go to state 248

state 234

    (57) condicion -> NOT ID operadoresRel ID operadoresLogicos . condicion
    (51) condicion -> . ID operadoresRel ID operadoresLogicos condicion
    (52) condicion -> . ID operadoresRel ID
    (53) condicion -> . ID
    (54) condicion -> . tipoValores
    (55) condicion -> . ID operadoresRel tipoValores operadoresLogicos condicion
    (56) condicion -> . ID operadoresRel tipoValores
    (57) condicion -> . NOT ID operadoresRel ID operadoresLogicos condicion
    (58) condicion -> . NOT ID operadoresRel ID
    (59) condicion -> . NOT ID operadoresRel tipoValores operadoresLogicos condicion
    (60) condicion -> . NOT ID operadoresRel tipoValores
    (61) condicion -> . ID operadoresRel NOT ID operadoresLogicos condicion
    (62) condicion -> . ID operadoresRel NOT ID
    (63) condicion -> . ID operadoresRel NOT tipoValores operadoresLogicos condicion
    (64) condicion -> . ID operadoresRel NOT tipoValores
    (65) condicion -> . NOT PARENTA condicion PARENTC
    (14) tipoValores -> . NUMERO
    (15) tipoValores -> . FLOAT_VALOR
    (16) tipoValores -> . CHAR_VALOR
    (17) tipoValores -> . STRING_VALOR
    (18) tipoValores -> . TRUE
    (19) tipoValores -> . FALSE

    ID              shift and go to state 134
    NOT             shift and go to state 136
    NUMERO          shift and go to state 39
    FLOAT_VALOR     shift and go to state 40
    CHAR_VALOR      shift and go to state 41
    STRING_VALOR    shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

    condicion                      shift and go to state 249
    tipoValores                    shift and go to state 135

state 235

    (59) condicion -> NOT ID operadoresRel tipoValores operadoresLogicos . condicion
    (51) condicion -> . ID operadoresRel ID operadoresLogicos condicion
    (52) condicion -> . ID operadoresRel ID
    (53) condicion -> . ID
    (54) condicion -> . tipoValores
    (55) condicion -> . ID operadoresRel tipoValores operadoresLogicos condicion
    (56) condicion -> . ID operadoresRel tipoValores
    (57) condicion -> . NOT ID operadoresRel ID operadoresLogicos condicion
    (58) condicion -> . NOT ID operadoresRel ID
    (59) condicion -> . NOT ID operadoresRel tipoValores operadoresLogicos condicion
    (60) condicion -> . NOT ID operadoresRel tipoValores
    (61) condicion -> . ID operadoresRel NOT ID operadoresLogicos condicion
    (62) condicion -> . ID operadoresRel NOT ID
    (63) condicion -> . ID operadoresRel NOT tipoValores operadoresLogicos condicion
    (64) condicion -> . ID operadoresRel NOT tipoValores
    (65) condicion -> . NOT PARENTA condicion PARENTC
    (14) tipoValores -> . NUMERO
    (15) tipoValores -> . FLOAT_VALOR
    (16) tipoValores -> . CHAR_VALOR
    (17) tipoValores -> . STRING_VALOR
    (18) tipoValores -> . TRUE
    (19) tipoValores -> . FALSE

    ID              shift and go to state 134
    NOT             shift and go to state 136
    NUMERO          shift and go to state 39
    FLOAT_VALOR     shift and go to state 40
    CHAR_VALOR      shift and go to state 41
    STRING_VALOR    shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

    tipoValores                    shift and go to state 135
    condicion                      shift and go to state 250

state 236

    (90) operacionesBasicas -> ID ASIG ID CORA NUMERO CORC PC operacionesBasicas .

    ABIF            reduce using rule 90 (operacionesBasicas -> ID ASIG ID CORA NUMERO CORC PC operacionesBasicas .)
    ABIJOR          reduce using rule 90 (operacionesBasicas -> ID ASIG ID CORA NUMERO CORC PC operacionesBasicas .)
    ABIN            reduce using rule 90 (operacionesBasicas -> ID ASIG ID CORA NUMERO CORC PC operacionesBasicas .)
    ABOUT           reduce using rule 90 (operacionesBasicas -> ID ASIG ID CORA NUMERO CORC PC operacionesBasicas .)
    ABIDECLARA      reduce using rule 90 (operacionesBasicas -> ID ASIG ID CORA NUMERO CORC PC operacionesBasicas .)
    INT             reduce using rule 90 (operacionesBasicas -> ID ASIG ID CORA NUMERO CORC PC operacionesBasicas .)
    CHAR            reduce using rule 90 (operacionesBasicas -> ID ASIG ID CORA NUMERO CORC PC operacionesBasicas .)
    STRING          reduce using rule 90 (operacionesBasicas -> ID ASIG ID CORA NUMERO CORC PC operacionesBasicas .)
    BOOL            reduce using rule 90 (operacionesBasicas -> ID ASIG ID CORA NUMERO CORC PC operacionesBasicas .)
    FLOAT           reduce using rule 90 (operacionesBasicas -> ID ASIG ID CORA NUMERO CORC PC operacionesBasicas .)
    VOID            reduce using rule 90 (operacionesBasicas -> ID ASIG ID CORA NUMERO CORC PC operacionesBasicas .)
    ABIRRAY         reduce using rule 90 (operacionesBasicas -> ID ASIG ID CORA NUMERO CORC PC operacionesBasicas .)
    C               reduce using rule 90 (operacionesBasicas -> ID ASIG ID CORA NUMERO CORC PC operacionesBasicas .)
    ID              reduce using rule 90 (operacionesBasicas -> ID ASIG ID CORA NUMERO CORC PC operacionesBasicas .)
    LLAVEC          reduce using rule 90 (operacionesBasicas -> ID ASIG ID CORA NUMERO CORC PC operacionesBasicas .)
    RETURN          reduce using rule 90 (operacionesBasicas -> ID ASIG ID CORA NUMERO CORC PC operacionesBasicas .)


state 237

    (94) operacionesBasicas -> ID ASIG ID PARENTA listaValores PARENTC PC operacionesBasicas .

    ABIF            reduce using rule 94 (operacionesBasicas -> ID ASIG ID PARENTA listaValores PARENTC PC operacionesBasicas .)
    ABIJOR          reduce using rule 94 (operacionesBasicas -> ID ASIG ID PARENTA listaValores PARENTC PC operacionesBasicas .)
    ABIN            reduce using rule 94 (operacionesBasicas -> ID ASIG ID PARENTA listaValores PARENTC PC operacionesBasicas .)
    ABOUT           reduce using rule 94 (operacionesBasicas -> ID ASIG ID PARENTA listaValores PARENTC PC operacionesBasicas .)
    ABIDECLARA      reduce using rule 94 (operacionesBasicas -> ID ASIG ID PARENTA listaValores PARENTC PC operacionesBasicas .)
    INT             reduce using rule 94 (operacionesBasicas -> ID ASIG ID PARENTA listaValores PARENTC PC operacionesBasicas .)
    CHAR            reduce using rule 94 (operacionesBasicas -> ID ASIG ID PARENTA listaValores PARENTC PC operacionesBasicas .)
    STRING          reduce using rule 94 (operacionesBasicas -> ID ASIG ID PARENTA listaValores PARENTC PC operacionesBasicas .)
    BOOL            reduce using rule 94 (operacionesBasicas -> ID ASIG ID PARENTA listaValores PARENTC PC operacionesBasicas .)
    FLOAT           reduce using rule 94 (operacionesBasicas -> ID ASIG ID PARENTA listaValores PARENTC PC operacionesBasicas .)
    VOID            reduce using rule 94 (operacionesBasicas -> ID ASIG ID PARENTA listaValores PARENTC PC operacionesBasicas .)
    ABIRRAY         reduce using rule 94 (operacionesBasicas -> ID ASIG ID PARENTA listaValores PARENTC PC operacionesBasicas .)
    C               reduce using rule 94 (operacionesBasicas -> ID ASIG ID PARENTA listaValores PARENTC PC operacionesBasicas .)
    ID              reduce using rule 94 (operacionesBasicas -> ID ASIG ID PARENTA listaValores PARENTC PC operacionesBasicas .)
    LLAVEC          reduce using rule 94 (operacionesBasicas -> ID ASIG ID PARENTA listaValores PARENTC PC operacionesBasicas .)
    RETURN          reduce using rule 94 (operacionesBasicas -> ID ASIG ID PARENTA listaValores PARENTC PC operacionesBasicas .)


state 238

    (91) operacionesBasicas -> ID CORA NUMERO CORC ASIG ID CORA NUMERO . CORC PC operacionesBasicas

    CORC            shift and go to state 251


state 239

    (92) operacionesBasicas -> ID CORA NUMERO CORC ASIG tipoValores PC operacionesBasicas .

    ABIF            reduce using rule 92 (operacionesBasicas -> ID CORA NUMERO CORC ASIG tipoValores PC operacionesBasicas .)
    ABIJOR          reduce using rule 92 (operacionesBasicas -> ID CORA NUMERO CORC ASIG tipoValores PC operacionesBasicas .)
    ABIN            reduce using rule 92 (operacionesBasicas -> ID CORA NUMERO CORC ASIG tipoValores PC operacionesBasicas .)
    ABOUT           reduce using rule 92 (operacionesBasicas -> ID CORA NUMERO CORC ASIG tipoValores PC operacionesBasicas .)
    ABIDECLARA      reduce using rule 92 (operacionesBasicas -> ID CORA NUMERO CORC ASIG tipoValores PC operacionesBasicas .)
    INT             reduce using rule 92 (operacionesBasicas -> ID CORA NUMERO CORC ASIG tipoValores PC operacionesBasicas .)
    CHAR            reduce using rule 92 (operacionesBasicas -> ID CORA NUMERO CORC ASIG tipoValores PC operacionesBasicas .)
    STRING          reduce using rule 92 (operacionesBasicas -> ID CORA NUMERO CORC ASIG tipoValores PC operacionesBasicas .)
    BOOL            reduce using rule 92 (operacionesBasicas -> ID CORA NUMERO CORC ASIG tipoValores PC operacionesBasicas .)
    FLOAT           reduce using rule 92 (operacionesBasicas -> ID CORA NUMERO CORC ASIG tipoValores PC operacionesBasicas .)
    VOID            reduce using rule 92 (operacionesBasicas -> ID CORA NUMERO CORC ASIG tipoValores PC operacionesBasicas .)
    ABIRRAY         reduce using rule 92 (operacionesBasicas -> ID CORA NUMERO CORC ASIG tipoValores PC operacionesBasicas .)
    C               reduce using rule 92 (operacionesBasicas -> ID CORA NUMERO CORC ASIG tipoValores PC operacionesBasicas .)
    ID              reduce using rule 92 (operacionesBasicas -> ID CORA NUMERO CORC ASIG tipoValores PC operacionesBasicas .)
    LLAVEC          reduce using rule 92 (operacionesBasicas -> ID CORA NUMERO CORC ASIG tipoValores PC operacionesBasicas .)
    RETURN          reduce using rule 92 (operacionesBasicas -> ID CORA NUMERO CORC ASIG tipoValores PC operacionesBasicas .)


state 240

    (31) declaracionCiclo -> ABIJOR PARENTA inicializacion PC cond PC cambio . PARENTC LLAVEA listaInst LLAVEC declaracionCiclo

    PARENTC         shift and go to state 252


state 241

    (41) cambio -> ID . ASIG ID AGREGA ID
    (42) cambio -> ID . ASIG ID RESTA ID
    (43) cambio -> ID . ASIG ID AGREGA NUMERO
    (44) cambio -> ID . ASIG ID RESTA NUMERO
    (45) cambio -> ID . INCREMENTO
    (46) cambio -> ID . DECREMENTO

    ASIG            shift and go to state 253
    INCREMENTO      shift and go to state 254
    DECREMENTO      shift and go to state 255


state 242

    (35) cond -> ID operadores ID .

    PC              reduce using rule 35 (cond -> ID operadores ID .)


state 243

    (36) cond -> ID operadores NUMERO .

    PC              reduce using rule 36 (cond -> ID operadores NUMERO .)


state 244

    (47) declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionElse . declaracionIf
    (47) declaracionIf -> . ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionElse declaracionIf
    (48) declaracionIf -> . ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionIf
    (49) declaracionIf -> . empty
    (112) empty -> .

  ! shift/reduce conflict for ABIF resolved as shift
    ABIF            shift and go to state 97
    ABIJOR          reduce using rule 112 (empty -> .)
    ABIN            reduce using rule 112 (empty -> .)
    ABOUT           reduce using rule 112 (empty -> .)
    ABIDECLARA      reduce using rule 112 (empty -> .)
    INT             reduce using rule 112 (empty -> .)
    CHAR            reduce using rule 112 (empty -> .)
    STRING          reduce using rule 112 (empty -> .)
    BOOL            reduce using rule 112 (empty -> .)
    FLOAT           reduce using rule 112 (empty -> .)
    VOID            reduce using rule 112 (empty -> .)
    ABIRRAY         reduce using rule 112 (empty -> .)
    C               reduce using rule 112 (empty -> .)
    ID              reduce using rule 112 (empty -> .)
    LLAVEC          reduce using rule 112 (empty -> .)
    RETURN          reduce using rule 112 (empty -> .)

  ! ABIF            [ reduce using rule 112 (empty -> .) ]

    declaracionIf                  shift and go to state 256
    empty                          shift and go to state 98

state 245

    (48) declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionIf .

    ABIJOR          reduce using rule 48 (declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionIf .)
    ABIN            reduce using rule 48 (declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionIf .)
    ABOUT           reduce using rule 48 (declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionIf .)
    ABIDECLARA      reduce using rule 48 (declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionIf .)
    INT             reduce using rule 48 (declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionIf .)
    CHAR            reduce using rule 48 (declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionIf .)
    STRING          reduce using rule 48 (declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionIf .)
    BOOL            reduce using rule 48 (declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionIf .)
    FLOAT           reduce using rule 48 (declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionIf .)
    VOID            reduce using rule 48 (declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionIf .)
    ABIRRAY         reduce using rule 48 (declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionIf .)
    C               reduce using rule 48 (declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionIf .)
    ID              reduce using rule 48 (declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionIf .)
    ABIF            reduce using rule 48 (declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionIf .)
    LLAVEC          reduce using rule 48 (declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionIf .)
    RETURN          reduce using rule 48 (declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionIf .)


state 246

    (50) declaracionElse -> ELSE . LLAVEA listaInst LLAVEC

    LLAVEA          shift and go to state 257


state 247

    (61) condicion -> ID operadoresRel NOT ID operadoresLogicos condicion .

    PARENTC         reduce using rule 61 (condicion -> ID operadoresRel NOT ID operadoresLogicos condicion .)


state 248

    (63) condicion -> ID operadoresRel NOT tipoValores operadoresLogicos condicion .

    PARENTC         reduce using rule 63 (condicion -> ID operadoresRel NOT tipoValores operadoresLogicos condicion .)


state 249

    (57) condicion -> NOT ID operadoresRel ID operadoresLogicos condicion .

    PARENTC         reduce using rule 57 (condicion -> NOT ID operadoresRel ID operadoresLogicos condicion .)


state 250

    (59) condicion -> NOT ID operadoresRel tipoValores operadoresLogicos condicion .

    PARENTC         reduce using rule 59 (condicion -> NOT ID operadoresRel tipoValores operadoresLogicos condicion .)


state 251

    (91) operacionesBasicas -> ID CORA NUMERO CORC ASIG ID CORA NUMERO CORC . PC operacionesBasicas

    PC              shift and go to state 258


state 252

    (31) declaracionCiclo -> ABIJOR PARENTA inicializacion PC cond PC cambio PARENTC . LLAVEA listaInst LLAVEC declaracionCiclo

    LLAVEA          shift and go to state 259


state 253

    (41) cambio -> ID ASIG . ID AGREGA ID
    (42) cambio -> ID ASIG . ID RESTA ID
    (43) cambio -> ID ASIG . ID AGREGA NUMERO
    (44) cambio -> ID ASIG . ID RESTA NUMERO

    ID              shift and go to state 260


state 254

    (45) cambio -> ID INCREMENTO .

    PARENTC         reduce using rule 45 (cambio -> ID INCREMENTO .)


state 255

    (46) cambio -> ID DECREMENTO .

    PARENTC         reduce using rule 46 (cambio -> ID DECREMENTO .)


state 256

    (47) declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionElse declaracionIf .

    ABIJOR          reduce using rule 47 (declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionElse declaracionIf .)
    ABIN            reduce using rule 47 (declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionElse declaracionIf .)
    ABOUT           reduce using rule 47 (declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionElse declaracionIf .)
    ABIDECLARA      reduce using rule 47 (declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionElse declaracionIf .)
    INT             reduce using rule 47 (declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionElse declaracionIf .)
    CHAR            reduce using rule 47 (declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionElse declaracionIf .)
    STRING          reduce using rule 47 (declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionElse declaracionIf .)
    BOOL            reduce using rule 47 (declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionElse declaracionIf .)
    FLOAT           reduce using rule 47 (declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionElse declaracionIf .)
    VOID            reduce using rule 47 (declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionElse declaracionIf .)
    ABIRRAY         reduce using rule 47 (declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionElse declaracionIf .)
    C               reduce using rule 47 (declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionElse declaracionIf .)
    ID              reduce using rule 47 (declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionElse declaracionIf .)
    ABIF            reduce using rule 47 (declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionElse declaracionIf .)
    LLAVEC          reduce using rule 47 (declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionElse declaracionIf .)
    RETURN          reduce using rule 47 (declaracionIf -> ABIF PARENTA condicion PARENTC LLAVEA listaInst LLAVEC declaracionElse declaracionIf .)


state 257

    (50) declaracionElse -> ELSE LLAVEA . listaInst LLAVEC
    (107) listaInst -> . listaInstrucciones
    (108) listaInst -> . listaInstrucciones listaInst
    (109) listaInst -> . empty
    (106) listaInstrucciones -> . entradaDatos salidaDatos declaraStruct declaracionVariable operacionesBasicas declaracionIf declaracionCiclo
    (112) empty -> .
    (74) entradaDatos -> . ABIN PARENTA ID PARENTC PC entradaDatos
    (75) entradaDatos -> . empty

  ! shift/reduce conflict for ABIN resolved as shift
    LLAVEC          reduce using rule 112 (empty -> .)
    ABOUT           reduce using rule 112 (empty -> .)
    ABIDECLARA      reduce using rule 112 (empty -> .)
    INT             reduce using rule 112 (empty -> .)
    CHAR            reduce using rule 112 (empty -> .)
    STRING          reduce using rule 112 (empty -> .)
    BOOL            reduce using rule 112 (empty -> .)
    FLOAT           reduce using rule 112 (empty -> .)
    VOID            reduce using rule 112 (empty -> .)
    ABIRRAY         reduce using rule 112 (empty -> .)
    C               reduce using rule 112 (empty -> .)
    ID              reduce using rule 112 (empty -> .)
    ABIF            reduce using rule 112 (empty -> .)
    ABIJOR          reduce using rule 112 (empty -> .)
    ABIN            shift and go to state 50

  ! ABIN            [ reduce using rule 112 (empty -> .) ]

    listaInst                      shift and go to state 261
    listaInstrucciones             shift and go to state 47
    empty                          shift and go to state 48
    entradaDatos                   shift and go to state 49

state 258

    (91) operacionesBasicas -> ID CORA NUMERO CORC ASIG ID CORA NUMERO CORC PC . operacionesBasicas
    (82) operacionesBasicas -> . ID ASIG ID operadoresBasicos ID PC operacionesBasicas
    (83) operacionesBasicas -> . ID ASIG tipoValores operadoresBasicos ID PC operacionesBasicas
    (84) operacionesBasicas -> . ID ASIG tipoValores operadoresBasicos tipoValores PC operacionesBasicas
    (85) operacionesBasicas -> . ID ASIG ID operadoresBasicos tipoValores PC operacionesBasicas
    (86) operacionesBasicas -> . ID ASIG tipoValores PC operacionesBasicas
    (87) operacionesBasicas -> . ID ASIG ID P ID PC operacionesBasicas
    (88) operacionesBasicas -> . ID ASIG ID PC operacionesBasicas
    (89) operacionesBasicas -> . ID P ID PC operacionesBasicas
    (90) operacionesBasicas -> . ID ASIG ID CORA NUMERO CORC PC operacionesBasicas
    (91) operacionesBasicas -> . ID CORA NUMERO CORC ASIG ID CORA NUMERO CORC PC operacionesBasicas
    (92) operacionesBasicas -> . ID CORA NUMERO CORC ASIG tipoValores PC operacionesBasicas
    (93) operacionesBasicas -> . ID PARENTA listaValores PARENTC PC operacionesBasicas
    (94) operacionesBasicas -> . ID ASIG ID PARENTA listaValores PARENTC PC operacionesBasicas
    (95) operacionesBasicas -> . empty
    (112) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 85
    ABIF            reduce using rule 112 (empty -> .)
    ABIJOR          reduce using rule 112 (empty -> .)
    ABIN            reduce using rule 112 (empty -> .)
    ABOUT           reduce using rule 112 (empty -> .)
    ABIDECLARA      reduce using rule 112 (empty -> .)
    INT             reduce using rule 112 (empty -> .)
    CHAR            reduce using rule 112 (empty -> .)
    STRING          reduce using rule 112 (empty -> .)
    BOOL            reduce using rule 112 (empty -> .)
    FLOAT           reduce using rule 112 (empty -> .)
    VOID            reduce using rule 112 (empty -> .)
    ABIRRAY         reduce using rule 112 (empty -> .)
    C               reduce using rule 112 (empty -> .)
    LLAVEC          reduce using rule 112 (empty -> .)
    RETURN          reduce using rule 112 (empty -> .)

  ! ID              [ reduce using rule 112 (empty -> .) ]

    operacionesBasicas             shift and go to state 262
    empty                          shift and go to state 86

state 259

    (31) declaracionCiclo -> ABIJOR PARENTA inicializacion PC cond PC cambio PARENTC LLAVEA . listaInst LLAVEC declaracionCiclo
    (107) listaInst -> . listaInstrucciones
    (108) listaInst -> . listaInstrucciones listaInst
    (109) listaInst -> . empty
    (106) listaInstrucciones -> . entradaDatos salidaDatos declaraStruct declaracionVariable operacionesBasicas declaracionIf declaracionCiclo
    (112) empty -> .
    (74) entradaDatos -> . ABIN PARENTA ID PARENTC PC entradaDatos
    (75) entradaDatos -> . empty

  ! shift/reduce conflict for ABIN resolved as shift
    LLAVEC          reduce using rule 112 (empty -> .)
    ABOUT           reduce using rule 112 (empty -> .)
    ABIDECLARA      reduce using rule 112 (empty -> .)
    INT             reduce using rule 112 (empty -> .)
    CHAR            reduce using rule 112 (empty -> .)
    STRING          reduce using rule 112 (empty -> .)
    BOOL            reduce using rule 112 (empty -> .)
    FLOAT           reduce using rule 112 (empty -> .)
    VOID            reduce using rule 112 (empty -> .)
    ABIRRAY         reduce using rule 112 (empty -> .)
    C               reduce using rule 112 (empty -> .)
    ID              reduce using rule 112 (empty -> .)
    ABIF            reduce using rule 112 (empty -> .)
    ABIJOR          reduce using rule 112 (empty -> .)
    ABIN            shift and go to state 50

  ! ABIN            [ reduce using rule 112 (empty -> .) ]

    listaInst                      shift and go to state 263
    listaInstrucciones             shift and go to state 47
    empty                          shift and go to state 48
    entradaDatos                   shift and go to state 49

state 260

    (41) cambio -> ID ASIG ID . AGREGA ID
    (42) cambio -> ID ASIG ID . RESTA ID
    (43) cambio -> ID ASIG ID . AGREGA NUMERO
    (44) cambio -> ID ASIG ID . RESTA NUMERO

    AGREGA          shift and go to state 264
    RESTA           shift and go to state 265


state 261

    (50) declaracionElse -> ELSE LLAVEA listaInst . LLAVEC

    LLAVEC          shift and go to state 266


state 262

    (91) operacionesBasicas -> ID CORA NUMERO CORC ASIG ID CORA NUMERO CORC PC operacionesBasicas .

    ABIF            reduce using rule 91 (operacionesBasicas -> ID CORA NUMERO CORC ASIG ID CORA NUMERO CORC PC operacionesBasicas .)
    ABIJOR          reduce using rule 91 (operacionesBasicas -> ID CORA NUMERO CORC ASIG ID CORA NUMERO CORC PC operacionesBasicas .)
    ABIN            reduce using rule 91 (operacionesBasicas -> ID CORA NUMERO CORC ASIG ID CORA NUMERO CORC PC operacionesBasicas .)
    ABOUT           reduce using rule 91 (operacionesBasicas -> ID CORA NUMERO CORC ASIG ID CORA NUMERO CORC PC operacionesBasicas .)
    ABIDECLARA      reduce using rule 91 (operacionesBasicas -> ID CORA NUMERO CORC ASIG ID CORA NUMERO CORC PC operacionesBasicas .)
    INT             reduce using rule 91 (operacionesBasicas -> ID CORA NUMERO CORC ASIG ID CORA NUMERO CORC PC operacionesBasicas .)
    CHAR            reduce using rule 91 (operacionesBasicas -> ID CORA NUMERO CORC ASIG ID CORA NUMERO CORC PC operacionesBasicas .)
    STRING          reduce using rule 91 (operacionesBasicas -> ID CORA NUMERO CORC ASIG ID CORA NUMERO CORC PC operacionesBasicas .)
    BOOL            reduce using rule 91 (operacionesBasicas -> ID CORA NUMERO CORC ASIG ID CORA NUMERO CORC PC operacionesBasicas .)
    FLOAT           reduce using rule 91 (operacionesBasicas -> ID CORA NUMERO CORC ASIG ID CORA NUMERO CORC PC operacionesBasicas .)
    VOID            reduce using rule 91 (operacionesBasicas -> ID CORA NUMERO CORC ASIG ID CORA NUMERO CORC PC operacionesBasicas .)
    ABIRRAY         reduce using rule 91 (operacionesBasicas -> ID CORA NUMERO CORC ASIG ID CORA NUMERO CORC PC operacionesBasicas .)
    C               reduce using rule 91 (operacionesBasicas -> ID CORA NUMERO CORC ASIG ID CORA NUMERO CORC PC operacionesBasicas .)
    ID              reduce using rule 91 (operacionesBasicas -> ID CORA NUMERO CORC ASIG ID CORA NUMERO CORC PC operacionesBasicas .)
    LLAVEC          reduce using rule 91 (operacionesBasicas -> ID CORA NUMERO CORC ASIG ID CORA NUMERO CORC PC operacionesBasicas .)
    RETURN          reduce using rule 91 (operacionesBasicas -> ID CORA NUMERO CORC ASIG ID CORA NUMERO CORC PC operacionesBasicas .)


state 263

    (31) declaracionCiclo -> ABIJOR PARENTA inicializacion PC cond PC cambio PARENTC LLAVEA listaInst . LLAVEC declaracionCiclo

    LLAVEC          shift and go to state 267


state 264

    (41) cambio -> ID ASIG ID AGREGA . ID
    (43) cambio -> ID ASIG ID AGREGA . NUMERO

    ID              shift and go to state 268
    NUMERO          shift and go to state 269


state 265

    (42) cambio -> ID ASIG ID RESTA . ID
    (44) cambio -> ID ASIG ID RESTA . NUMERO

    ID              shift and go to state 270
    NUMERO          shift and go to state 271


state 266

    (50) declaracionElse -> ELSE LLAVEA listaInst LLAVEC .

    ABIF            reduce using rule 50 (declaracionElse -> ELSE LLAVEA listaInst LLAVEC .)
    ABIJOR          reduce using rule 50 (declaracionElse -> ELSE LLAVEA listaInst LLAVEC .)
    ABIN            reduce using rule 50 (declaracionElse -> ELSE LLAVEA listaInst LLAVEC .)
    ABOUT           reduce using rule 50 (declaracionElse -> ELSE LLAVEA listaInst LLAVEC .)
    ABIDECLARA      reduce using rule 50 (declaracionElse -> ELSE LLAVEA listaInst LLAVEC .)
    INT             reduce using rule 50 (declaracionElse -> ELSE LLAVEA listaInst LLAVEC .)
    CHAR            reduce using rule 50 (declaracionElse -> ELSE LLAVEA listaInst LLAVEC .)
    STRING          reduce using rule 50 (declaracionElse -> ELSE LLAVEA listaInst LLAVEC .)
    BOOL            reduce using rule 50 (declaracionElse -> ELSE LLAVEA listaInst LLAVEC .)
    FLOAT           reduce using rule 50 (declaracionElse -> ELSE LLAVEA listaInst LLAVEC .)
    VOID            reduce using rule 50 (declaracionElse -> ELSE LLAVEA listaInst LLAVEC .)
    ABIRRAY         reduce using rule 50 (declaracionElse -> ELSE LLAVEA listaInst LLAVEC .)
    C               reduce using rule 50 (declaracionElse -> ELSE LLAVEA listaInst LLAVEC .)
    ID              reduce using rule 50 (declaracionElse -> ELSE LLAVEA listaInst LLAVEC .)
    LLAVEC          reduce using rule 50 (declaracionElse -> ELSE LLAVEA listaInst LLAVEC .)
    RETURN          reduce using rule 50 (declaracionElse -> ELSE LLAVEA listaInst LLAVEC .)


state 267

    (31) declaracionCiclo -> ABIJOR PARENTA inicializacion PC cond PC cambio PARENTC LLAVEA listaInst LLAVEC . declaracionCiclo
    (31) declaracionCiclo -> . ABIJOR PARENTA inicializacion PC cond PC cambio PARENTC LLAVEA listaInst LLAVEC declaracionCiclo
    (32) declaracionCiclo -> . empty
    (112) empty -> .

  ! shift/reduce conflict for ABIJOR resolved as shift
    ABIJOR          shift and go to state 115
    ABIN            reduce using rule 112 (empty -> .)
    ABOUT           reduce using rule 112 (empty -> .)
    ABIDECLARA      reduce using rule 112 (empty -> .)
    INT             reduce using rule 112 (empty -> .)
    CHAR            reduce using rule 112 (empty -> .)
    STRING          reduce using rule 112 (empty -> .)
    BOOL            reduce using rule 112 (empty -> .)
    FLOAT           reduce using rule 112 (empty -> .)
    VOID            reduce using rule 112 (empty -> .)
    ABIRRAY         reduce using rule 112 (empty -> .)
    C               reduce using rule 112 (empty -> .)
    ID              reduce using rule 112 (empty -> .)
    ABIF            reduce using rule 112 (empty -> .)
    LLAVEC          reduce using rule 112 (empty -> .)
    RETURN          reduce using rule 112 (empty -> .)

  ! ABIJOR          [ reduce using rule 112 (empty -> .) ]

    declaracionCiclo               shift and go to state 272
    empty                          shift and go to state 116

state 268

    (41) cambio -> ID ASIG ID AGREGA ID .

    PARENTC         reduce using rule 41 (cambio -> ID ASIG ID AGREGA ID .)


state 269

    (43) cambio -> ID ASIG ID AGREGA NUMERO .

    PARENTC         reduce using rule 43 (cambio -> ID ASIG ID AGREGA NUMERO .)


state 270

    (42) cambio -> ID ASIG ID RESTA ID .

    PARENTC         reduce using rule 42 (cambio -> ID ASIG ID RESTA ID .)


state 271

    (44) cambio -> ID ASIG ID RESTA NUMERO .

    PARENTC         reduce using rule 44 (cambio -> ID ASIG ID RESTA NUMERO .)


state 272

    (31) declaracionCiclo -> ABIJOR PARENTA inicializacion PC cond PC cambio PARENTC LLAVEA listaInst LLAVEC declaracionCiclo .

    ABIN            reduce using rule 31 (declaracionCiclo -> ABIJOR PARENTA inicializacion PC cond PC cambio PARENTC LLAVEA listaInst LLAVEC declaracionCiclo .)
    ABOUT           reduce using rule 31 (declaracionCiclo -> ABIJOR PARENTA inicializacion PC cond PC cambio PARENTC LLAVEA listaInst LLAVEC declaracionCiclo .)
    ABIDECLARA      reduce using rule 31 (declaracionCiclo -> ABIJOR PARENTA inicializacion PC cond PC cambio PARENTC LLAVEA listaInst LLAVEC declaracionCiclo .)
    INT             reduce using rule 31 (declaracionCiclo -> ABIJOR PARENTA inicializacion PC cond PC cambio PARENTC LLAVEA listaInst LLAVEC declaracionCiclo .)
    CHAR            reduce using rule 31 (declaracionCiclo -> ABIJOR PARENTA inicializacion PC cond PC cambio PARENTC LLAVEA listaInst LLAVEC declaracionCiclo .)
    STRING          reduce using rule 31 (declaracionCiclo -> ABIJOR PARENTA inicializacion PC cond PC cambio PARENTC LLAVEA listaInst LLAVEC declaracionCiclo .)
    BOOL            reduce using rule 31 (declaracionCiclo -> ABIJOR PARENTA inicializacion PC cond PC cambio PARENTC LLAVEA listaInst LLAVEC declaracionCiclo .)
    FLOAT           reduce using rule 31 (declaracionCiclo -> ABIJOR PARENTA inicializacion PC cond PC cambio PARENTC LLAVEA listaInst LLAVEC declaracionCiclo .)
    VOID            reduce using rule 31 (declaracionCiclo -> ABIJOR PARENTA inicializacion PC cond PC cambio PARENTC LLAVEA listaInst LLAVEC declaracionCiclo .)
    ABIRRAY         reduce using rule 31 (declaracionCiclo -> ABIJOR PARENTA inicializacion PC cond PC cambio PARENTC LLAVEA listaInst LLAVEC declaracionCiclo .)
    C               reduce using rule 31 (declaracionCiclo -> ABIJOR PARENTA inicializacion PC cond PC cambio PARENTC LLAVEA listaInst LLAVEC declaracionCiclo .)
    ID              reduce using rule 31 (declaracionCiclo -> ABIJOR PARENTA inicializacion PC cond PC cambio PARENTC LLAVEA listaInst LLAVEC declaracionCiclo .)
    ABIF            reduce using rule 31 (declaracionCiclo -> ABIJOR PARENTA inicializacion PC cond PC cambio PARENTC LLAVEA listaInst LLAVEC declaracionCiclo .)
    ABIJOR          reduce using rule 31 (declaracionCiclo -> ABIJOR PARENTA inicializacion PC cond PC cambio PARENTC LLAVEA listaInst LLAVEC declaracionCiclo .)
    LLAVEC          reduce using rule 31 (declaracionCiclo -> ABIJOR PARENTA inicializacion PC cond PC cambio PARENTC LLAVEA listaInst LLAVEC declaracionCiclo .)
    RETURN          reduce using rule 31 (declaracionCiclo -> ABIJOR PARENTA inicializacion PC cond PC cambio PARENTC LLAVEA listaInst LLAVEC declaracionCiclo .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INT in state 24 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 24 resolved as shift
WARNING: shift/reduce conflict for STRING in state 24 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 24 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 24 resolved as shift
WARNING: shift/reduce conflict for VOID in state 24 resolved as shift
WARNING: shift/reduce conflict for ABIRRAY in state 24 resolved as shift
WARNING: shift/reduce conflict for C in state 32 resolved as shift
WARNING: shift/reduce conflict for ABIN in state 35 resolved as shift
WARNING: shift/reduce conflict for ABIN in state 47 resolved as shift
WARNING: shift/reduce conflict for ABOUT in state 49 resolved as shift
WARNING: shift/reduce conflict for ABIDECLARA in state 58 resolved as shift
WARNING: shift/reduce conflict for INT in state 67 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 67 resolved as shift
WARNING: shift/reduce conflict for STRING in state 67 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 67 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 67 resolved as shift
WARNING: shift/reduce conflict for VOID in state 67 resolved as shift
WARNING: shift/reduce conflict for ABIRRAY in state 67 resolved as shift
WARNING: shift/reduce conflict for ABIN in state 72 resolved as shift
WARNING: shift/reduce conflict for C in state 73 resolved as shift
WARNING: shift/reduce conflict for C in state 76 resolved as shift
WARNING: shift/reduce conflict for ID in state 76 resolved as shift
WARNING: shift/reduce conflict for ABIF in state 84 resolved as shift
WARNING: shift/reduce conflict for ABIN in state 92 resolved as shift
WARNING: shift/reduce conflict for ABIJOR in state 96 resolved as shift
WARNING: shift/reduce conflict for ABIDECLARA in state 103 resolved as shift
WARNING: shift/reduce conflict for ID in state 138 resolved as shift
WARNING: shift/reduce conflict for ID in state 147 resolved as shift
WARNING: shift/reduce conflict for ID in state 148 resolved as shift
WARNING: shift/reduce conflict for ABOUT in state 152 resolved as shift
WARNING: shift/reduce conflict for ID in state 177 resolved as shift
WARNING: shift/reduce conflict for C in state 178 resolved as shift
WARNING: shift/reduce conflict for ABIN in state 183 resolved as shift
WARNING: shift/reduce conflict for ID in state 189 resolved as shift
WARNING: shift/reduce conflict for ID in state 190 resolved as shift
WARNING: shift/reduce conflict for ID in state 191 resolved as shift
WARNING: shift/reduce conflict for ID in state 194 resolved as shift
WARNING: shift/reduce conflict for ID in state 195 resolved as shift
WARNING: shift/reduce conflict for ID in state 216 resolved as shift
WARNING: shift/reduce conflict for ID in state 217 resolved as shift
WARNING: shift/reduce conflict for ID in state 221 resolved as shift
WARNING: shift/reduce conflict for ABIF in state 229 resolved as shift
WARNING: shift/reduce conflict for ABIF in state 244 resolved as shift
WARNING: shift/reduce conflict for ABIN in state 257 resolved as shift
WARNING: shift/reduce conflict for ID in state 258 resolved as shift
WARNING: shift/reduce conflict for ABIN in state 259 resolved as shift
WARNING: shift/reduce conflict for ABIJOR in state 267 resolved as shift
WARNING: reduce/reduce conflict in state 47 resolved using rule (listaInst -> listaInstrucciones)
WARNING: rejected rule (empty -> <empty>) in state 47
WARNING: reduce/reduce conflict in state 48 resolved using rule (entradaDatos -> empty)
WARNING: rejected rule (listaInst -> empty) in state 48
WARNING: Rule (listaInst -> empty) is never reduced
